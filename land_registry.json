{
    "blocks": [
        {
            "Name": "land_registry_edit",
            "Value": "If(#LandId#>0){\n}.Else{\n    SetVar(notific_id, 0)\n    SetVar(LandId, 1)\n}\n\nIf(Or(#depart1#==1,#depart2#==1,#depart3#==1)){\n    SetVar(depart, 1)\n}.Else{\n    SetVar(depart, 0)\n}\nEcosysParam(Name: land_yes_no, Source: src_yes_no)\n\nDBFind(Name: land_registry, Source: _entry).WhereId(#LandId#).Vars(entry)\nDBFind(Name: members, Source: _members).Where(id=#entry_owner_id#).Vars(owner)\n\nDiv(content-wrapper red){\n    Div(breadcrumb){\n        Div(){\n            LinkPage(LangRes(land_records), land_registry_records, PageParams: \"admin=#admin#\").Style(margin-right: 10px;)\n            Span(/).Style(margin-right: 10px;)\n            Span(LangRes(land_records_edit) ##LandId#, text-muted).Style(margin-right: 10px;)\n            If(GetVar(owner_avatar)){\n                Image(Alt: ava, Class: img-thumbnail img-circle, Src: \"#owner_avatar#\").Style(width:30px;margin-right: 10px;)\n            }.Else{}\n            Span(#owner_member_name#, text-muted)\n        }\n    }\n    Div(row df f-valign){\n        \n        Div(col-sm-8 col-sm-offset-2 col-lg-6 col-lg-offset-3 mt-sm text-left){\n            Div(panel panel-primary data-sweet-alert){\n                Form(){\n                    Div(panel-heading){\n                        Div(panel-title){LangRes(land_records_edit)}\n                    }\n                    Div(list-group-item){\n                        Div(row df f-valign){\n                            Div(col-md-12 mt-sm text-left){\n                                If(#admin#==1){\n                                    InputMap(Name: Coords, Type:polygon, MapType:hybrid, Value:#entry_map_coords#)\n                                }.Else{\n                                    Map(MapType:hybrid,Hmap:300, Value:`#entry_map_coords#`)\n                                }\n                            }\n                        }\n                        Div(row df f-valign){\n                            If(#admin#==1){}.Else{\n                                Div(col-md-4 mt-sm text-right){\n                                    Strong(LangRes(area_size))\n                                    (Span(m).(2).Style(vertical-align: super;font-size:small;))\n                                }\n                                Div(col-md-8 mt-sm text-left){\n                                    Span(#entry_area#)\n                                }\n                            }\n                        }\n                        If(#admin#==1){}.Else{\n                            Div(row df f-valign){\n                                Div(col-md-4 mt-sm text-right){Strong(LangRes(address))}\n                                Div(col-md-8 mt-sm text-left){#entry_address#}\n                            }\n                        }\n                        \n                        If(#depart#==1){\n                            Div(row df f-valign){\n                                Div(col-md-4 mt-sm text-right h5){Strong(LangRes(owner))}\n                                Div(col-md-8 mt-sm text-left h5){\n                                    Image(Alt: ava, Class: img-thumbnail img-circle, Src: \"#owner_avatar#\").Style(width:40px;margin-right: 10px;)\n                                    Span(#owner_member_name#, text-muted)\n                                }\n                            }\n                        }\n                    }\n                    If(#depart#==1){\n                        Div(list-group-item){\n                            Div(row df f-valign){\n                                Div(col-md-4 mt-sm text-right h5){Strong(LangRes(registration_date):) }\n                                Div(col-md-8 mt-sm text-left h5){DateTime(#entry_registration_date#)}\n                            }\n                            Div(row df f-valign){\n                                Div(col-md-4 mt-sm text-right h5){Strong(LangRes(record_add_date):)}\n                                Div(col-md-8 mt-sm text-left h5){DateTime(#entry_date_create#)}\n                            }\n                            Div(row df f-valign){\n                                Div(col-md-4 mt-sm text-right h5){Strong(LangRes(modification_date):)}\n                                Div(col-md-8 mt-sm text-left h5){DateTime(#entry_modification_date#)}\n                            }\n                        }\n                    }\n                    \n                    Div(list-group-item){\n                        Div(row df f-valign){\n                            Div(col-md-4 mt-sm text-right){Strong(LangRes(land_use))}\n                            Div(col-md-8 mt-sm text-left){\n                                If(#admin#==1){\n                                    EcosysParam(Name: land_use, Source: src_use)\n                                    Select(Name: LandUse,Source: src_use,Class: form-control, Value: #entry_land_use#, NameColumn: name, ValueColumn: id)\n                                }.Else{\n                                    If(GetVar(entry_land_use)){\n                                        EcosysParam(Name: land_use, Index: #entry_land_use#)\n                                    }.Else{\n                                        LangRes(undefined)\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    Div(list-group-item){\n                        Div(row df f-valign){\n                            Div(col-md-4 mt-sm text-right){Strong(LangRes(buildings_use_class))}\n                            Div(col-md-8 mt-sm text-left){\n                                If(#admin#==1){\n                                    EcosysParam(Name: land_buildings_use_class, Source: src_buildings_use_class)\n                                    Select(Name: BuildingsUseClass, Source: src_buildings_use_class, Class: form-control, Value: #entry_buildings_use_class#, NameColumn: name, ValueColumn: id)\n                                }.Else{\n                                    If(GetVar(entry_buildings_use_class)){\n                                        EcosysParam(Name: buildings_use_class, Index: #entry_buildings_use_class#)\n                                    }.Else{\n                                        LangRes(undefined)\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    \n                    Div(list-group-item){\n                        Div(row df f-valign){\n                            Div(col-md-4 mt-sm text-right){Strong(LangRes(local_body))}\n                            Div(col-md-8 mt-sm text-left){\n                                If(#admin#==1){\n                                    EcosysParam(Name: land_local_body, Source: src_local_body)\n                                    Select(Name: LandLocalBody, Source: src_local_body,Class: form-control, Value: #entry_land_local_body#, NameColumn: name, ValueColumn: id)\n                                }.Else{\n                                    If(GetVar(entry_land_local_body)){\n                                        EcosysParam(Name: land_local_body, Index: #entry_land_local_body#)\n                                    }.Else{\n                                        LangRes(undefined)\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    Div(list-group-item){\n                        Div(row df f-valign){\n                            Div(col-md-4 mt-sm text-right){Strong(LangRes(land_nature))}\n                            Div(col-md-8 mt-sm text-left){\n                                If(#admin#==1){\n                                    EcosysParam(Name: land_nature, Source: src_nature)\n                                    Select(Name: LandNature,Source: src_nature, Class: form-control,Value: #entry_land_nature#, NameColumn: name, ValueColumn: id)\n                                }.Else{\n                                    If(GetVar(entry_land_nature)){\n                                        EcosysParam(Name: land_nature, Index: #entry_land_nature#)\n                                    }.Else{\n                                        LangRes(undefined)\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    \n                    \n                    If(#depart#==1){\n                        Div(list-group-item){\n                            Div(row df f-valign){\n                                Div(col-md-4 mt-sm text-right h5){Strong(LangRes(tax_and_bills))}\n                                Div(col-md-8 mt-sm text-left h5){\n                                    If(#depart3#==1){\n                                        Div(form-inline){\n                                            RadioGroup(Name: TaxReceiptAndBills, Source: src_yes_no, Class: form-control, Value: #entry_tax_and_bills#, NameColumn: name, ValueColumn: id)\n                                        }\n                                    }.Else{\n                                        If(GetVar(entry_tax_receipt_and_bills)){\n                                            EcosysParam(Name: land_yes_no, Index: #entry_tax_receipt_and_bills#)\n                                        }.Else{\n                                            LangRes(undefined)\n                                        }\n                                    }\n                                }\n                            }\n                            Div(row df f-valign){\n                                Div(col-md-4 mt-sm text-right h5){Strong(LangRes(market_value))}\n                                Div(col-md-8 mt-sm text-left h5){\n                                    If(#depart3#==1){\n                                        Input(Name: PriceMarket,Class: form-control input-sm, Value: #entry_price_market_value#, Type: number)\n                                    }.Else{\n                                        If(GetVar(entry_price_market_value)){\n                                            #entry_price_market_value#\n                                        }.Else{\n                                            LangRes(undefined)\n                                        }\n                                    }\n                                }\n                            }\n                            Div(row df f-valign){\n                                Div(col-md-4 mt-sm text-right h5){Strong(LangRes(government_value))}\n                                Div(col-md-8 mt-sm text-left h5){\n                                    If(#depart3#==1){\n                                        Input(Name: PriceGov,Class: form-control input-sm, Value: #entry_price_gov_value#, Type: number)\n                                    }.Else{\n                                        If(GetVar(entry_price_gov_value)){\n                                            #entry_price_gov_value#\n                                        }.Else{\n                                            LangRes(undefined)\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        Div(list-group-item){\n                            Div(row df f-valign){\n                                Div(col-md-4 mt-sm text-right h5){Strong(LangRes(consideration_value))}\n                                Div(col-md-8 mt-sm text-left h5){\n                                    If(#depart1#==1){\n                                        Input(Name: Price,Class: form-control input-sm, Value: #entry_price#, Type: number)\n                                    }.Else{\n                                        If(GetVar(entry_price)){\n                                            #entry_price#\n                                        }.Else{}\n                                    }\n                                }\n                            }\n                        }\n                        \n                        Div(list-group-item){\n                            Div(row df f-valign){\n                                Div(col-md-4 mt-sm text-right h5){Strong(LangRes(encumbrance_certificate))}\n                                Div(col-md-8 mt-sm text-left h5){\n                                    If(#depart2#==1){\n                                        Div(form-inline){\n                                            RadioGroup(Name: EncumbranceCertificate,Class: form-control, Value: #entry_encumbrance_certificate#, Source: src_yes_no, ValueColumn: id, NameColumn: name)\n                                        }\n                                    }.Else{\n                                        If(GetVar(entry_encumbrance_certificate)){\n                                            Span(EcosysParam(Name: land_yes_no, Index: #entry_encumbrance_certificate#))\n                                        }.Else{\n                                            LangRes(undefined)\n                                        }\n                                    }\n                                }\n                            }\n                            Div(row df f-valign){\n                                Div(col-md-4 mt-sm text-right h5){Strong(LangRes(legal_status))}\n                                Div(col-md-8 mt-sm text-left h5){\n                                    If(#depart2#==1){\n                                        Div(form-inline){\n                                            RadioGroup(Name: LegalStatus,Class: form-control, Value: #entry_legal_status#, Source: src_yes_no, ValueColumn: id, NameColumn: name)\n                                        }\n                                    }.Else{\n                                        If(GetVar(entry_legal_status)){\n                                            Span(EcosysParam(Name: land_yes_no, Index: #entry_legal_status#))\n                                        }.Else{\n                                            LangRes(undefined)\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }.Else{}\n                    \n                    Div(panel-footer){\n                        Div(clearfix){\n                            Div(pull-right){\n                                Input(Name: LandId, Type: hidden, Value: #LandId#)\n                                Input(Name: Depart, Type: hidden, Value: #depart#)\n                                Div(btn-group){\n                                    Button(Page: land_registry_records, Body: LangRes(back), Class: btn btn-default btn-pill-left, PageParams: \"admin=#admin#\")\n                                    \n                                    If(GetVar(depart)){\n                                        If(GetVar(depart1)){\n                                            Button(Body: LangRes(save), Class: btn btn-primary btn-pill-right, Contract: land_registry_Depart1Edit, Params: \"Price=Val(Price),LandId=#LandId#,NotificId=#notific_id#\", Page: land_registry_records)\n                                            \n                                        }.ElseIf(GetVar(depart2)){\n                                            Button(Body: LangRes(save), Class: btn btn-primary btn-pill-right, Contract: land_registry_Depart2Edit, Params: \"LandId=#LandId#,LegalStatus=Val(LegalStatus),EncumbranceCertificate=Val(EncumbranceCertificate),NotificId=#notific_id#\", Page: land_registry_records)\n                                            \n                                        }.ElseIf(GetVar(depart3)){\n                                            Button(Body: LangRes(save), Class: btn btn-primary btn-pill-right, Contract: land_registry_Depart3Edit, Params: \"LandId=#LandId#,TaxReceiptAndBills=Val(TaxReceiptAndBills),PriceMarket=Val(PriceMarket),PriceGov=Val(PriceGov),NotificId=#notific_id#\", Page: land_registry_records)\n                                        }.Else{}\n                                        \n                                    }.Else{\n                                        Button(Body: LangRes(save), Class: btn btn-primary btn-pill-right, Contract: land_registry_AdminEdit, Params: \"LandId=#LandId#,Coords=Val(Coords),LandUse=Val(LandUse),BuildingsUseClass=Val(BuildingsUseClass),Area=Val(Area),CoordsAddress=Val(CoordsAddress),LandNature=Val(LandNature),LandLocalBody=Val(LandLocalBody)\", Page: land_registry_records_admin)\n                                    }\n                                }\n                            }\n                        }\n                        If(EcosysParam(debug)==1){\n                            Div(){admin: #admin#}\n                            Div(){notific_id: #notific_id#}\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "land_registry_records",
            "Value": "If(#isOrder#==1){\n    SetVar(Name:v_Order, Value: \"price\")\n}.ElseIf(#isOrder#==2){\n    SetVar(Name:v_Order, Value: \"area\")\n}.ElseIf(#isOrder#==3){\n    SetVar(Name:v_Order, Value: \"price desc\")\n}.ElseIf(#isOrder#==4){\n    SetVar(Name:v_Order, Value: \"area desc\")\n}.Else{\n    SetVar(Name:v_Order, Value: \"id desc\")\n}\nSetVar(debug, EcosysParam(debug))\n\nDBFind(Name: land_registry, Source: src_land_registry).Where(#v_Where#).Order(#v_Order#).Custom(_id){\n    Div(text-center h5){#id#}.Style(align:center; width:50px;)\n}.Custom(_owner){\n    DBFind(Name: members, Source: src_members).Where(\"id=#owner_id#\").Vars(row)\n    Div(text-bold text-center){\n        Image(Class: img-thumbnail img-circle, Alt: ava, Src: #row_avatar#).Style(width:30px;height:30px;)\n        \n        Div(){\n            LinkPage(Page: profile_view, PageParams: \"v_member_id=#row_id#\", Body: #row_member_name#).Style(cursor:pointer;)\n        }\n    }.Style(max-width:150px;overflow:hidden;)\n}.Custom(_land){\n    Span(EcosysParam(Name: land_use, Index: #land_use#))\n}.Custom(_buildings){\n    Span(EcosysParam(Name: buildings_use_class, Index: #buildings_use_class#))\n}.Custom(_area){\n    Span(#area#)\n}.Custom(_address){\n    Span(#address#)\n}.Custom(_cons){\n    Div(text-center h6){\n        If(#price#){\n            #price#\n        }.Else{\n            Em(Class: fa fa-1x text-muted fa-question-circle)\n        }\n    }.Style(width:60px;)\n    \n}.Custom(_legal){\n    Div(text-center h6){\n        \n        If(#legal_status#==0){\n            Em(Class: fa fa-1x text-muted fa-question-circle)\n        }\n        If(#legal_status#==1){\n            Em(Class: fa fa-1x text-success fa-check-circle)\n        }\n        If(#legal_status#==2){\n            Em(Class: fa fa-1x text-danger fa-exclamation-circle)\n        }\n    }.Style(width:60px;)\n    \n}.Custom(_encumberance){\n    Div(text-center h6){\n        If(#encumbrance_certificate#==0){\n            Em(Class: fa fa-1x text-muted fa-question-circle)\n        }\n        If(#encumbrance_certificate#==1){\n            Em(Class: fa fa-1x text-success fa-check-circle)\n        }\n        If(#encumbrance_certificate#==2){\n            Em(Class: fa fa-1x text-danger fa-exclamation-circle)\n        }\n    }.Style(width:60px;)\n    \n}.Custom(_tax){\n    Div(text-center h6){\n        If(#tax_receipt_and_bills#==0){\n            Em(Class: fa fa-1x text-muted fa-question-circle)\n        }\n        If(#tax_receipt_and_bills#==1){\n            Em(Class: fa fa-1x text-success fa-check-circle)\n        }\n        If(#tax_receipt_and_bills#==2){\n            Em(Class:fa fa-1x text-danger fa-exclamation-circle)\n        }\n    }.Style(width:60px;)\n    \n}.Custom(_common){\n    Form(){\n        Button(Page: land_registry_view, PageParams: \"LandId=#id#\", Class: btn btn-default fa fa-2x fa-eye)\n    }\n    \n}.Custom(_admin){\n    Form(btn-group){\n        Button(Page: land_registry_view, PageParams: \"LandId=#id#,admin=#admin#\", Class: btn btn-default fa fa-2x fa-eye)\n        Button(Page: land_registry_edit, PageParams: \"LandId=#id#,admin=#admin#\", Class: btn btn-primary fa fa-2x fa-pencil-square-o)\n        Button(Page: #this#, Contract: land_registry_Delete, Params: \"LandId=#id#\", PageParams: \"admin=#admin#\", Class: btn btn-danger,Body: Em(Class: fa fa-2x fa-trash))\n    }.Style(width:180px;display:flex;)\n    \n}.Custom(_depart3){\n    Form(btn-group){\n        Button(Page: land_registry_view, PageParams: \"LandId=#id#\", Class: btn btn-default fa fa-2x fa-eye)\n    }\n    \n}.Custom(_depart2){\n    Form(btn-group){\n        Button(Page: land_registry_view, PageParams: \"LandId=#id#\", Class: btn btn-default fa fa-2x fa-eye)\n    }\n}\n\n\n\nDiv(content-wrapper){\n    Div(panel panel-primary data-sweet-alert){\n        Div(list-group-item){\n            Div(row df f-valign){\n                Div(col-md-2 mt-sm text-center text-bold){$land_use$}\n                Div(col-md-7 mt-sm text-left){\n                    Form(Class: input-group){\n                        EcosysParam(Name: land_use, Source: src_land_use)\n                        Select(Name: LandUseSelect, Source: src_land_use, Class: form-control, NameColumn: name, ValueColumn: id, Value: #str_search#)\n                        \n                        \n                        Div(input-group-btn){\n                            Button(Page: #this#, PageParams: \"str_search=Val(LandUseSelect),isSearch=1,isOrder=#isOrder#,admin=#admin#,sales=#sales#\", Class: btn btn-default fa fa-search)\n                        }\n                    }\n                }\n                Div(col-md-3 mt-sm btn-group){\n                    SetVar(params_sort, \"admin=#admin#,sales=#sales#,isOrder\")\n                    SetVar(Name: b_ask, Value: fa fa-sort-numeric-asc)\n                    SetVar(Name: b_desk, Value: fa fa-sort-numeric-desc)\n                    If(#isOrder#==1){\n                        Button(Page: #this#, Class: btn btn-default, Body: Span(Class:#b_ask# active) LangRes(price),PageParams: \"#params_sort#=3\")\n                    }.ElseIf(#isOrder#==3){\n                        Button(Page: #this#, Class: btn btn-default, Body: Span(Class:#b_desk# active) LangRes(price),PageParams: \"#params_sort#=1\")\n                    }.Else{\n                        Button(Page: #this#, Class: btn btn-default, Body: LangRes(price),PageParams: \"#params_sort#=1\")\n                    }\n                    \n                    If(#isOrder#==2){\n                        Button(Page: #this#, Class: btn btn-default, Body: Span(Class:#b_ask# active) LangRes(area_size), PageParams: \"#params_sort#=4\")\n                    }.ElseIf(#isOrder#==4){\n                        Button(Page: #this#, Class: btn btn-default, Body: Span(Class:#b_desk# active) LangRes(area_size), PageParams: \"#params_sort#=2\")\n                    }.Else{\n                        Button(Page: #this#, Class: btn btn-default, Body: LangRes(area_size), PageParams: \"#params_sort#=4\")\n                    }\n                }.Style(display:flex;)\n            }\n            \n            Div(table-responsive){\n                If(#admin#==1){\n                    If(#debug#==1){admin1}\n                    Table(Source: src_land_registry, Columns: \"ID=_id,$owner$=_owner,$land_use$=_land,$buildings_use_class$=_buildings,$area_size$=_area,$address$=_address,=_admin\")\n                }.Else{\n                    If(#depart#==1){\n                        If(#debug#==1){depart:}\n                        If(#depart1#==1){\n                            If(#debug#==1){depart1}\n                            Table(Source:src_land_registry,Columns: \"ID=_id,$owner$=_owner,$land_use$=_land,$buildings_use_class$=_buildings,$area_size$=_area,$address$=_address,$consideration_value$(INR)=_cons,$legal_status$=_legal,$encumbrance_certificate$=_encumberance,$tax_and_bills$=_tax,=_common\")\n                        }.Else{\n                            If(#depart2#==1){\n                                If(#debug#==1){depart2}\n                                Table(Source:src_land_registry,Columns: \"ID=_id,$owner$=_owner,$land_use$=_land,$buildings_use_class$=_buildings,$area_size$=_area,$address$=_address, $consideration_value$(INR)=_cons,$legal_status$=_legal,$encumbrance_certificate$=_encumberance,$tax_and_bills$=_tax,=_depart2\")\n                            }.Else{\n                                If(#depart3#==1){\n                                    If(#debug#==1){depart3}\n                                    Table(Source:src_land_registry,Columns: \"ID=_id,$owner$=_owner,$land_use$=_land,$buildings_use_class$=_buildings,$area_size$=_area,$address$=_address,$consideration_value$(INR)=_cons,$legal_status$=_legal,$tax_and_bills$=_tax,$encumbrance_certificate$=_encumberance,=_depart3\")\n                                }\n                            }\n                        }\n                    }.Else{\n                        If(#debug#==1){common}\n                        Table(Source:src_land_registry,Columns: \"ID=_id,$owner$=_owner,$land_use$=_land,$buildings_use_class$=_buildings,$area_size$=_area,$address$=_address,$consideration_value$(INR)=_cons,$legal_status$=_legal,$encumbrance_certificate$=_encumberance,$tax_and_bills$=_tax,=_common\")\n                    }\n                }\n            }\n            \n            If(#isSearch#==1){\n                Form(text-center){\n                    Button(Page: #this#, PageParams:\"isSearch=0,admin=#admin#,sales=#sales#\", Class: btn btn-primary btn-oval){\n                        LangRes(view_all)\n                    }\n                }\n            }.Else{}\n            \n        }\n        If(GetVar(sales)){\n        }.Else{\n            If(Or(#admin#==1,#depart1#==1)){\n                Div(panel-footer){\n                    Div(clearfix){\n                        Form(Class: pull-right){\n                            Button(Page: land_registry_add, Class: btn btn-primary){\n                                LangRes(add)\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        If(#debug#==1){\n            Div(){depart:#depart#}\n            Div(){depart1:#depart1#}\n            Div(){depart2:#depart2#}\n            Div(){depart3:#depart3#}\n            Div(){admin:#admin#}\n            Div(){searchQuery:#searchQuery#}\n            Div(){v_Where:#v_Where#}\n        }\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "land_registry_set_depart",
            "Value": "\nDBFind(Name: roles_assign, Source: _ra1).Where(\"role_name='land_depart1' and member_id=#key_id# and delete=0\").Vars(d1)\nDBFind(Name: roles_assign, Source: _ra2).Where(\"role_name='land_depart2' and member_id=#key_id# and delete=0\").Vars(d2)\nDBFind(Name: roles_assign, Source: _ra3).Where(\"role_name='land_depart3' and member_id=#key_id# and delete=0\").Vars(d3)\n\nIf(#d1_id#>0){\n    SetVar(depart1, 1)\n    SetVar(depart, 1)\n}.Else{\n    If(#d2_id#>0){\n        SetVar(depart1, 0)\n        SetVar(depart2, 1)\n        SetVar(depart, 1)\n    }.Else{\n        SetVar(depart2, 0)\n        If(#d3_id#>0){\n            SetVar(depart3, 1)\n            SetVar(depart, 1)\n        }.Else{\n            SetVar(depart3, 0)\n            SetVar(depart, 0)\n        }\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        }
    ],
    "contracts": [
        {
            "Name": "land_registry_AccountCreate",
            "Value": "contract land_registry_AccountCreate{\n    data{\n        account_type int\n        member_id string\n    }\n    \n    func conditions{\n        \n        MainCondition()\n        \n        $account_id = 0;\n        $memberId = AddressToId($member_id)\n        \n        var account map\n        if $account_type == 1 || $account_type == 2 {\n            account = DBFind(\"land_registry_accounts\").Where(\"type=? and onhold=0\", $account_type).Row()\n        } else {\n            account = DBFind(\"land_registry_accounts\").Where(\"type=? and member_id=? and onhold=0\", $account_type,$memberId).Row()\n        }\n        \n        if account {\n            warning \"Account with this type has already been created\"\n        }\n    }\n    \n    func action {\n        DBInsert(\"land_registry_accounts\", \"member_id,type\", $memberId, $account_type)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "land_registry_Add",
            "Value": "contract land_registry_Add{\n    data{\n        OwnerId int\n        Coords string // {\"coords\":[{\"lat\":float,\"lng\":float},],\"area\": float,\"address\": string}\n        LandUse int\n        BuildingsUseClass int\n        RegistrationDate string\n        LandNature int\n        LandLocalBody int\n    }\n    \n    func conditions{\n        var member map\n        member = DBFind(\"members\").Where(\"id = ?\", $OwnerId).Row()\n        if !member {\n            warning \"Member account for Owner not found\"\n        }\n        \n        $depart2_RoleId = DBFind(\"roles_list\").Where(\"role_name='land_depart2' and delete=0\").One(\"id\")\n        $depart3_RoleId = DBFind(\"roles_list\").Where(\"role_name='land_depart3' and delete=0\").One(\"id\")\n        if $depart2_RoleId == nil || $depart3_RoleId == nil{\n            info \"Department roles not found\"\n        }\n        \n    }\n    func action{\n        var icon, header, body, page, params, roleParams, coordsAddress, area string\n        var closureType, landId int\n        var coords map\n        coords = JSONToMap($Coords)\n        coordsAddress = coords[\"address\"]\n        area = Sprintf(\"%.0f\", coords[\"area\"])\n        \n        landId = DBInsert(\"land_registry\", \"owner_id,address,area,buildings_use_class,map_coords,land_use,timestamp date_create,delete,land_nature,land_local_body,registration_date,timestamp modification_date\", $OwnerId, coordsAddress, area, $BuildingsUseClass, $Coords, $LandUse, $block_time, 0, $LandNature, $LandLocalBody, $RegistrationDate, $block_time)\n        \n        DBInsert(\"land_registry_ownership\", \"step, timestamp date_creat, timestamp date_signing, lend_object_id, owner_id, owner_new_id\", -1, $block_time, $block_time, landId, $OwnerId, $OwnerId)\n        \n        icon = \"fa fa-bell-o\"\n        header = \"$new_land$\"\n        body = \"$need_processing$\"\n        closureType = 2\n        \n        roleParams = \"role_id,closure_type,icon_name,text_header,text_body,page_name,params_val\"\n        \n        //notify role2\n        params = Sprintf(\"LandId=%v,depart2=1\", landId)\n        page = \"land_registry_depart2_edit\"\n        Notifications_Roles_Send(roleParams,Int($depart2_RoleId),closureType,icon,header,body,page,params)\n        \n        //notify role3\n        params = Sprintf(\"LandId=%v,depart3=1\", landId)\n        page = \"land_registry_depart3_edit\"\n        Notifications_Roles_Send(roleParams,Int($depart3_RoleId),closureType,icon,header,body,page,params)\n        \n        //notify owner\n        params = Sprintf(\"LandId=%v,depart1=1\", landId)\n        page = \"land_registry_depart1_edit\"\n        Notifications_Single_Send(\"member_id,icon_name,text_header,text_body,page_name,params_val\", $OwnerId,icon,header,body,page,params)\n    }\n}",
            "Conditions": "ContractConditions(`MainCondition`)"
        },
        {
            "Name": "land_registry_AdminEdit",
            "Value": "contract land_registry_AdminEdit{\n    data {\n        LandId int\n        Coords string // {\"coords\":[{\"lat\":float,\"lng\":float},],\"area\": float,\"address\": string}\n        LandUse int\n        BuildingsUseClass int\n        // Area int\n        // CoordsAddress string\n        LandNature int\n        LandLocalBody int\n    }\n    func conditions {\n        $landRegistryRecord = DBFind(\"land_registry\").Where(\"id=?\", $LandId).Row()\n        if !$landRegistryRecord{\n            warning \"Land Registry record not found\"\n        }\n    }\n    \n    func log(field, value string){\n        if value != $landRegistryRecord[field] {\n            var name string\n            name = DBFind(\"members\").Where(\"id=?\", $key_id).One(\"member_name\")\n            \n            DBInsert(\"land_registry_editing\", \"editing_attribute,lend_object_id,new_attr_value,old_attr_value,person_id,person_name,timestamp date\", field, $LandId, value, $landRegistryRecord[field],$key_id, name, $block_time)\n        }\n    }\n    func action {\n        var coords map\n        coords = JSONToMap($Coords)\n        var coordsAddress, area string\n        coordsAddress = coords[\"address\"]\n        area = Sprintf(\"%.0f\", coords[\"area\"])\n\n        log(\"land_use\", $LandUse)\n        log(\"buildings_use_class\", $BuildingsUseClass)\n        log(\"address\", coordsAddress)\n        log(\"map_coords\", $Coords)\n        log(\"area\", area)\n\n        DBUpdate(\"land_registry\", $LandId, \"address,area,buildings_use_class,map_coords,land_use,land_nature,land_local_body\", coordsAddress,area,$BuildingsUseClass,$Coords,$LandUse,$LandNature,$LandLocalBody)\n    }\n}",
            "Conditions": "ContractConditions(`MainCondition`)"
        },
        {
            "Name": "land_registry_TokensTransfer",
            "Value": "contract land_registry_TokensTransfer {\n    data {\n        sender_id int\n        recipient_id int\n        amount money\n    }\n    \n    conditions {}\n    \n    action {\n        var sender map\n        sender = DBFind(\"land_registry_accounts\").Where(\"onhold=0 and id=?\", $sender_id).Order(\"id\").Row()\n        \n        var recipient map\n        recipient = DBFind(\"land_registry_accounts\").Where(\"onhold=0 and id=?\", $recipient_id).Order(\"id\").Row()\n        \n        if sender && recipient {\n            if Money(sender[\"amount\"]) > $amount {\n                DBUpdate(\"land_registry_accounts\", Int(sender[\"id\"]), \"-amount\", $amount)\n                DBUpdate(\"land_registry_accounts\", Int(recipient[\"id\"]), \"+amount\", $amount)\n            }\n        } \n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "land_registry_Delete",
            "Value": "contract land_registry_Delete{\n    data{\n        LandId int\n    }\n    \n    func conditions{}\n    \n    func action{\n        DBUpdate(\"land_registry\", $LandId, \"delete\", \"1\")\n    }\n}",
            "Conditions": "ContractConditions(`MainCondition`)"
        },
        {
            "Name": "land_registry_Depart1Edit",
            "Value": "contract land_registry_Depart1Edit{\n    data{\n        LandId int\n        NotificId string \"optional\"\n        Price string\n    }\n    \n    func conditions{\n        $Price = Int($Price)\n        $NotificId = Int($NotificId)\n        var entry map\n        entry = DBFind(\"land_registry\").Where(\"id=? and owner_id=?\",$LandId, $key_id).Row()\n        if !entry{\n            // info \"You can not change this Land\" // comment for testing\n        }\n    }\n    \n    func action{\n        DBUpdate(\"land_registry\", $LandId, \"price,timestamp modification_date\", $Price, $block_time)\n        if $NotificId > 0{\n            Notifications_Single_Close(\"notific_id\", $NotificId)\n        }\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "land_registry_Depart2Edit",
            "Value": "contract land_registry_Depart2Edit{\n    data{\n        LandId int\n        NotificId int\n        LegalStatus int\n        EncumbranceCertificate int\n    }\n    \n    func action{\n        DBUpdate(\"land_registry\", $LandId, \"legal_status,encumbrance_certificate,timestamp modification_date\", $LegalStatus, $EncumbranceCertificate, $block_time)\n        \n        Notifications_Single_Close(\"notific_id\", $NotificId)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "land_registry_Depart2Request",
            "Value": "contract land_registry_Depart2Request{\n    data{\n        LandId int\n    }\n    \n    func action{\n        var icon, header, body, page, notifyParams, params string\n        notifyParams = \"role_id,closure_type,icon_name,text_header,text_body,page_name,params_val\"\n        icon = \"fa-bell\"\n        header = \"$new_land$\"\n        body = \"$need_your_processing$\"\n        page = \"land_registry_depart2_edit\"\n        params = Sprintf(\"LandId=%v,request=second,depart=1,depart2=1\", $LandId)\n        \n        var roleId, closureType int\n        closureType = 2\n        roleId = DBFind(\"roles_list\").Where(\"role_name='land_depart2' and delete=0\").One(\"id\")\n        \n        Notifications_Roles_Send(notifyParams,roleId,closureType,icon,header,body,page,params)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "land_registry_Depart3Edit",
            "Value": "contract land_registry_Depart3Edit{\n    data{\n        LandId int\n        NotificId int\n        TaxReceiptAndBills int\n        PriceMarket int\n        PriceGov int\n    }\n    \n    func action{\n        DBUpdate(\"land_registry\", $LandId, \"tax_receipt_and_bills,price_market_value,price_gov_value,timestamp modification_date\", $TaxReceiptAndBills,$PriceMarket,$PriceGov,$block_time)\n        \n        Notifications_Single_Close(\"notific_id\", $NotificId)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "land_registry_Depart3Request",
            "Value": "contract land_registry_Depart3Request{\n    data{\n        LandId int\n    }\n    \n    conditions{}\n    \n    func action{\n        var icon, header, body, page, notifyParams, params string\n        var roleId, closureType int\n        \n        icon = \"fa-bell\"\n        header = \"$new_land$\"\n        body = \"$need_your_processing$\"\n        closureType = 2\n        page = \"land_registry_depart3_edit\"\n        params = Sprintf(\"LandId=%v,request=second,depart=1,depart3=1\", $LandId)\n        roleId = DBFind(\"roles_list\").Where(\"role_name='land_depart3' and delete=0\").One(\"id\")\n        \n        notifyParams = \"role_id,closure_type,icon_name,text_header,text_body,page_name,params_val\"\n        Notifications_Roles_Send(notifyParams,roleId,closureType,icon,header,body,page,params)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "land_registry_InititiatePurchase",
            "Value": "contract land_registry_InititiatePurchase{\n    data{\n        LandId int\n    }\n    \n    conditions{}\n    \n    action{\n        var ownership map\n        ownership = DBFind(\"land_registry_ownership\").Where(\"lend_object_id=?\", $LandId).Row()\n        \n        var ownershipId, ownerId int\n        ownershipId = Int(ownership[\"id\"])\n        ownerId = Int(ownership[\"owner_id\"])\n        \n        DBUpdate(\"land_registry_ownership\", ownershipId, \"owner_new_id,step\", $key_id, 0)\n        \n        var query string\n        query = Sprintf(\"page_params='LandId=%v'\", $LandId)\n        var notifications array\n        notifications = DBFind(\"notifications\").Where(query)\n        var i int\n        while i < Len(notifications) {\n            var notification map\n            notification = notifications[i]\n            Notifications_Single_Close(\"notific_id\", Int(notification[\"id\"]))\n            i = i + 1\n        }\n        \n        // notify land owner\n        var icon, header, body, page, params string\n        icon = \"fa-bell\"\n        header = \"$purchase_request$\"\n        body = \"$need_your_processing$\"\n        page = \"land_registry_view\"\n        params = Sprintf(\"LandId=%v\",$LandId)\n        Notifications_Single_Send(\"member_id,icon_name,text_header,text_body,page_name,params_val\", ownerId, icon, header, body, page, params)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "land_registry_Install",
            "Value": "contract land_registry_Install{\n    data{}\n    \n    func conditions{\n        MainCondition()\n    }\n    \n    func action{\n        var roleName string\n        var m, isAssigned, role map\n        var amount int\n        var members, fMembers array\n        amount = 1000000\n        var i int\n        \n        // fake members\n        // fMembers[0] = \"0022-5368-9996-5437-2905\"\n        // fMembers[1] = \"0099-6231-3856-5867-2293\"\n        // fMembers[2] = \"1823-8019-6419-0516-5483\"\n        // fMembers[3] = \"0702-8968-3827-9121-2498\"\n        // DBUpdate(\"keys\", $key_id, \"amount\", 1000000000000)\n        // var keyIdOriginal int\n        // keyIdOriginal = $key_id\n        // while i<Len(fMembers){\n        //     $key_id = keyIdOriginal\n        //     @1MoneyTransfer(\"Recipient,Amount,Comment\", fMembers[i], amount, \"\")\n            \n        //     $key_id = AddressToId(fMembers[i])\n        //     var fName string\n        //     fName = Sprintf(\"fake_member_%v\",i)\n        //     Profile_Edit(\"member_name,avatar\", fName, \"\")\n            \n        //     i=i+1\n        // }\n        \n        members = DBFind(\"members\")\n        i=0\n        while i< Len(members){\n            m = members[i]\n            isAssigned = DBFind(\"land_registry_accounts\").Where(\"member_id=?\", m[\"id\"]).Row()\n            if isAssigned {\n                DBUpdate(\"land_registry_accounts\", Int(isAssigned[\"id\"]), \"member_id,member_avatar,member_name,amount_money,amount,onhold\", m[\"id\"],m[\"avatar\"],m[\"member_name\"], amount, amount,0)\n            }else{\n                DBInsert(\"land_registry_accounts\", \"member_id,member_avatar,member_name,amount_money,amount\", m[\"id\"],m[\"avatar\"],m[\"member_name\"], amount, amount)\n            }\n            i=i+1\n        }\n        var where string\n        where = \"role_name=? and role_type=1 and company_id=0 and delete=0\"\n        i = 0\n        while i < 4{\n            if i==3{\n                roleName = \"land_bank\"\n            }else{\n                roleName = Sprintf(\"land_depart%v\", i+1)\n            }\n            role = DBFind(\"roles_list\").Where(where, roleName).Row()\n            if !role {\n                // create required roles\n                // role_type==1 must be assigned_role\n                Roles_Create(\"role_name,role_type,company_id\", roleName, 1, 0)\n                role = DBFind(\"roles_list\").Where(where, roleName).Row()\n            }\n            isAssigned = DBFind(\"roles_assign\").Where(\"role_id=? and delete=0\", role[\"id\"]).Row()\n            if isAssigned{\n                var roleCreatorId int\n                $key_id = Int(DBFind(\"roles_list\").Where(\"id=?\", role[\"id\"]).One(\"creator_id\"))\n                Roles_Unassign(\"row_id\", Int(isAssigned[\"id\"]))\n            }\n            var j int\n            if i < Len(members){\n                j = i\n            }\n            m = members[j]\n            Roles_Assign(\"role_id,member_id\", Int(role[\"id\"]), Int(m[\"id\"]))\n            i=i+1\n        }\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "land_registry_PurchaseAccept",
            "Value": "contract land_registry_PurchaseAccept{\n    data{\n        LandId int\n        NotificId int\n    }\n    conditions{\n        $roleId = DBFind(\"roles_list\").Where(\"role_name=? and delete=0\", \"land_bank\").One(\"id\")\n        if $roleId == nil{\n            info \"Banker not found\"\n        }\n    }\n    action{\n        var ownership map\n        ownership = DBFind(\"land_registry_ownership\").Where(\"lend_object_id=?\", $LandId).Row()\n        var ownershipId, buyerId int\n        ownershipId = Int(ownership[\"id\"])\n        buyerId = Int(ownership[\"owner_new_id\"])\n        \n        DBUpdate(\"land_registry_ownership\", ownershipId, \"step\", 1)\n        \n        // notify buyer\n        var icon, header, body, page, params string\n        icon = \"fa-bell\"\n        header = \"$purchase_approved$\"\n        body = \"$waiting_bank$\"\n        page = \"land_registry_view\"\n        params = Sprintf(\"LandId=%v\", $LandId)\n        \n        Notifications_Single_Send(\"member_id,icon_name,text_header,text_body,page_name,params_val\", buyerId, icon, header, body, page, params)\n        \n        // notify bank\n        var roleId, closureType int\n        header = \"$new_land$\"\n        body = \"$need_your_processing$\"\n        closureType = 2\n        page = \"land_registry_bank\"\n        Notifications_Roles_Send(\"role_id,closure_type,icon_name,text_header,text_body,page_name,params_val\",Int($roleId),closureType,icon,header,body,page,params)\n        \n        // closing notify for owner\n        Notifications_Single_Close(\"notific_id\", $NotificId)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "land_registry_PurchaseReject",
            "Value": "contract land_registry_PurchaseReject{\n    data{\n        LandId int\n        NotificId int\n    }\n    \n    action{\n        //close notify for owner\n        Notifications_Single_Close(\"notific_id\", $NotificId)\n        \n        // new status deal - cancelled\n        var ownership map\n        ownership = DBFind(\"land_registry_ownership\").Where(\"lend_object_id=?\", $LandId).Row()\n        var ownershipId, buyerId int\n        ownershipId = Int(ownership[\"id\"])\n        buyerId = Int(ownership[\"owner_new_id\"])\n        \n        DBUpdate(\"land_registry_ownership\", ownershipId, \"step\", 10)\n        \n        // notify buyer\n        var icon, header, body, page, params string\n        icon = \"fa fa-bell-o\"\n        header = \"$purchase_rejected$\"\n        body = \"$owner_rejected_purchase$\"\n        page = \"land_registry_view\"\n        params = Sprintf(\"LandId=%v\", $LandId)\n        \n        Notifications_Single_Send(\"member_id,icon_name,text_header,text_body,page_name,params_val\",buyerId,icon,header,body,page,params)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "land_registry_BankAction",
            "Value": "contract land_registry_BankAction{    \n    data{\n        LandId int\n    }\n    action{\n        var where string\n        where = Sprintf(\"page_params='LandId=%v'\", $LandId)\n        var notes array\n        notes = DBFind(\"notifications\").Where(where)\n        var i int\n        while i < Len(notes) {\n            var note map\n            note = notes[i]\n            Notifications_Single_Close(\"notific_id\", Int(note[\"id\"]))\n            i = i + 1\n        }\n        var ownershipTable string\n        ownershipTable = \"land_registry_ownership\"\n        var ownership map\n        ownership = DBFind(ownershipTable).Where(\"lend_object_id=?\", $LandId).Row()\n        var ownershipId, ownerId, buyerId int\n        ownershipId = Int(ownership[\"id\"])\n        ownerId = Int(ownership[\"owner_id\"])\n        buyerId = Int(ownership[\"owner_new_id\"])\n        \n        var land map\n        land = DBFind(\"land_registry\").WhereId($LandId).Row()\n        var landPrice int\n        landPrice = Int(land[\"price\"])\n        landPrice = landPrice * 105 / 100\n        \n        //перевод денег с эмиссии покупателю(персональный счет)\n        var buyerAccount map\n        buyerAccount = DBFind(\"land_registry_accounts\").Where(\"member_id=? and onhold=0\", buyerId).Row()\n        if !buyerAccount {\n            info \"Buyers account not found\"\n        }\n        var buyerAccountId, bankAccountId int\n        bankAccountId = 1\n        buyerAccountId = Int(buyerAccount[\"id\"])\n        land_registry_TokensTransfer(\"sender_id,recipient_id,amount\", buyerAccountId, bankAccountId, landPrice)\n        \n        DBUpdate(ownershipTable, ownershipId, \"step\", 2)\n        \n        //уведомляем продавца\n        var icon, header, body, page, params string\n        icon = \"fa-bell\"\n        header = \"$new_purchase$\"\n        body = \"$need_your_processing$\"\n        page = \"land_registry_view\"\n        params = Sprintf(\"LandId=%v\",$LandId)\n        Notifications_Single_Send(\"member_id,icon_name,text_header,text_body,page_name,params_val\",\n        ownerId, icon, header, body, page, params)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "land_registry_TakenNote",
            "Value": "contract land_registry_TakenNote{\n    data{\n        land_id_tmp int\n        notific_id_tmp int\n    }\n    \n    action{\n        var table string\n        table = \"land_registry_ownership\"\n\n        //новый статус - сделка отклонена\n        var ownership map\n        ownership = DBFind(table).Where(\"lend_object_id=?\", $land_id_tmp).Row()\n        DBUpdate(table, Int(ownership[\"id\"]), \"step\", \"-1\")\n        \n        //закрываем оповещение\n        if $notific_id_tmp > 0{\n            Notifications_Single_Close(\"notific_id\", $notific_id_tmp)\n        }\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "land_registry_SignSales",
            "Value": "contract land_registry_SignSales{\n    data{\n        LandId int\n        NotificId int\n    }\n    \n    func action{\n        var ownership map\n        ownership = DBFind(\"land_registry_ownership\").Where(\"lend_object_id=?\", $LandId).Row()\n        \n        var ownershipId, ownerId, buyerId int\n        ownershipId = Int(ownership[\"id\"])\n        ownerId = ownership[\"owner_id\"]\n        buyerId = Int(ownership[\"owner_new_id\"])\n        \n        var land map\n        land = DBFind(\"land_registry\").Where(\"id=?\", $LandId).Row()\n        var amount int\n        amount = Int(land[\"price\"])\n        // $bank_tax = amount * 5 / 100\n                \n        // account_type=1 its a personal\n        var ownerAccount, buyerAccount map\n        ownerAccount = DBFind(\"land_registry_accounts\").Where(\"member_id=? and onhold=0\", ownerId).Row()\n        buyerAccount = DBFind(\"land_registry_accounts\").Where(\"member_id=? and onhold=0\", buyerId).Row()\n        \n        var ownerAccountId, buyerAccountId, bankAccountId int\n        ownerAccountId = Int(ownerAccount[\"id\"])\n        buyerAccountId = Int(buyerAccount[\"id\"])\n        bankAccountId = 1\n        \n        // deal\n        land_registry_TokensTransfer(\"sender_id,recipient_id,amount\", bankAccountId, ownerAccountId, amount)\n        // land_registry_TokensTransfer(\"sender_id,recipient_id,amount\", buyerAccountId, ownerAccountId, amount)\n        // land_registry_TokensTransfer(\"sender_id,recipient_id,amount\", buyerAccountId, bankAccountId, $bank_tax)\n        \n        // registered new owner\n        DBUpdate(\"land_registry\", $LandId, \"owner_id\", buyerId)\n        DBUpdate(\"land_registry_ownership\", ownershipId, \"owner_id,owner_new_id,step\", buyerId, buyerId, -1)\n        \n        if($NotificId > 0){\n            Notifications_Single_Close(\"notific_id\", $NotificId)\n        }\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        }
    ],
    "data": [],
    "languages": [
        {
            "Name": "add_new_record",
            "Conditions": "",
            "Trans": "{\"en\":\"Add new record\",\"ru\":\"Добавить новую запись\"}"
        },
        {
            "Name": "address",
            "Conditions": "",
            "Trans": "{\"en\":\"Address\",\"ru\":\"Адрес\"}"
        },
        {
            "Name": "area_size",
            "Conditions": "",
            "Trans": "{\"en\":\"Area size\",\"ru\":\"Размер\"}"
        },
        {
            "Name": "ask_accept_purchase",
            "Conditions": "",
            "Trans": "{\"en\":\" Do you want to accept the purchase?\",\"ru\":\"Вы хотите принять покупку?\"}"
        },
        {
            "Name": "ask_delete",
            "Conditions": "",
            "Trans": "{\"en\":\"Do you want to delete entry?\",\"ru\":\"Вы хотите удалить эту запись?\"}"
        },
        {
            "Name": "ask_initiate_land_purchase",
            "Conditions": "",
            "Trans": "{\"en\":\"Do you want to initiate land purchase?\",\"ru\":\"Вы хотите начать процесс покупки земли?\"}"
        },
        {
            "Name": "ask_reject_purchase",
            "Conditions": "",
            "Trans": "{\"en\":\"Do you want to reject the purchase?\",\"ru\":\"Вы хотите отклонить покупку?\"}"
        },
        {
            "Name": "ask_request_second",
            "Conditions": "",
            "Trans": "{\"en\":\"Do you want to send a second request?\",\"ru\":\"Вы хотите отправить повторный запрос?\"}"
        },
        {
            "Name": "ask_sign",
            "Conditions": "",
            "Trans": "{\"en\":\"Do you want to sign?\",\"ru\":\"Вы хотите поставить подпись?\"}"
        },
        {
            "Name": "available_sale",
            "Conditions": "",
            "Trans": "{\"en\":\"Available for sale\",\"ru\":\"Доступно для продажи\"}"
        },
        {
            "Name": "buildings_use_class",
            "Conditions": "",
            "Trans": "{\"en\":\"Buildings use class\",\"ru\":\"Класс используемых зданий\"}"
        },
        {
            "Name": "buy",
            "Conditions": "",
            "Trans": "{\"en\":\"Buy\",\"ru\":\"Купить\"}"
        },
        {
            "Name": "buyer",
            "Conditions": "",
            "Trans": "{\"en\":\"Buyer\",\"ru\":\"Покупатель\"}"
        },
        {
            "Name": "buyer_has_money",
            "Conditions": "",
            "Trans": "{\"en\":\"The buyer has the necessary amount in the bank account\",\"ru\":\"Покупатель имеет необходимую сумму на банковском счете\"}"
        },
        {
            "Name": "buyer_not_has_money",
            "Conditions": "",
            "Trans": "{\"en\":\"The buyer has NOT the necessary amount in the bank account\",\"ru\":\"У покупателя нет необходимой суммы на банковском счете\"}"
        },
        {
            "Name": "buyer_trans_amount",
            "Conditions": "",
            "Trans": "{\"en\":\"Buyer transferred amount to account \",\"ru\":\"Покупатель перечислил сумму на счет\"}"
        },
        {
            "Name": "buyer_trans_self",
            "Conditions": "",
            "Trans": "{\"en\":\"Buyer transferred to his account an amount\",\"ru\":\"Покупатель перечислил на свой счет сумму\"}"
        },
        {
            "Name": "buyer_transferred_to_account_amount",
            "Conditions": "",
            "Trans": "{\"en\":\"Buyer transferred to his account an amount\",\"ru\":\"Покупатель перечислил на свой счет сумму \"}"
        },
        {
            "Name": "cancel",
            "Conditions": "",
            "Trans": "{\"en\":\"Cancel\",\"ru\":\"Отмена\"}"
        },
        {
            "Name": "confirm",
            "Conditions": "",
            "Trans": "{\"en\":\"Confirm\",\"ru\":\"Подтвердить\"}"
        },
        {
            "Name": "consideration_value",
            "Conditions": "",
            "Trans": "{\"en\":\"Consideration value\",\"ru\":\"Справедливая стоимость\"}"
        },
        {
            "Name": "coordinates",
            "Conditions": "",
            "Trans": "{\"en\":\"Coordinates\",\"ru\":\"Координаты\"}"
        },
        {
            "Name": "department_of_land_resources",
            "Conditions": "",
            "Trans": "{\"en\":\"Department of Land Resources\",\"ru\":\"Отдел земельных ресурсов\"}"
        },
        {
            "Name": "edit",
            "Conditions": "",
            "Trans": "{\"en\":\"Edit\",\"ru\":\"Редактирование\"}"
        },
        {
            "Name": "encumbrance_certificate",
            "Conditions": "",
            "Trans": "{\"en\":\"Encumbrance certificate\",\"ru\":\"Сертификат обременения\"}"
        },
        {
            "Name": "government_value",
            "Conditions": "",
            "Trans": "{\"en\":\"Government value\",\"ru\":\"Государственная стоимость\"}"
        },
        {
            "Name": "have_offer_buy_land",
            "Conditions": "",
            "Trans": "{\"en\":\"You have an offer to buy land\",\"ru\":\"Вы получили предложение купить землю\"}"
        },
        {
            "Name": "install_app",
            "Conditions": "",
            "Trans": "{\"en\":\"Install app\",\"ru\":\"Установить приложение\"}"
        },
        {
            "Name": "land_bank",
            "Conditions": "",
            "Trans": "{\"ru\":\"Земельный Банк\",\"en\":\"Land Bank\"}"
        },
        {
            "Name": "land_depart1",
            "Conditions": "",
            "Trans": "{\"en\":\"Department of Land Resources\",\"ru\":\"Департамент земельных ресурсов\"}"
        },
        {
            "Name": "land_depart2",
            "Conditions": "",
            "Trans": "{\"en\":\"Department of Legal Affairs\",\"ru\":\"Департамент по правовым вопросам\"}"
        },
        {
            "Name": "land_depart3",
            "Conditions": "",
            "Trans": "{\"en\":\"Department of Revenue\",\"ru\":\"Департамент налогов и сборов\"}"
        },
        {
            "Name": "land_nature",
            "Conditions": "",
            "Trans": "{\"en\":\"Nature\",\"ru\":\"Тип\"}"
        },
        {
            "Name": "land_record",
            "Conditions": "",
            "Trans": "{\"en\":\"Land record\",\"ru\":\"Земельная запись\"}"
        },
        {
            "Name": "land_records",
            "Conditions": "",
            "Trans": "{\"en\":\"Land Registry\",\"ru\":\"Земельный реестр\"}"
        },
        {
            "Name": "land_records_add",
            "Conditions": "",
            "Trans": "{\"en\":\"Land Record adding\",\"ru\":\"Добавление земельной записи\"}"
        },
        {
            "Name": "land_records_admin",
            "Conditions": "",
            "Trans": "{\"en\":\"Land records (edit)\",\"ru\":\"Земельный реестр (ред.)\"}"
        },
        {
            "Name": "land_records_edit",
            "Conditions": "",
            "Trans": "{\"en\":\"Land record edit\",\"ru\":\"Редактирование земельной записи\"}"
        },
        {
            "Name": "land_records_sales",
            "Conditions": "",
            "Trans": "{\"en\":\"Land records (Available for sale)\",\"ru\":\"Земельный реестр (продажа)\"}"
        },
        {
            "Name": "land_registry",
            "Conditions": "",
            "Trans": "{\"en\":\"Land Registry\",\"ru\":\"Земельный реестр\"}"
        },
        {
            "Name": "land_registry_depart1_edit",
            "Conditions": "",
            "Trans": "{\"en\":\"Add price\",\"ru\":\"Установите цену\"}"
        },
        {
            "Name": "land_registry_depart2_edit",
            "Conditions": "",
            "Trans": "{\"en\":\"Department of Legal Affairs\",\"ru\":\"Департамент по правовым вопросам\"}"
        },
        {
            "Name": "land_registry_depart3_edit",
            "Conditions": "",
            "Trans": "{\"en\":\"Department of Revenue\",\"ru\":\"Департамент налогов и сборов\"}"
        },
        {
            "Name": "land_registry_view",
            "Conditions": "",
            "Trans": "{\"en\":\"Land record\",\"ru\":\"Страница земельного ресурса\"}"
        },
        {
            "Name": "land_use",
            "Conditions": "",
            "Trans": "{\"en\":\"Land use\",\"ru\":\"Землепользование\"}"
        },
        {
            "Name": "legal_status",
            "Conditions": "",
            "Trans": "{\"en\":\"Legal status\",\"ru\":\"Правовой статус\"}"
        },
        {
            "Name": "local_body",
            "Conditions": "",
            "Trans": "{\"en\":\"Local Body\",\"ru\":\"Местный орган\"}"
        },
        {
            "Name": "market_value",
            "Conditions": "",
            "Trans": "{\"en\":\"Market value\",\"ru\":\"Рыночная стоимость\"}"
        },
        {
            "Name": "message",
            "Conditions": "",
            "Trans": "{\"en\":\"Message\",\"ru\":\"Сообщение\"}"
        },
        {
            "Name": "modification_date",
            "Conditions": "",
            "Trans": "{\"en\":\"Modification date\",\"ru\":\"Дата изменения\"}"
        },
        {
            "Name": "need_processing",
            "Conditions": "",
            "Trans": "{\"en\":\"Need your processing\",\"ru\":\"Нужна ваша обработка\"}"
        },
        {
            "Name": "need_your_processing",
            "Conditions": "",
            "Trans": "{\"en\":\"Need your processing\",\"ru\":\"Нужна ваша обработка\"}"
        },
        {
            "Name": "new_land",
            "Conditions": "",
            "Trans": "{\"en\":\"New land\",\"ru\":\"Новая земля\"}"
        },
        {
            "Name": "new_purchase",
            "Conditions": "",
            "Trans": "{\"en\":\"New purchase\",\"ru\":\"Новая покупка\"}"
        },
        {
            "Name": "no_problem",
            "Conditions": "",
            "Trans": "{\"en\":\"No Issues\",\"ru\":\"Нет проблем\"}"
        },
        {
            "Name": "offer_purchase_sent",
            "Conditions": "",
            "Trans": "{\"en\":\"The offer for purchase sent to the owner\",\"ru\":\"Предложение о покупке, отправленно владельцу\"}"
        },
        {
            "Name": "owner",
            "Conditions": "",
            "Trans": "{\"en\":\"Owner\",\"ru\":\"Владелец\"}"
        },
        {
            "Name": "owner_rejected_purchase",
            "Conditions": "",
            "Trans": "{\"en\":\"Owner rejected to purchase\",\"ru\":\"Владелец отказался от продажи\"}"
        },
        {
            "Name": "owner_rejected_selling",
            "Conditions": "",
            "Trans": "{\"en\":\"Owner rejected to selling\",\"ru\":\"Владелец отказался от продажи\"}"
        },
        {
            "Name": "please_amount",
            "Conditions": "",
            "Trans": "{\"en\":\"Please send the amount\",\"ru\":\"Пожалуйста перечислите сумму\"}"
        },
        {
            "Name": "price",
            "Conditions": "",
            "Trans": "{\"en\":\"Price\",\"ru\":\"Цена\"}"
        },
        {
            "Name": "problem",
            "Conditions": "",
            "Trans": "{\"en\":\"Have Issues\",\"ru\":\"Проблемы\"}"
        },
        {
            "Name": "publickey",
            "Conditions": "",
            "Trans": "{\"en\":\"Public key\",\"ru\":\"Публичный ключ\"}"
        },
        {
            "Name": "purchase_approved",
            "Conditions": "",
            "Trans": "{\"en\":\"Purchase Approved\",\"ru\":\"Подтверждение покупки\"}"
        },
        {
            "Name": "purchase_rejected",
            "Conditions": "",
            "Trans": "{\"en\":\"Purchase rejected\",\"ru\":\"Сделка отменена\"}"
        },
        {
            "Name": "purchase_request",
            "Conditions": "",
            "Trans": "{\"en\":\"Purchase request\",\"ru\":\"Предложение о покупке\"}"
        },
        {
            "Name": "record_add_date",
            "Conditions": "",
            "Trans": "{\"en\":\"Record Add Date\",\"ru\":\"Дата добавления записи\"}"
        },
        {
            "Name": "registration_date",
            "Conditions": "",
            "Trans": "{\"en\":\"Registration Date\",\"ru\":\"Дата регистрации\"}"
        },
        {
            "Name": "send_request",
            "Conditions": "",
            "Trans": "{\"en\":\"Send request\",\"ru\":\"Послать запрос\"}"
        },
        {
            "Name": "sign_sales_contract",
            "Conditions": "",
            "Trans": "{\"en\":\"Sign the sales contract\",\"ru\":\"Подписать договор купли-продажи\"}"
        },
        {
            "Name": "start_buying_land",
            "Conditions": "",
            "Trans": "{\"en\":\"Start buying land\",\"ru\":\"Начать процесс покупки земли\"}"
        },
        {
            "Name": "taken_note",
            "Conditions": "",
            "Trans": "{\"en\":\"Taken note\",\"ru\":\"Понятно\"}"
        },
        {
            "Name": "tax",
            "Conditions": "",
            "Trans": "{\"ru\":\"Налог\",\"en\":\"Tax\"}"
        },
        {
            "Name": "tax_and_bills",
            "Conditions": "",
            "Trans": "{\"en\":\"Tax and bills\",\"ru\":\"Налог и счета\"}"
        },
        {
            "Name": "title",
            "Conditions": "",
            "Trans": "{\"en\":\"Title\",\"ru\":\"Название\"}"
        },
        {
            "Name": "to_land_bank",
            "Conditions": "",
            "Trans": "{\"en\":\"to Land Bank\",\"ru\":\"к Земельному банку\"}"
        },
        {
            "Name": "total",
            "Conditions": "",
            "Trans": "{\"en\":\"Total\",\"ru\":\"Всего\"}"
        },
        {
            "Name": "transactions_not_found",
            "Conditions": "",
            "Trans": "{\"en\":\"Transactions not found\",\"ru\":\"Сделки не найдены\"}"
        },
        {
            "Name": "transfer_tokens",
            "Conditions": "",
            "Trans": "{\"en\":\"Transfer INR tokens\",\"ru\":\"Перевести токены\"}"
        },
        {
            "Name": "undefined",
            "Conditions": "",
            "Trans": "{\"en\":\"Undefined\",\"ru\":\"Не определено\"}"
        },
        {
            "Name": "waiting_bank",
            "Conditions": "",
            "Trans": "{\"en\":\"Waiting for a response bank\",\"ru\":\"Ожидание ответа банка\"}"
        }
    ],
    "menus": [
        {
            "Name": "default_menu",
            "Value": "MenuItem(Title: \"$land_records$ ($all$)\",Page: land_registry_records,Icon: \"fa icon-home\")\n\nMenuItem(Title: \"$land_records$ ($available_sale$)\",Page: land_registry_records_for_sale, Icon: \"fa icon-home\")\nMenuItem(Title: \"$land_records$ (admin)\", Page: land_registry_records_admin,Icon: \"fa icon-globe\")\nMenuItem(Title: $land_bank$, Page: land_registry_bank,Icon: \"fa icon-globe\")\nIf(SysParam(landreg_installed)==0){\n    MenuItem(Title: \"Install $land_records$\", Page: land_registry_install,Icon: \"fa icon-globe\")\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        }
    ],
    "pages": [
        {
            "Name": "land_registry_add",
            "Value": "SetVar(this, land_registry_add)\n\nDiv(content-wrapper){\n    Div(breadcrumb){\n        Div(){\n            LinkPage(LangRes(land_records), land_registry_records)\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\n            Span(LangRes(land_records_add), text-muted)\n        }\n    }\n    SetTitle($department_of_land_resources$)\n    \n    Div(row df f-valign){\n        Div(col-sm-8 col-sm-offset-2 text-left){\n            Div(panel panel-primary data-sweet-alert){\n                Form(){\n                    Div(panel-heading){\n                        Div(panel-title, LangRes(add_new_record))\n                    }\n                    Div(list-group-item){\n                        Div(row df f-valign){\n                            Div(col-md-3 text-right){\n                                Strong(LangRes(address))\n                            }\n                            Div(col-md-9 text-center){\n                                InputMap(Name: Coords,Type: polygon, MapType: hybrid, Value: `{\"zoom\":8, \"center\":{\"lat\":55.749942860682545,\"lng\":37.6207172870636}}`)\n                            }\n                        }\n                    }\n                \n                    Div(list-group-item){\n                        Div(row df f-valign){\n                            Div(col-md-3 text-right){\n                                Strong(LangRes(registration_date))\n                            }\n                            Div(col-md-9 mt-xs text-left){\n                                Input(Name: RegistrationDate, Type: date, Class: form-control input-sm, Value: \"\")\n                            }\n                        }\n                    }\n                    Div(list-group-item){\n                        Div(row df f-valign){\n                            Div(col-md-3 text-right){\n                                Strong(LangRes(owner))\n                            }\n                            Div(col-md-9 mt-xs text-left){\n                                DBFind(Name: members, Source: src_owners)\n                                Select(Name: OwnerId, Source: src_owners, ValueColumn: id, NameColumn: member_name, Class: form-control m-b)\n                            }\n                        }\n                        Div(row df f-valign){\n                            Div(col-md-3 text-right){\n                                Strong(LangRes(land_nature))\n                            }\n                            Div(col-md-9 mt-xs text-left){\n                                EcosysParam(Name: land_nature, Source: src_nature)\n                                Select(Name: LandNature, Source: src_nature, Class: form-control, ValueColumn: id, NameColumn: name)\n                            }\n                        }\n                        Div(row df f-valign){\n                            Div(col-md-3 text-right){\n                                Strong(LangRes(local_body))\n                            }\n                            Div(col-md-9 mt-xs text-left){\n                                EcosysParam(Name: land_local_body, Source: src_local_body)\n                                Select(Name: LandLocalBody, Source: src_local_body, Class: form-control, ValueColumn: id, NameColumn: name)\n                            }\n                        }\n                    }\n                    Div(list-group-item){\n                        Div(row df f-valign){\n                            Div(col-md-3 text-right){\n                                Strong(LangRes(land_use))\n                            }\n                            Div(col-md-9 mt-xs text-left){\n                                EcosysParam(Name: land_use, Source: src_use)\n                                Select(Name: LandUse, Source: src_use, ValueColumn: id, NameColumn: name, Class: form-control)\n                            }\n                        }\n                        Div(row df f-valign){\n                            Div(col-md-3 text-right){\n                                Strong(LangRes(buildings_use_class))\n                            }\n                            Div(col-md-9 mt-xs text-left){\n                                EcosysParam(Name: land_buildings_use_class, Source: src_buildings_use_class)\n                                Select(Name: BuildingsUseClass, Source: src_buildings_use_class, Class: form-control, ValueColumn: id, NameColumn: name)\n                            }\n                        }\n                    }\n                    \n                    Div(panel-footer){\n                        Div(clearfix){\n                            Div(pull-right){\n                                Div(btn-group){\n                                    Button(Page: land_registry_records, Body: LangRes(back), Class: btn btn-default btn-pill-left)\n                                    Button(Body: LangRes(add), Class: btn btn-primary btn-pill-right, Contract: land_registry_Add, Page: land_registry_records)\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Menu": "default_menu"
        },
        {
            "Name": "land_registry_bank",
            "Value": "SetTitle($land_bank$)\n\n\nDBFind(Name: land_registry_ownership, Source: src_step1).Where(\"step=1\").Vars(step1)\n\nIf(GetVar(step1_lend_object_id)){\n    SetVar(LandId, #step1_lend_object_id#)\n}.Else{\n    SetVar(LandId, 0)\n}\n\nIf(GetVar(LandId)){\n    DBFind(Name: land_registry, Source: src_land_registry).WhereId(#LandId#).Vars(entity)\n    DBFind(Name: roles_assign, Source: src_roles_assign).Where(\"role_name='land_bank' and delete=0\").Vars(bank_role)\n    \n    DBFind(Name: members, Source: src_member).Where(\"id=#bank_role_member_id#\").Vars(bank)\n    \n    \n    DBFind(Name: land_registry_ownership,Source: src_land_ownership).Where(\"lend_object_id=#LandId#\").Vars(ownership)\n    \n    DBFind(Name: members, Source: src_member).Where(\"id=#entity_owner_id#\").Vars(owner)\n    DBFind(Name: members, Source: src_member).Where(\"id=#ownership_owner_new_id#\").Vars(buyer)\n    \n    \n    \n    Div(content-wrapper){\n        Div(breadcrumb){\n            Div(text-muted){\n                Span($land_bank$).Style(margin-right:10px;)\n                Image(Src: \"#bank_avatar#\", Alt: Avatar,Class: img-thumbnail img-circle).Style(width:30px;)\n                Span(GetVar(bank_member_name)).Style(margin-left:10px;)\n            }\n        }\n        \n        Div(row df f-valign){\n            Div(col-sm-8 col-sm-offset-2 col-lg-6 col-lg-offset-3){\n                Div(panel panel-primary data-sweet-alert){\n                    Div(panel-heading){\n                        Div(panel-title){\n                            Land Record #GetVar(LandId) Data\n                        }\n                    }\n                    Form(){\n                        Div(list-group-item){\n                            Div(row df f-valign){\n                                Div(col-md-5 mt-sm text-right){\n                                    Div(h5 text-normal){\n                                        $area_size$\n                                        (Span(m).(2).Style(vertical-align: super;font-size:small;)):\n                                    }\n                                }\n                                Div(col-md-7 mt-sm text-left) {\n                                    Div(h5 text-normal){ GetVar(entity_area)}\n                                }\n                            }\n                            Div(row df f-valign){\n                                Div(col-md-5 mt-sm text-right){\n                                    Div(h5 text-normal){ LangRes(address):}\n                                }\n                                Div(col-md-7 mt-sm text-left){\n                                    Div(h5 text-normal){ GetVar(entity_address)}\n                                }\n                            }\n                            \n                            Div(row df f-valign){\n                                Div(col-md-5 mt-sm text-right){\n                                    Div(h5 text-normal){ LangRes(owner):}\n                                }\n                                Div(col-md-7 mt-sm text-left text-bold){\n                                    Image(Src:\"#owner_avatar#\", Alt: avatar, Class: img-thumbnail img-circle).Style(width:30px;)\n                                    Span(GetVar(owner_member_name)).Style(margin-left:10px;)\n                                }\n                            }\n                            Div(row df f-valign){\n                                Div(col-md-5 mt-sm text-right){\n                                    Div(h5 text-normal){ LangRes(buyer):}\n                                }\n                                Div(col-md-7 mt-sm text-left text-bold){\n                                    Image(Src: \"#buyer_avatar#\", Alt: avatar, Class: img-thumbnail img-circle).Style(width:30px;)\n                                    Span(GetVar(buyer_member_name)).Style(margin-left:10px;)\n                                }\n                            }\n                            Div(row df f-valign){\n                                Div(col-md-5 mt-sm text-right){\n                                    Div(h5 text-normal){ LangRes(land_use):}\n                                }\n                                Div(col-md-7 mt-sm text-left){\n                                    Div(h5 text-normal){\n                                        EcosysParam(Name: land_use, Index: #entity_land_use#)\n                                    }\n                                }\n                            }\n                            Div(row df f-valign){\n                                Div(col-md-5 mt-sm text-right){\n                                    Div(h5 text-normal){ LangRes(buildings_use_class):}\n                                }\n                                Div(col-md-7 mt-sm text-left){\n                                    Div(h5 text-normal){\n                                        EcosysParam(Name: buildings_use_class, Index: #entity_buildings_use_class#)\n                                    }\n                                }\n                            }\n                            Div(row df f-valign){\n                                Div(col-md-5 mt-sm text-right){\n                                    Div(h5 text-normal){ LangRes(local_body):}\n                                }\n                                Div(col-md-7 mt-sm text-left){\n                                    Div(h5 text-normal){\n                                        EcosysParam(Name: land_local_body, Index: #entity_land_local_body#)\n                                    }\n                                }\n                            }\n                            Div(row df f-valign){\n                                Div(col-md-5 mt-sm text-right){\n                                    Div(h5 text-normal){ LangRes(land_nature):}\n                                }\n                                Div(col-md-7 mt-sm text-left){\n                                    Div(h5 text-normal){\n                                        EcosysParam(Name: land_nature, Index: #entity_land_nature#)\n                                    }\n                                }\n                            }\n                            Div(row df f-valign){\n                                Div(col-md-5 mt-sm text-right){\n                                    Div(h5 text-normal){ LangRes(legal_status):}\n                                }\n                                Div(col-md-7 mt-sm text-left){\n                                    If(#entity_legal_status#>0){\n                                        Div(h5 text-normal){\n                                            EcosysParam(Name: land_yes_no, Index: #entity_legal_status#)\n                                        }\n                                    }.Else{\n                                        Div(h5 text-normal){ LangRes(undefined)}\n                                    }\n                                }\n                            }\n                            Div(row df f-valign){\n                                Div(col-md-5 mt-sm text-right){\n                                    Div(h5 text-normal){ LangRes(encumbrance_certificate):}\n                                }\n                                Div(col-md-7 mt-sm text-left){\n                                    If(#entity_encumbrance_certificate#>0){\n                                        Div(h5 text-normal){\n                                            EcosysParam(Name: land_yes_no, Index: #entity_encumbrance_certificate#)\n                                        }\n                                    }.Else{\n                                        Div(h5 text-normal){ LangRes(undefined)}\n                                    }\n                                }\n                            }\n                            Div(row df f-valign){\n                                Div(col-md-5 mt-sm text-right){\n                                    Div(h5 text-normal){ LangRes(tax_and_bills):}\n                                }\n                                Div(col-md-7 mt-sm text-left){\n                                    If(#entity_tax_receipt_and_bills#>0){\n                                        Div(h5 text-normal){\n                                            EcosysParam(Name: land_yes_no, Index: #entity_tax_receipt_and_bills#)\n                                        }\n                                    }.Else{\n                                        Div(h5 text-normal){ LangRes(undefined)}\n                                    }\n                                }\n                            }\n                            \n                            Div(row df f-valign){\n                                Div(col-md-5 mt-sm text-right){\n                                    Div(h5 text-normal){ LangRes(market_value):}\n                                }\n                                Div(col-md-7 mt-sm text-left){\n                                    Div(h5 text-normal){ GetVar(entity_price_market_value) INR}\n                                }\n                            }\n                            Div(row df f-valign){\n                                Div(col-md-5 mt-sm text-right){\n                                    Div(h5 text-normal){ LangRes(government_value):}\n                                }\n                                Div(col-md-7 mt-sm text-left){\n                                    Div(h5 text-normal){ GetVar(entity_price_gov_value) INR}\n                                }\n                            }\n                        }\n                        \n                        Div(list-group-item){\n                            Div(row df f-valign){\n                                Div(col-md-5 mt-sm text-right){\n                                    Div(h4 text-normal){ LangRes(consideration_value):}\n                                }\n                                Div(col-md-3 mt-sm text-right){\n                                    Div(h4 text-normal){ GetVar(entity_price)}\n                                }\n                                Div(col-md-4 mt-sm text-left){\n                                    Div(h4 text-normal){ INR}\n                                }\n                            }\n                            Div(row df f-valign){\n                                Div(col-md-5 mt-sm text-right){\n                                    Div(h4 text-normal){ LangRes(tax):}\n                                }\n                                Div(col-md-3 mt-sm text-right){\n                                    SetVar(tax, Calculate(\"#entity_price#*0.05\"))\n                                    Div(h4 text-normal){ GetVar(tax)}\n                                }\n                                Div(col-md-4 mt-sm text-left){\n                                    Div(h4 text-normal){ INR}\n                                }\n                            }\n                            Div(row df f-valign){\n                                Div(col-md-5 mt-sm text-right){\n                                    Div(h4 text-bold){ LangRes(total):}\n                                }\n                                Div(col-md-3 mt-sm text-right){\n                                    SetVar(smmm, Calculate(\"#entity_price#*1.05\"))\n                                    Div(h4 text-bold){ GetVar(smmm)}\n                                }\n                                Div(col-md-4 mt-sm text-left){\n                                    Div(h4 text-normal){ INR}\n                                }\n                            }\n                            Div(row df f-valign){\n                                Div(col-md-12 mt-sm text-center){\n                                    Div(h4 text-center text-bold){\n                                        LangRes(buyer_has_money)\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    \n                    Form(panel-footer){\n                        Div(clearfix){\n                            Div(pull-right){\n                                Input(Name: LandId, Type: hidden, Value: #LandId#)\n                                Input(Name: NotificId, Type: hidden, Value: #notific_id#)\n                                Button(Class:btn btn-primary, Contract: land_registry_BankAction, Body: LangRes(transfer_tokens), Page: land_registry_records)\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}.Else{\n    Div(text-center h4){$transactions_not_found$}\n    \n}",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Menu": "default_menu"
        },
        {
            "Name": "land_registry_depart1_edit",
            "Value": "SetVar(depart, 1)\nSetVar(depart1, 1)\nSetTitle($land_registry_depart1_edit$)\nInclude(land_registry_edit)",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Menu": "default_menu"
        },
        {
            "Name": "land_registry_depart2_edit",
            "Value": "SetVar(depart, 1)\nSetVar(depart2, 1)\nSetTitle($land_registry_depart2_edit$)\nInclude(land_registry_edit)",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Menu": "default_menu"
        },
        {
            "Name": "land_registry_depart3_edit",
            "Value": "SetVar(depart, 1)\nSetVar(depart3, 1)\nSetTitle($land_registry_depart3_edit$)\nInclude(land_registry_edit)",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Menu": "default_menu"
        },
        {
            "Name": "land_registry_edit",
            "Value": "SetTitle($land_records_edit$)\nInclude(land_registry_edit)",
            "Conditions": "ContractConditions(`MainCondition`)",
            "Menu": "default_menu"
        },
        {
            "Name": "land_registry_install",
            "Value": "SetTitle($land_registry$ : $install_app$)\nForm(row text-center){\n    Button(Contract: land_registry_Install, Page: land_registry_records, Body: $install_app$)\n}",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Menu": "default_menu"
        },
        {
            "Name": "land_registry_records",
            "Value": "SetTitle($land_records$)\nSetVar(this, land_registry_records)\n\nSetVar(admin, 0)\nSetVar(sales, 0)\n\nInclude(land_registry_set_depart)\n\nIf(And(#isSearch#==1, #str_search#>0)){\n    SetVar(searchQuery, \"delete=0 and land_use=#str_search#\")\n}.Else{\n    SetVar(searchQuery, \"delete=0\")\n}\n\nIf(#depart2#==1){\n    SetVar(v_Where, \"#searchQuery# and price>0 and tax_receipt_and_bills=1 and legal_status=1 and encumbrance_certificate=1 and owner_id<>#key_id#\")\n}.Else{\n    SetVar(v_Where, \"#searchQuery#\")\n}\n\nIf(#depart3#==1){\n    SetVar(v_Where, \"#searchQuery# and owner_id=#key_id#\")\n}.Else{\n    SetVar(v_Where, \"#searchQuery#\")\n}\n\nInclude(land_registry_records)\n",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Menu": "default_menu"
        },
        {
            "Name": "land_registry_records_admin",
            "Value": "SetTitle($land_records$ (admin))\nSetVar(this, land_registry_records_admin)\nSetVar(admin, 1)\nSetVar(sales, 0)\nSetVar(depart, 0)\n\nIf(And(#isSearch#==1, #str_search#>0)){\n    SetVar(v_Where, \"delete=0 and land_use=#str_search#\")\n}.Else{\n    SetVar(v_Where, \"delete=0\")\n}\n\nInclude(land_registry_records)",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Menu": "default_menu"
        },
        {
            "Name": "land_registry_records_for_sale",
            "Value": "SetTitle($land_records_sales$)\nSetVar(this, land_registry_records_for_sale)\nSetVar(sales, 1)\nSetVar(admin, 0)\nSetVar(depart, 0)\n\n\nIf(And(#isSearch#==1, #str_search#>0)){\n    SetVar(searchQuery, \"delete=0 and land_use=#str_search#\")\n}.Else{\n    SetVar(searchQuery, \"delete=0\")\n}\nIf(){\n    SetVar(v_Where, \"#searchQuery# and price>0 and tax_receipt_and_bills=1 and legal_status=1 and encumbrance_certificate=1 and owner_id<>#key_id#\")\n}\nSetVar(v_Where, \"#searchQuery# and price>0 and tax_receipt_and_bills=1 and legal_status=1 and encumbrance_certificate=1\")\n\nInclude(land_registry_records)",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Menu": "default_menu"
        },
        {
            "Name": "land_registry_view",
            "Value": "If(GetVar(notific_id)){}.Else{SetVar(notific_id, 0)}\n\nIf(#admin#==1){}.Else{SetVar(admin, 0)}\n\nIf(#LandId#>0){\n    SetVar(title, $land_record$)\n    SetVar(debug, EcosysParam(debug))\n    \n    If(GetVar(LandId)){\n        DBFind(Name: land_registry, Source: src_entry).WhereId(#LandId#).Vars(entry)\n        DBFind(Name: land_registry_ownership, Source: src_land_ownership).Where(lend_object_id=#LandId#).Vars(ownership)\n        \n        SetVar(trade_step, #ownership_step#)\n        DBFind(Name: members, Source: src_owner).Where(\"id=#ownership_owner_id#\").Vars(owner)\n        DBFind(Name: members, Source: src_buyer).Where(\"id=#ownership_owner_id#\").Vars(buyer)\n        SetVar(orig_key_id, #key_id#)\n        If(#notific_id#>0){\n            SetVar(key_id,#owner_id#)\n        }.Else{\n            SetVar(key_id,#orig_key_id#)\n        }\n        \n        If(#ownership_owner_id#!=#ownership_owner_new_id#){\n            DBFind(Name: members, Source: src_owners).Where(\"id=#ownership_owner_new_id#\").Vars(buyer)\n        }\n    }\n    If(#trade_step#==-1){\n        SetVar(map_height, 400)\n    }.Else{\n        SetVar(map_height, 200)\n    }\n    SetTitle(#title#)\n    Div(content-wrapper){\n        Div(breadcrumb){\n            Div(){\n                LinkPage(Body: $land_records$,Page: land_registry_records, PageParams: \"admin=#admin#\")\n                Span(/).Style(margin-right: 10px; margin-left: 10px;)\n                Span(#title#, text-muted)\n            }\n        }\n        If(GetVar(LandId)){\n            Div(row){\n                Div(col-sm-8 col-sm-offset-2 col-lg-6 col-lg-offset-3 mt-sm text-left){\n                    Div(panel panel-default){\n                        Form(){\n                            Div(list-group-item){\n                                Div(h3){$land_record$ #GetVar(LandId)}\n                            }\n                            Div(list-group-item){\n                                Map(MapType:hybrid, Hmap:#map_height#, Value:#entry_map_coords#)\n                            }\n                            \n                            Div(list-group-item){\n                                Div(row){\n                                    Div(col-md-5 mt-sm text-right h5){\n                                        Strong($owner$:)\n                                    }\n                                    Div(col-md-6 mt-sm text-left h5){\n                                        Div(){\n                                            Image(Src: #owner_avatar#, Alt: ava, Class: img-thumbnail img-circle).Style(max-width:40px;margin-right:10px;)\n                                            Span(#owner_member_name#)\n                                        }\n                                    }\n                                }\n                                Div(row){\n                                    Div(col-md-5 mt-sm text-right h5){\n                                        Strong($area_size$)\n                                        (Span(m).(2).Style(vertical-align: super;font-size:small;)):\n                                    }\n                                    Div(col-md-7 mt-sm text-left h5){#entry_area#}\n                                }\n                                Div(row){\n                                    Div(col-md-5 mt-sm text-right h5){\n                                        Strong($address$:)\n                                    }\n                                    Div(col-md-7 mt-sm text-left h5){#entry_address#}\n                                }\n                                \n                                Div(row){\n                                    Div(col-md-5 mt-sm text-right h5){Strong($registration_date$:)}\n                                    Div(col-md-7 mt-sm text-left h5){DateTime(#entry_registration_date#)}\n                                }\n                                Div(row){\n                                    Div(col-md-5 mt-sm text-right h5){Strong($record_add_date$:)}\n                                    Div(col-md-7 mt-sm text-left h5){DateTime(#entry_date_create#)}\n                                }\n                                Div(row){\n                                    Div(col-md-5 mt-sm text-right h5){Strong($modification_date$:)}\n                                    Div(col-md-7 mt-sm text-left h5){DateTime(#entry_modification_date#)}\n                                }\n                                Div(row){\n                                    Div(col-md-5 mt-sm text-right h5){Strong($land_use$:)}\n                                    Div(col-md-7 mt-sm text-left h5){\n                                        EcosysParam(Name: land_use, Index: #entry_land_use#)\n                                    }\n                                }\n                                Div(row){\n                                    Div(col-md-5 mt-sm text-right h5){Strong($buildings_use_class$:)}\n                                    Div(col-md-7 mt-sm text-left h5){\n                                        EcosysParam(Name: buildings_use_class, Index: #entry_buildings_use_class#)\n                                    }\n                                }\n                                Div(row){\n                                    Div(col-md-5 mt-sm text-right h5){Strong($local_body$:)}\n                                    Div(col-md-7 mt-sm text-left h5){\n                                        EcosysParam(Name: land_local_body, Index: #entry_land_local_body#)\n                                    }\n                                }\n                                Div(row){\n                                    Div(col-md-5 mt-sm text-right h5){Strong($land_nature$:)}\n                                    Div(col-md-7 mt-sm text-left h5){\n                                        EcosysParam(Name: land_nature, Index: #entry_land_nature#)\n                                    }\n                                }\n                                \n                                Div(row){\n                                    Div(col-md-5 mt-sm text-right h5){Strong($legal_status$:)}\n                                    Div(col-md-5 mt-sm text-left h5){\n                                        DBFind(Name: notifications, Source: src_role2).Where(\"page_params='LandId=%v,request=second,depart=1,depart2=1' and closed=0\").Vars(depart2_alert)\n                                        If(GetVar(depart2_alert_id)){\n                                            SetVar(alert_depart2, 1)\n                                        }.Else{\n                                            SetVar(alert_depart2, 0)\n                                        }\n                                        \n                                        If(GetVar(entry_legal_status)){\n                                            EcosysParam(Name: legal_status, Index: #entry_legal_status#)\n                                        }.Else{\n                                            LangRes(undefined)\n                                        }\n                                    }\n                                    Div(col-md-2){\n                                        If(And(#entry_legal_status#!=1, #alert_depart2#==0)){\n                                            Button(Contract: land_registry_Depart2Request, Body: $send_request$, \"LandId=#LandId#\", Class: btn btn-default, Page: land_registry_records, Params: \"LandId=#LandId#\").Alert($ask_request_second$, $confirm$, $cancel$)\n                                        }\n                                    }\n                                }\n                                \n                                Div(row){\n                                    Div(col-md-5 mt-sm text-right h5){Strong($encumbrance_certificate$:)}\n                                    Div(col-md-5 mt-sm text-left h5){\n                                        If(GetVar(entry_encumbrance_certificate)){\n                                            EcosysParam(Name: tax_receipt_and_bills, Index: #entry_encumbrance_certificate#)\n                                        }.Else{\n                                            LangRes(undefined)\n                                        }\n                                    }\n                                    Div(col-md-2){\n                                        If(And(#entry_encumbrance_certificate#!=1, #alert_depart2#==0)){\n                                            Button(Contract: land_registry_Depart2Request, Body: $send_request$, Params: \"LandId=#LandId#\", Class: btn btn-default, Page: land_registry_view, PageParams: \"LandId=#LandId#\").Alert($ask_request_second$, $confirm$, $cancel$)\n                                        }\n                                    }\n                                }\n                                \n                                Div(row){\n                                    Div(col-md-5 mt-sm text-right h5){Strong($tax_and_bills$:)}\n                                    Div(col-md-5 mt-sm text-left h5){\n                                        DBFind(Name: notifications, Source: src_role2).Where(\"page_params='LandId=%v,request=second,depart=1,depart3=1' and closed=0\").Vars(depart3_alert)\n                                        If(GetVar(depart3_alert_id)){\n                                            SetVar(alert_depart3, 1)\n                                        }.Else{\n                                            SetVar(alert_depart3, 0)\n                                        }\n                                        If(GetVar(entry_tax_receipt_and_bills)){\n                                            EcosysParam(Name: tax_receipt_and_bills, Index: #entry_tax_receipt_and_bills#)\n                                        }.Else{\n                                            LangRes(undefined)\n                                        }\n                                    }\n                                    Div(col-md-2){\n                                        If(And(#entry_tax_receipt_and_bills#!=1, #alert_depart3#==0)){\n                                            Span().Style(margin-right:10px;)\n                                            Button(Contract: land_registry_Depart3Request, Body: $send_request$, Params: \"LandId=#LandId#\", Class: btn btn-default, Page: land_registry_view, PageParams: \"LandId=#LandId#\").Alert($ask_request_second$, $confirm$, $cancel$)\n                                        }\n                                    }\n                                }\n                                \n                                Div(row){\n                                    Div(col-md-5 mt-sm text-right h5){Strong(\"$market_value$ (INR):\")}\n                                    Div(col-md-2){\n                                        If(#entry_price_market_value#>0){\n                                            #entry_price_market_value#\n                                        }.Else{\n                                            LangRes(undefined)\n                                        }\n                                    }\n                                    Div(col-md-2){\n                                        If(And(#entry_price_market_value#==0, #alert_depart3#==0)){\n                                            Span().Style(margin-right:10px;)\n                                            Button(Contract: land_registry_Depart3Request, Body: $send_request$, Params: \"LandId=#LandId#\", Class: btn btn-default, Page: land_registry_view, PageParams: \"LandId=#LandId#\").Alert($ask_request_second$, $confirm$, $cancel$)\n                                        }\n                                    }\n                                }\n                                Div(row){\n                                    Div(col-md-5 mt-sm text-right h5){Strong(\"$government_value$ (INR):\"}\n                                    Div(col-md-5 mt-sm text-left h5){\n                                        \n                                        If(#entry_price_gov_value#>0){\n                                            #entry_price_gov_value#\n                                        }.Else{\n                                            LangRes(undefined)\n                                        }\n                                    }\n                                    Div(col-md-2){\n                                        If(And(#entry_price_gov_value#==0, #alert_depart3#==0)){\n                                            Button(Contract: land_registry_Depart3Request, Body: $send_request$, Params: \"LandId=#LandId#\", Class: btn btn-default, Page: land_registry_view, PageParams: \"LandId=#LandId#\").Alert($ask_request_second$, $confirm$, $cancel$)\n                                        }\n                                    }\n                                }\n                                Div(row){\n                                    Div(col-md-5 mt-sm text-right h5){\n                                        Strong(\"$consideration_value$ (INR):\")\n                                    }\n                                    Div(col-md-5 mt-sm text-left h5){\n                                        If(#entry_price#>0){\n                                            #entry_price#\n                                        }.Else{\n                                            LangRes(undefined)\n                                        }\n                                    }\n                                    Div(col-md-2){\n                                        If(#ownership_owner_id#==#key_id#){\n                                            Button(Page: land_registry_edit, PageParams: \"LandId=#LandId#,depart1=1\", Class: btn btn-default fa fa-edit)\n                                        }\n                                    }\n                                }\n                            }\n                            \n                            SetVar(canStartTrade, And(#entry_price#>0,#entry_tax_receipt_and_bills#==1,#entry_legal_status#==1,#entry_encumbrance_certificate#==1,#ownership_owner_id#!=#key_id#,#trade_step#==-1))\n                            \n                            If(#debug#==1){\n                                Div(){notific_id:#notific_id#}\n                                Div(){entry_tax_receipt_and_bills:#entry_tax_receipt_and_bills#}\n                                Div(){entry_legal_status:#entry_legal_status#}\n                                Div(){entry_encumbrance_certificate:#entry_encumbrance_certificate#}\n                                Div(){ownership_owner_id:#ownership_owner_id#}\n                                Div(){key_id:#key_id#}\n                                Div(){trade_step:#trade_step#}\n                                Div(){canStartTrade: #canStartTrade# }\n                            }\n                            If(#canStartTrade#==1){\n                                Div(list-group-item clearfix){\n                                    DBFind(Name: members, Source: src_me).Where(id=#key_id#).Vars(me)\n                                    DBFind(Name: land_registry_accounts, Source: key_acc).Where(\"member_id=#key_id# and onhold=0\").Vars(my_account)\n                                    Div(pull-right){\n                                      \n                                        If(#my_account_amount#>=#entry_price#){\n                                            $start_buying_land$:\n                                            \n                                            Image(Src: \"#me_avatar#\", Alt: avatar, Class: img-thumbnail img-circle).Style(width:40px;)\n                                            Span(#me_member_name#).Style(margin:0 10px 0 10px)\n                                            \n                                            Button(Contract: land_registry_InititiatePurchase, Body: $buy$, Params: \"LandId=#LandId#\", Class: btn btn-primary,Page: land_registry_view, PageParams: \"LandId=#LandId#\").Alert($ask_initiate_land_purchase$, $confirm$, $cancel$)\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    \n                    If(#trade_step#>=0){\n                        Form(row){\n                            Div(col-md-6 mt-sm text-center){\n                                Div(panel panel-default data-sweet-alert){\n                                    Div(panel-body){\n                                        Strong($owner$)\n                                        Div(row){\n                                            Div(col-md-6 mt-sm text-right){\n                                                Image(Src: \"#owner_avatar#\", Alt: ava, Class: img-thumbnail img-circle).Style(width:40px;)\n                                            }\n                                            Div(col-md-6 h5 text-left){#owner_member_name#}\n                                        }\n                                    }\n                                    \n                                    Div(panel-footer){\n                                        If(And(#trade_step#==0, #owner_id#!=#key_id#)){\n                                            SetVar(ext_height, 80px;)\n                                            Div(h5 text-bold text-center){$offer_purchase_sent$}.Style(height:#ext_height#)\n                                        }\n                                        \n                                        If(And(#trade_step#==0, #owner_id#==#key_id#)){\n                                            SetVar(ext_height, 100px;)\n                                            Div(h5 text-bold text-center){$have_offer_buy_land$}\n                                            Div(clearfix){\n                                                Div(pull-left){\n                                                    Button(Contract: land_registry_PurchaseReject, Body: $reject$, Params: \"LandId=#LandId#,NotificId=#notific_id#\", Class: btn btn-danger, Page: land_registry_records).Alert($ask_reject_purchase$, $confirm$, $cancel$)\n                                                }\n                                                Div(pull-right){\n                                                    Button(Contract: land_registry_PurchaseAccept, Params: \"LandId=#LandId#,NotificId=#notific_id#\", Body: $accept$, Class: btn btn-success, Page: land_registry_records).Alert($ask_accept_purchase$, $confirm$, $cancel$)\n                                                }\n                                            }\n                                        }\n                                        \n                                        If(#trade_step#==2){\n                                            SetVar(ext_height, 100px;)\n                                            Div(h5 text-center){\n                                                Button(Contract: land_registry_SignSales, Body: $sign_sales_contract$, Params: \"LandId=#LandId#,NotificId=#notific_id#\", Class: btn btn-success btn-block, Page: land_registry_records).Alert($ask_sign$, $confirm$, $cancel$)\n                                            }\n                                        }\n                                        \n                                    }.Style(height:#ext_height#)\n                                }\n                            }\n                            \n                            Div(col-md-6 mt-sm text-center){\n                                Div(panel panel-default data-sweet-alert){\n                                    Div(panel-body){\n                                        Strong($buyer$)\n                                        Div(row){\n                                            Div(col-md-6 mt-sm text-right){\n                                                Image(Src: \"#buyer_avatar#\", Alt: avatar, Class: img-thumbnail img-circle).Style(width:40px;)\n                                            }\n                                            Div(col-md-6 h5 text-left){#buyer_member_name#}\n                                        }\n                                    }\n                                    \n                                    Div(panel-footer){\n                                        If(#trade_step#==1){\n                                            Div(h5 text-bold text-center){\n                                                $please_amount$ Calculate(#entry_price# * 1.05)\n                                                INR $to_land_bank$\n                                            }\n                                        }\n                                        \n                                        If(#trade_step#==2){\n                                            DBFind(Name: land_registry_accounts, Source: buyer_accounts).Where(member_id=#ownership_owner_new_id# and account_type=3 and onhold=0).Vars(buyer)\n                                            Div(h5 text-bold text-center){\n                                                $buyer_trans_self$ (INR) Calculate(#entry_price# * 1.05)\n                                            }\n                                        }\n                                        \n                                        If(#trade_step#==10){\n                                            Input(Name: land_id_tmp, Type: hidden, Value: #LandId#)\n                                            Input(Name: notific_id_tmp, Type: hidden, Value: #notific_id#)\n                                            Div(h5 text-bold text-center){$owner_rejected_selling$}\n                                            Div(clearfix){\n                                                Div(pull-right){\n                                                    Button(Class: btn btn-primary, Contract: land_registry_TakenNote, Body: $taken_note$, Page: land_registry_view, PageParams:\"LandId=#LandId#\")\n                                                }\n                                            }\n                                        }\n                                    }.Style(height:#ext_height#)\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}.Else{\n    Div(Class: col-md-12 alert alert-danger text-center){$attention$}\n}",
            "Conditions": "ContractConditions(`MainCondition`)",
            "Menu": "default_menu"
        }
    ],
    "parameters": [
        {
            "Name": "buildings_use_class",
            "Value": "Shops,Financial and professional services,Restaurants and cafes,Business,Hotels,Dwellinghouses,Non-residential institutions,No",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "debug",
            "Value": "0",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "land_buildings_use_class",
            "Value": "Shops,Financial and professional services,Restaurants and cafes,Business,Hotels,Dwellinghouses,Non-residential institutions,No",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "land_local_body",
            "Value": "Minor Gram Panchayat,Major Gram Panchayat,Other Municipality/Notified Area,Municipal Corporation",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "land_nature",
            "Value": "0101 Sale Deed,0111 AGREEMENT OF SALE CUM GPA,0202 Mortgage without Possession,0206 Mortgage deed by small farmer for Agrl.loans in f/o PAC/Bank,0208 Deposit of Title Deeds,0302 Gift Settlement in f/o family member,0303 Gift Settlement in f/o others,0304 Gift Settlement for Charitable/religious purposes,0401 Partition,0402 Partition among Family Members,0505 RECEIPT(R.T.D.M),0701 Lease Deed,0801 Rectification Deed,0803 Cancellation Deed",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "land_use",
            "Value": "01 Residential-U,09 URBAN VacantLand(Residential)-U,21 Dry land-R,26 Wet Land double crop-R,27 Wet Land single crop-R,30 Coconut Garden-R",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "land_yes_no",
            "Value": "no_problem,problem",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "legal_status",
            "Value": "No Issues,Title Not Clear,Multiple Owner Claims,Khata Not Clear",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "tax_receipt_and_bills",
            "Value": "No Issues,Have Issues",
            "Conditions": "ContractConditions(\"MainCondition\")"
        }
    ],
    "tables": [
        {
            "Name": "land_registry",
            "Columns": "[{\"name\":\"delete\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"legal_status\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"area\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"land_use\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"owner_id\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"map_coords\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"land_nature\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"land_local_body\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"modification_date\",\"type\":\"datetime\",\"conditions\":\"true\"},{\"name\":\"price_market_value\",\"type\":\"money\",\"conditions\":\"true\"},{\"name\":\"tax_receipt_and_bills\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"encumbrance_certificate\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"address\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"date_create\",\"type\":\"datetime\",\"conditions\":\"true\"},{\"name\":\"price_gov_value\",\"type\":\"money\",\"conditions\":\"true\"},{\"name\":\"buildings_use_class\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"price\",\"type\":\"money\",\"conditions\":\"true\"},{\"name\":\"registration_date\",\"type\":\"datetime\",\"conditions\":\"true\"}]",
            "Permissions": "{\"insert\":\"true\",\"update\":\"true\",\"new_column\":\"true\"}"
        },
        {
            "Name": "land_registry_accounts",
            "Columns": "[{\n    \"name\": \"amount\",\n    \"type\": \"number\",\n    \"conditions\": \"true\"\n}, {\n    \"name\": \"onhold\",\n    \"type\": \"number\",\n    \"conditions\": \"true\"\n}, {\n    \"name\": \"member_id\",\n    \"type\": \"number\",\n    \"conditions\": \"true\"\n}, {\n    \"name\": \"member_name\",\n    \"type\": \"varchar\",\n    \"conditions\": \"true\"\n}, {\n    \"name\": \"account_type\",\n    \"type\": \"number\",\n    \"conditions\": \"true\"\n}, {\n    \"name\": \"amount_money\",\n    \"type\": \"money\",\n    \"conditions\": \"true\"\n}, {\n    \"name\": \"member_avatar\",\n    \"type\": \"text\",\n    \"conditions\": \"true\"\n}]",
            "Permissions": "{\"insert\":\"true\",\"update\":\"true\",\"new_column\":\"true\"}"
        },
        {
            "Name": "land_registry_editing",
            "Columns": "[{\"name\":\"person_name\",\"type\":\"varchar\",\"conditions\":\"true\"},{\"name\":\"lend_object_id\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"new_attr_value\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"old_attr_value\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"editing_attribute\",\"type\":\"varchar\",\"conditions\":\"true\"},{\"name\":\"date\",\"type\":\"datetime\",\"conditions\":\"true\"},{\"name\":\"person_id\",\"type\":\"number\",\"conditions\":\"true\"}]",
            "Permissions": "{\"insert\":\"true\",\"update\":\"true\",\"new_column\":\"true\"}"
        },
        {
            "Name": "land_registry_ownership",
            "Columns": "[{\"name\":\"dep3_approved\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"owner_id\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"date_creat\",\"type\":\"datetime\",\"conditions\":\"true\"},{\"name\":\"date_signing\",\"type\":\"datetime\",\"conditions\":\"true\"},{\"name\":\"owner_new_id\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"dep2_approved\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"step\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"price\",\"type\":\"money\",\"conditions\":\"true\"},{\"name\":\"owner_type\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"lend_object_id\",\"type\":\"number\",\"conditions\":\"true\"}]",
            "Permissions": "{\"insert\":\"true\",\"update\":\"true\",\"new_column\":\"true\"}"
        }
    ]
}