{
    "pages": [
		{
            "Name": "test_contracts",
            "Conditions": "true",
            "Menu": "default_menu",
            "Value": "Div(container){\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №1 Simple form with String and Integer params. Expected: info \"inputName = inputValue\"\r\n        }\r\n        Div(panel-body){\r\n            Form(){\r\n                Div(input-group){\r\n                    Label(For: Name, Body: \"Enter the name:\")\r\n                    Input(Type: text, Name: Name, Placeholder: Price)\r\n                }\r\n                Div(input-group){\r\n                    Label(For: Value, Body: \"Enter the value:\")\r\n                    Input(Type: text, Name: Value, Placeholder: 100)\r\n                }\r\n                Div(input-group text-center){\r\n                    Input(Type: hidden, Name: TestNum, Value: 1)\r\n                    Button(Body: Send, Contract: test_Contract, Class: btn btn-primary)    \r\n                }\r\n            }\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №2 Form with 1 String, 1 Integer and 20 hidden String(len = 200) params. Expected: info \"All 20 string fields with >=200 symbol length. inputName = inputValue\"\r\n        }\r\n        Div(panel-body){\r\n            Form(){\r\n                Div(input-group){\r\n                    Label(For: Name, Body: \"Enter the name:\")\r\n                    Input(Type: text, Name: Name, Placeholder: Name)\r\n                }\r\n                Div(input-group){\r\n                    Label(For: value, Body: \"Enter the value:\")\r\n                    Input(Type: text, Name: Value, Placeholder: 50)\r\n                }\r\n                Div(input-group){\r\n                    Input(Type: hidden, Name: TestNum, Value: 2)\r\n                    Input(Type: hidden, Name: Field1, Value: Field1BigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigValue) \r\n                    Input(Type: hidden, Name: Field2, Value: Field2BigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigValue) \r\n                    Input(Type: hidden, Name: Field3, Value: Field3BigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigValue) \r\n                    Input(Type: hidden, Name: Field4, Value: Field4BigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigValue) \r\n                    Input(Type: hidden, Name: Field5, Value: Field5BigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigValue) \r\n                    Input(Type: hidden, Name: Field6, Value: Field6BigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigValue) \r\n                    Input(Type: hidden, Name: Field7, Value: Field7BigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigValue) \r\n                    Input(Type: hidden, Name: Field8, Value: Field8BigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigValue) \r\n                    Input(Type: hidden, Name: Field9, Value: Field9BigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigValue) \r\n                    Input(Type: hidden, Name: Field10, Value: Field10BigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigValue) \r\n                    Input(Type: hidden, Name: Field11, Value: Field11BigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigValue) \r\n                    Input(Type: hidden, Name: Field12, Value: Field12BigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigValue) \r\n                    Input(Type: hidden, Name: Field13, Value: Field13BigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigValue) \r\n                    Input(Type: hidden, Name: Field14, Value: Field14BigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigValue) \r\n                    Input(Type: hidden, Name: Field15, Value: Field15BigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigValue) \r\n                    Input(Type: hidden, Name: Field16, Value: Field16BigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigValue) \r\n                    Input(Type: hidden, Name: Field17, Value: Field17BigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigValue) \r\n                    Input(Type: hidden, Name: Field18, Value: Field18BigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigValue) \r\n                    Input(Type: hidden, Name: Field19, Value: Field19BigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigValue) \r\n                    Input(Type: hidden, Name: Field20, Value: Field20BigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigBigValue) \r\n                    Button(Body: Send, Contract: test_Contract, Class: btn btn-primary)    \r\n                }\r\n            }\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №3 Simple button with 2 string params without form Expected:info \"CustomName = 100\"\r\n        }\r\n        Div(panel-body){\r\n            Form(){\r\n                Div(input-group){\r\n                    Input(Type: hidden, Name: TestNum, Value: 3)\r\n                    Button(Body: Send, Contract: test_Contract, Class: btn btn-primary, Params: \"Name=CustomName,Value=100\")    \r\n                }\r\n            }\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №4 Push variables into contract. Expected:info \"VarName = inputValue\"\r\n        }\r\n        Div(panel-body){\r\n            Form(){\r\n                SetVar(\"name\", \"VarName\").(\"value\", \"12345\")\r\n                Div(input-group){\r\n                    Input(Type: text, Name: Value, Placeholder: \"123\", Value: \"\")\r\n                }\r\n                Div(input-group){\r\n                    Input(Type: hidden, Name: TestNum, Value: 4)\r\n                    Button(Body: Send, Contract: test_Contract, Class: btn btn-primary, Params: \"Name=#name#\")    \r\n                }\r\n            }\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №5 10 CompositeContract with 1 button\r\n        }\r\n        Div(panel-body){\r\n            Form(){\r\n                Div(input-group){\r\n                    Button(Body: Send, Class: btn btn-primary, Page: test_contracts).CompositeContract(test_Contract, [\r\n                        {\"Name\":\"Composite1\",\"Value\":\"1\",\"TestNum\":\"5\"},\r\n                        {\"Name\":\"Composite1\",\"Value\":\"1\",\"TestNum\":\"5\"},\r\n                        {\"Name\":\"Composite1\",\"Value\":\"1\",\"TestNum\":\"5\"},\r\n                        {\"Name\":\"Composite1\",\"Value\":\"1\",\"TestNum\":\"5\"},\r\n                        {\"Name\":\"Composite1\",\"Value\":\"1\",\"TestNum\":\"5\"}\r\n                    ])\r\n                }\r\n            }\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №6 Form with all type of fields\r\n        }\r\n        Div(panel-body){\r\n            Form(){\r\n                Div(input-group){\r\n                    Label(For: Value, Body: \"Image input:\")\r\n                    ImageInput(Image, 50)\r\n                }\r\n                Div(input-group){\r\n                    Label(For: Value, Body: \"RadioGroup:\")\r\n                    Data(Source: src, Columns: \"name,value\", Data: \r\n                        yes,1\r\n                        no,2    \r\n                    )\r\n                    RadioGroup(Source: src, Name: Radio, NameColumn: name, ValueColumn: value, Value: 1)\r\n                }\r\n                Div(input-group){\r\n                    Label(For: Value, Body: \"Select:\")\r\n                    Data(Source: src, Columns: \"name,value\", Data: \r\n                        First item,1\r\n                        Second item,2\r\n                        Third item,3    \r\n                    )\r\n                    Select(Source: src, Name: Select, NameColumn: name, ValueColumn: value, Value: 1)\r\n                }\r\n                Div(input-group){\r\n                    Label(For: Value, Body: \"InputMap:\")\r\n                    InputMap(Name: InputMap, Type: polygon, MapType: hybrid, Value: `{\"zoom\":8, \"center\":{\"lat\":55.749942860682545,\"lng\":37.6207172870636}}`)\r\n                }\r\n                Div(input-group){\r\n                    Input(Type: hidden, Name: TestNum, Value: 6)\r\n                    Button(Body: Send, Contract: test_Contract, Class: btn btn-primary)    \r\n                }\r\n            }\r\n        }\r\n    }\r\n}"
        },
        {
            "Name": "test_db",
            "Conditions": "true",
            "Menu": "default_menu",
            "Value": "Div(container){\r\n    SetVar(\"table\", \"test_db_table\")\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №1 Simple DBFind\r\n        }\r\n        Div(panel-body){\r\n            DBFind(#table#, src1)\r\n            Table(Source: src1, Columns: \"Name=name,Name1=value\")\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №2 Simple DBFind with Columns\r\n        }\r\n        Div(panel-body){\r\n            DBFind(#table#, src2).Columns(\"name, value->name1\")\r\n            Table(Source: src2, Columns: \"Name=name,Name1=value.name1\")\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №3 DBFind with Where\r\n        }\r\n        Div(panel-body){\r\n            DBFind(#table#, src3).Columns(\"name, value->name1\").Where(value->name1 = 'value1')\r\n            Table(Source: src3, Columns: \"Name=name,Name1=value.name1\")\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №4 DBFind with WhereId\r\n        }\r\n        Div(panel-body){\r\n            DBFind(#table#, src4).Columns(\"name, value->name1\").WhereId(0)\r\n            Table(Source: src4, Columns: \"Name=name,Name1=value.name1\")\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №5 DBFind with simple Order\r\n        }\r\n        Div(panel-body){\r\n            DBFind(#table#, src5).Order(\"name desc\")\r\n            Table(Source: src5, Columns: \"Name=name,Value=value\")\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №6 DBFind with Order by json field\r\n        }\r\n        Div(panel-body){\r\n            DBFind(#table#, src6).Order(\"value->name1 desc\")\r\n            Table(Source: src6, Columns: \"Name=name,Value=value\")\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №7 DBFind with limit and offset\r\n        }\r\n        Div(panel-body){\r\n            DBFind(#table#, src7).Limit(5).Offset(3)\r\n            Table(Source: src7, Columns: \"Name=name,Value=value\")\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №8 DBFind with count\r\n        }\r\n        Div(panel-body){\r\n            DBFind(#table#, src8).Count(count)\r\n            If( #count# > 0 ){\r\n                Div(text-success){ Count is #count# }\r\n            }.Else{\r\n                Div(text-danger){ Count is #count# }\r\n            }\r\n            Table(Source: src8, Columns: \"Name=name,Value=value\")\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №9 DBFind with current ecosystem #ecosystem_id#\r\n        }\r\n        Div(panel-body){\r\n            DBFind(#table#, src9).Ecosystem( #ecosystem_id# )\r\n            Table(Source: src9, Columns: \"Name=name,Value=value\")\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №10 DBFind with incorrect ecosystem id -1\r\n        }\r\n        Div(panel-body){\r\n            DBFind(#table#, src10).Ecosystem( -1 )\r\n            Table(Source: src10, Columns: \"Name=name,Value=value\")\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №11 DBFind with custom fields\r\n        }\r\n        Div(panel-body){\r\n            DBFind(#table#, src11).Custom(custom_name){\r\n                Strong(Class: text-success, Body: Custom #name#)\r\n            }\r\n            Table(Source: src11, Columns: \"Name=custom_name,Value=value\")\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №12 DBFind with custom fields and replace value in other fields\r\n        }\r\n        Div(panel-body){\r\n            DBFind(#table#, src12).Custom(custom_name){\r\n                Strong(Class: text-success, Body: Custom #name#)\r\n                SetVar(\"value\", \"New Value\")\r\n            }\r\n            Table(Source: src12, Columns: \"Name=custom_name,Value=value\")\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №13 DBFind with use global vars in custom\r\n        }\r\n        Div(panel-body){\r\n            SetVar(global_var, \"Global Var\")\r\n            DBFind(#table#, src13).Custom(custom_name){\r\n                Strong(Class: text-success, Body: Custom #name# with #global_var#)\r\n            }\r\n            Table(Source: src13, Columns: \"Name=custom_name,Value=value\")\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №14 DBFind with prefixed vars\r\n        }\r\n        Div(panel-body){\r\n            DBFind(#table#, src14).Vars(prefix)\r\n            Prefixed \"name\" value is #prefix_name#. Prefixed \"value\" value is #prefix_value#\r\n            Table(Source: src14, Columns: \"Name=name,Value=value\")\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №15 DBFind with prefixed vars and custom field\r\n        }\r\n        Div(panel-body){\r\n            DBFind(#table#, src15).Vars(prefix).Custom(custom_name){\r\n                Strong(Class: text-success, Body: Custom #name#)\r\n            }\r\n            Prefixed \"name\" value is #prefix_name#. Prefixed \"value\" value is #prefix_value#. Prefixed custom column \"custom_name\" is #prefix_custom_name#\r\n            Table(Source: src15, Columns: \"Name=custom_name,Value=value\")\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №16 DBFind with prefixed vars json vars\r\n        }\r\n        Div(panel-body){\r\n            DBFind(#table#, src16).Vars(prefix).Columns(\"name,value->name1\")\r\n            Prefixed \"name\" value is #prefix_name#. Prefixed \"value.name1\" value is #prefix_value_name1#\r\n            Table(Source: src16, Columns: \"Name=name,Value=value.name1\")\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading text-center text-success){\r\n            Span(Body: Try to inject some sql with DBFind).Style(font-size:20px;font-weight:bold;)\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №17 DBFind with sql in columns, select from other table(get name of current user)\r\n        }\r\n        Div(panel-body){\r\n            DBFind(#table#, src17).Columns(name, value, (select member_name from \"1_members\" where id = '#key_id#') as name).Limit(1)\r\n            Table(Source: src17, Columns: \"Name=name,Value=value\")\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №18 DBFind try to execute second query(need pq error)\r\n        }\r\n        Div(panel-body){\r\n            DBFind(#table#, src18).Columns(name, value FROM \"1_parameters\" ; UPDATE \"1_parameters\" set name = name + 'n' -- )\r\n            Table(Source: src18, Columns: \"Name=name,Value=value\")\r\n        }\r\n    }\r\n}"
        },
        {
            "Name": "test_calc",
            "Conditions": "true",
            "Menu": "default_menu",
            "Value": "Div(container){\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            SetVar(\"num1\", 9223372036854775807).(\"num2\", 9223372036854775807).(\"num3\", Calculate(#num1#+#num2#, Type:money)).(\"num4\", 7)\r\n            Case №0.1 BIG expression #num1#*#num2#*#num3#/#num4#*5\r\n        }\r\n        Div(panel-body){\r\n            Result = Calculate(Exp: \"#num1#*#num2#*#num3#/#num4#*5\", Type: money, Prec: 1000)\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            SetVar(\"num1\", 0.00000000000000000001).(\"num2\", 0.00000000000000001).(\"num3\", Calculate(#num1#+#num2#, Type:money)).(\"num4\", 0.0000000000000000007)\r\n            Case №0.2 miniBIG expression #num1#*#num2#*#num3#/#num4#*5\r\n        }\r\n        Div(panel-body){\r\n            Result = Calculate(Exp: \"#num1#*#num2#*#num3#/#num4#*5\", Type: money, Prec: 1000)\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №1 Division by zero\r\n        }\r\n        Div(panel-body){\r\n            Result = Calculate((1+1)/(1-1))\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №2 Simple expression 1*0.00000000001/0.00000000001 = 1\r\n        }\r\n        Div(panel-body){\r\n            Result = Calculate(1*0.00000000001/0.00000000001)\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №2 Expression in expression Calculate (2*Calculate (2*2)*2) = 16\r\n        }\r\n        Div(panel-body){\r\n            Result = Calculate(2*Calculate(2*2)*2)\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №3 Wrong expression 2*/2\r\n        }\r\n        Div(panel-body){\r\n            Result = Calculate(2*/2)\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №4 Numbers in string \"2\"*2 = 4\r\n        }\r\n        Div(panel-body){\r\n            Result = Calculate(\"2\"*2)\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №5 Simple DateTime\r\n        }\r\n        Div(panel-body){\r\n            Result = DateTime(2018-04-01T10:59:59)\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №6 DateTime with format YYYY-MM-DD HH:MI:SS short year YY\r\n        }\r\n        Div(panel-body){\r\n            Result = DateTime(2018-04-01T10:59:59, \"YYYY-MM-DD HH:MI:SS short year YY\")\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №6 DateTime 0001 year\r\n        }\r\n        Div(panel-body){\r\n            Result = DateTime(0001-04-01T10:59:59, \"YYYY-MM-DD HH:MI:SS short year YY\")\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №7 DateTime 9999 year\r\n        }\r\n        Div(panel-body){\r\n            Result = DateTime(9999-04-01T10:59:59, \"YYYY-MM-DD HH:MI:SS short year YY\")\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №6 DateTime 13 mouth\r\n        }\r\n        Div(panel-body){\r\n            Result = DateTime(2018-13-01T10:59:59, \"YYYY-MM-DD HH:MI:SS short year YY\")\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №7 DateTime bad input datetime format 18-04-01T10:59:59\r\n        }\r\n        Div(panel-body){\r\n            Result = DateTime(18-04-01T10:59:59, \"YYYY-MM-DD HH:MI:SS short year YY\")\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №8 DateTime 30 feb 2018\r\n        }\r\n        Div(panel-body){\r\n            Result = DateTime(2018-02-30T10:59:59, \"YYYY-MM-DD HH:MI:SS short year YY\")\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №9 Now\r\n        }\r\n        Div(panel-body){\r\n            Result = Now(\"YYYY-MM-DD HH:MI:SS short year YY\")\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №10 Now with interval +365 days + 24 hour + 60 minutes - 1 month\r\n        }\r\n        Div(panel-body){\r\n            Result = Now(\"YYYY-MM-DD HH:MI:SS short year YY\", +365 days + 24 hour + 60 minutes - 1 month)\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №11 Now with bad interval +1 man\r\n        }\r\n        Div(panel-body){\r\n            Result = Now(\"YYYY-MM-DD HH:MI:SS short year YY\", +1 man)\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №12 Now with BIG interval +10001 year\r\n        }\r\n        Div(panel-body){\r\n            Result = Now(\"YYYY-MM-DD HH:MI:SS short year YY\", +10001 year)\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №13 cmptime tests\r\n        }\r\n        Div(panel-body){\r\n            SetVar(\"date1\", Now(datetime)).(\"date2\", DateTime(2018-02-01T10:59:59))\r\n            If(CmpTime(GetVar(\"date1\"), GetVar(\"date2\")) == 1){\r\n                Div(Class: text-success, Body: GetVar(\"date1\") > GetVar(\"date2\")\r\n            }.Else{\r\n                Div(Class: text-danger, Body: GetVar(\"date1\") <= GetVar(\"date2\")\r\n            }\r\n\r\n            SetVar(\"date1\", Now(datetime)).(\"date2\", Now(datetime))\r\n            If(CmpTime(GetVar(\"date1\"), GetVar(\"date2\")) == 0){\r\n                Div(Class: text-success, Body: GetVar(\"date1\") = GetVar(\"date2\")\r\n            }.Else{\r\n                Div(Class: text-danger, Body: GetVar(\"date1\") <> GetVar(\"date2\")\r\n            }\r\n\r\n            SetVar(\"date1\", Now(datetime)).(\"date2\", DateTime(2018-02-30T10:59:59))\r\n            If(CmpTime(GetVar(\"date1\"), GetVar(\"date2\")) < -1){\r\n                Div(Class: text-success, Body: GetVar(\"date1\") can't cmp with bad format GetVar(\"date2\"). Result is CmpTime(GetVar(\"date1\"), GetVar(\"date2\")))\r\n            }.Else{\r\n                Div(Class: text-danger, Body: GetVar(\"date1\") <=> GetVar(\"date2\"))\r\n            }\r\n\r\n            SetVar(\"date1\", DateTime(9999-02-01T10:59:59)).(\"date2\", Now(datetime, + 10001 year))\r\n            If(CmpTime(GetVar(\"date1\"), GetVar(\"date2\")) = -1){\r\n                Div(Class: text-success, Body: GetVar(\"date1\") < GetVar(\"date2\")\r\n            }.Else{\r\n                Div(Class: text-danger, Body: GetVar(\"date1\") <=> GetVar(\"date2\")\r\n            }\r\n            \r\n        }\r\n    }\r\n}"
        },
        {
            "Name": "test_lang",
            "Conditions": "true",
            "Menu": "default_menu",
            "Value": "Div(container){\r\n    $test_lang$ LangRes(\"test_lang\", \"EV\") LangRes(\"test_lang\", \"ev\") LangRes(\"test_lang\", \"ru\")\r\n    $test_lang_2$ LangRes(\"test_lang_2\", \"ru\") LangRes(\"test_lang_2\", \"En\") LangRes(\"test_lang_2\", \"eN\")\r\n    SetVar(\"test_lang\", $test_lang$)\r\n    GetVar(test_lang)\r\n    LangRes(\"FakeLangName\")\r\n    $FakeLangName$\r\n    SetVar(\"res\", \"test_lang\")\r\n    SetVar(\"lang\", #test_lang#)\r\n    LangRes(#res#, #lang#)\r\n}"
        },
        {
            "Name": "test_blocks",
            "Conditions": "true",
            "Menu": "default_menu",
            "Value": "Div(container){\r\n    SetVar(\"blockNum\", 1)\r\n    Include(test_block_1)\r\n    Div(panel){\r\n        Div(panel-body){\r\n            Next block is block number #blockNum#!\r\n        }\r\n    }\r\n    DBFind(\"members\", membersSrc)\r\n    Include(test_block_2)\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Next block is block number #blockNum#! Pass include block into variable!\r\n        }\r\n        Div(panel-body){\r\n            SetVar(\"block3\", Include(test_block_3))\r\n            If(GetVar(block3) == \"Block in variable!\"){\r\n                Span(Class: text-success, Body: Success!)\r\n            }.Else{\r\n                Span(Class: text-danger, Body: Fail!)\r\n            }\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Next block is block number 4! Set parent variable of block content!\r\n        }\r\n        Div(panel-body){\r\n            SetVar(\"block4\", Include(test_block_4))\r\n            If(GetVar(block4) == \"Block in variable!\"){\r\n                Span(Class: text-success, Body: Success!)\r\n            }.Else{\r\n                Span(Class: text-danger, Body: Fail!)\r\n            }\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Next block is block number 5! Recursive block include!\r\n        }\r\n        Div(panel-body){\r\n            SetVar(recursiveBlockNum, 0)\r\n            Include(test_block_5)\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Span(Body: \"Next block is block number 5! Include #blockName#!\")\r\n        }\r\n        Div(panel-body){\r\n            SetVar(blockName, test_block_5)\r\n            SetVar(\"blockContent\", Include(#blockName#))\r\n            If(GetVar(\"blockContent\") == \"\"){\r\n                Span(Class: text-danger, Body: Fail!)\r\n            }.Else{\r\n                Span(Class: text-success, Body: Success!)\r\n            }\r\n        }\r\n    }\r\n}"
        },
        {
            "Name": "test_source",
            "Conditions": "true",
            "Menu": "default_menu",
            "Value": "Div(container){\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №1 Simple source\r\n        }\r\n        Div(panel-body){\r\n            Expected table and forlist with values: Name1 = 1, Name2 = 2, Name3 = 3\r\n        }\r\n    }\r\n    Data(src1,\"name,value\"){\r\n        Name1, 1\r\n        Name2, 2\r\n        Name3, 3\r\n    }\r\n    Table(Source: src1, Columns: \"Name=name,Value=value\")\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Span(\"ForList tag\")\r\n        }\r\n        Div(panel-body){\r\n            ForList(Source: src1){\r\n                Div(Body: #name# = #value#)\r\n            }\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №2 Error with number of fields\r\n        }\r\n        Div(panel-body){\r\n            Expected error: line 2, column 0: wrong number of fields in line And table with values: Name,Value,Cost=1,1,0 and Name,Value,Cost=3,3,4\r\n        }\r\n    }\r\n    Data(src1, \"name,value,cost\"){\r\n        1, 1, 0\r\n        2, 2\r\n        3, 3, 4\r\n    }\r\n    Table(Source: src1, Columns: \"Name=name,Value=value,Cost=cost\")\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №3 Name of columns with variables\r\n        }\r\n        Div(panel-body){\r\n            Expected table with values: Name,Value,Cost=1,1,1 And Name,Value,Cost=2,2,2 And Name,Value,Cost=3,3,3\r\n        }\r\n    }\r\n    Data(src1, \"name,value,cost\"){\r\n        1, 1, 1\r\n        2, 2, 2\r\n        3, 3, 3\r\n    }\r\n    SetVar(nameColumnName, \"Name\").(nameColumnValue, \"Value\").(nameColumnCost, \"Cost\").(columnName, \"name\").(columnValue, \"value\").(columnCost, \"cost\")\r\n    Table(Source: src1, Columns: \"#nameColumnName#=#columnName#,#nameColumnValue#=#columnValue#,#nameColumnCost#=#columnCost#\")\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №4 Source with 50 columns\r\n        }\r\n        Div(panel-body){\r\n            Expected table with values: Col1,Col10,Col25,Col50 = 1,1,1,1 And 2,2,2,2 And 3,3,3,3\r\n        }\r\n    }\r\n    Data(src1, \"Col1,Col2,Col3,Col4,Col5,Col6,Col7,Col8,Col9,Col10,Col11,Col12,Col13,Col14,Col15,Col16,Col17,Col18,Col19,Col20,Col21,Col22,Col23,Col24,Col25,Col26,Col27,Col28,Col29,Col30,Col31,Col32,Col33,Col34,Col35,Col36,Col37,Col38,Col39,Col40,Col41,Col42,Col43,Col44,Col45,Col46,Col47,Col48,Col49,Col50\"){\r\n        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1\r\n        2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2\r\n        3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3\r\n    }\r\n    Table(Source: src1, Columns: \"Col1=Col1,Col10=Col10,Col25=Col25,Col50=Col50\")\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №5 Source with 1000 rows\r\n        }\r\n        Div(panel-body){\r\n            Expected:\r\n\t\t\tDiv(){ 1) Table with values: Name,Value = Name1,Value1 And Name2,Value2 And ... And Name1000,Value1000}\r\n\t\t\tDiv(){ 2) Forlist with values: Name,Value = Name1,Value1 And Name2,Value2 And ... And Name1000,Value1000 }\r\n        }\r\n    }\r\n\r\n\tData(src1, \"Name,Value\"){\r\n\t\tName1,Value1\r\n\t\tName2,Value2\r\n\t\tName3,Value3\r\n\t\tName4,Value4\r\n\t\tName5,Value5\r\n\t\tName6,Value6\r\n\t\tName7,Value7\r\n\t\tName8,Value8\r\n\t\tName9,Value9\r\n\t\tName10,Value10\r\n\t\tName11,Value11\r\n\t\tName12,Value12\r\n\t\tName13,Value13\r\n\t\tName14,Value14\r\n\t\tName15,Value15\r\n\t\tName16,Value16\r\n\t\tName17,Value17\r\n\t\tName18,Value18\r\n\t\tName19,Value19\r\n\t\tName20,Value20\r\n\t\tName21,Value21\r\n\t\tName22,Value22\r\n\t\tName23,Value23\r\n\t\tName24,Value24\r\n\t\tName25,Value25\r\n\t\tName26,Value26\r\n\t\tName27,Value27\r\n\t\tName28,Value28\r\n\t\tName29,Value29\r\n\t\tName30,Value30\r\n\t\tName31,Value31\r\n\t\tName32,Value32\r\n\t\tName33,Value33\r\n\t\tName34,Value34\r\n\t\tName35,Value35\r\n\t\tName36,Value36\r\n\t\tName37,Value37\r\n\t\tName38,Value38\r\n\t\tName39,Value39\r\n\t\tName40,Value40\r\n\t\tName41,Value41\r\n\t\tName42,Value42\r\n\t\tName43,Value43\r\n\t\tName44,Value44\r\n\t\tName45,Value45\r\n\t\tName46,Value46\r\n\t\tName47,Value47\r\n\t\tName48,Value48\r\n\t\tName49,Value49\r\n\t\tName50,Value50\r\n\t\tName51,Value51\r\n\t\tName52,Value52\r\n\t\tName53,Value53\r\n\t\tName54,Value54\r\n\t\tName55,Value55\r\n\t\tName56,Value56\r\n\t\tName57,Value57\r\n\t\tName58,Value58\r\n\t\tName59,Value59\r\n\t\tName60,Value60\r\n\t\tName61,Value61\r\n\t\tName62,Value62\r\n\t\tName63,Value63\r\n\t\tName64,Value64\r\n\t\tName65,Value65\r\n\t\tName66,Value66\r\n\t\tName67,Value67\r\n\t\tName68,Value68\r\n\t\tName69,Value69\r\n\t\tName70,Value70\r\n\t\tName71,Value71\r\n\t\tName72,Value72\r\n\t\tName73,Value73\r\n\t\tName74,Value74\r\n\t\tName75,Value75\r\n\t\tName76,Value76\r\n\t\tName77,Value77\r\n\t\tName78,Value78\r\n\t\tName79,Value79\r\n\t\tName80,Value80\r\n\t\tName81,Value81\r\n\t\tName82,Value82\r\n\t\tName83,Value83\r\n\t\tName84,Value84\r\n\t\tName85,Value85\r\n\t\tName86,Value86\r\n\t\tName87,Value87\r\n\t\tName88,Value88\r\n\t\tName89,Value89\r\n\t\tName90,Value90\r\n\t\tName91,Value91\r\n\t\tName92,Value92\r\n\t\tName93,Value93\r\n\t\tName94,Value94\r\n\t\tName95,Value95\r\n\t\tName96,Value96\r\n\t\tName97,Value97\r\n\t\tName98,Value98\r\n\t\tName99,Value99\r\n\t\tName100,Value100\r\n\t\tName101,Value101\r\n\t\tName102,Value102\r\n\t\tName103,Value103\r\n\t\tName104,Value104\r\n\t\tName105,Value105\r\n\t\tName106,Value106\r\n\t\tName107,Value107\r\n\t\tName108,Value108\r\n\t\tName109,Value109\r\n\t\tName110,Value110\r\n\t\tName111,Value111\r\n\t\tName112,Value112\r\n\t\tName113,Value113\r\n\t\tName114,Value114\r\n\t\tName115,Value115\r\n\t\tName116,Value116\r\n\t\tName117,Value117\r\n\t\tName118,Value118\r\n\t\tName119,Value119\r\n\t\tName120,Value120\r\n\t\tName121,Value121\r\n\t\tName122,Value122\r\n\t\tName123,Value123\r\n\t\tName124,Value124\r\n\t\tName125,Value125\r\n\t\tName126,Value126\r\n\t\tName127,Value127\r\n\t\tName128,Value128\r\n\t\tName129,Value129\r\n\t\tName130,Value130\r\n\t\tName131,Value131\r\n\t\tName132,Value132\r\n\t\tName133,Value133\r\n\t\tName134,Value134\r\n\t\tName135,Value135\r\n\t\tName136,Value136\r\n\t\tName137,Value137\r\n\t\tName138,Value138\r\n\t\tName139,Value139\r\n\t\tName140,Value140\r\n\t\tName141,Value141\r\n\t\tName142,Value142\r\n\t\tName143,Value143\r\n\t\tName144,Value144\r\n\t\tName145,Value145\r\n\t\tName146,Value146\r\n\t\tName147,Value147\r\n\t\tName148,Value148\r\n\t\tName149,Value149\r\n\t\tName150,Value150\r\n\t\tName151,Value151\r\n\t\tName152,Value152\r\n\t\tName153,Value153\r\n\t\tName154,Value154\r\n\t\tName155,Value155\r\n\t\tName156,Value156\r\n\t\tName157,Value157\r\n\t\tName158,Value158\r\n\t\tName159,Value159\r\n\t\tName160,Value160\r\n\t\tName161,Value161\r\n\t\tName162,Value162\r\n\t\tName163,Value163\r\n\t\tName164,Value164\r\n\t\tName165,Value165\r\n\t\tName166,Value166\r\n\t\tName167,Value167\r\n\t\tName168,Value168\r\n\t\tName169,Value169\r\n\t\tName170,Value170\r\n\t\tName171,Value171\r\n\t\tName172,Value172\r\n\t\tName173,Value173\r\n\t\tName174,Value174\r\n\t\tName175,Value175\r\n\t\tName176,Value176\r\n\t\tName177,Value177\r\n\t\tName178,Value178\r\n\t\tName179,Value179\r\n\t\tName180,Value180\r\n\t\tName181,Value181\r\n\t\tName182,Value182\r\n\t\tName183,Value183\r\n\t\tName184,Value184\r\n\t\tName185,Value185\r\n\t\tName186,Value186\r\n\t\tName187,Value187\r\n\t\tName188,Value188\r\n\t\tName189,Value189\r\n\t\tName190,Value190\r\n\t\tName191,Value191\r\n\t\tName192,Value192\r\n\t\tName193,Value193\r\n\t\tName194,Value194\r\n\t\tName195,Value195\r\n\t\tName196,Value196\r\n\t\tName197,Value197\r\n\t\tName198,Value198\r\n\t\tName199,Value199\r\n\t\tName200,Value200\r\n\t\tName201,Value201\r\n\t\tName202,Value202\r\n\t\tName203,Value203\r\n\t\tName204,Value204\r\n\t\tName205,Value205\r\n\t\tName206,Value206\r\n\t\tName207,Value207\r\n\t\tName208,Value208\r\n\t\tName209,Value209\r\n\t\tName210,Value210\r\n\t\tName211,Value211\r\n\t\tName212,Value212\r\n\t\tName213,Value213\r\n\t\tName214,Value214\r\n\t\tName215,Value215\r\n\t\tName216,Value216\r\n\t\tName217,Value217\r\n\t\tName218,Value218\r\n\t\tName219,Value219\r\n\t\tName220,Value220\r\n\t\tName221,Value221\r\n\t\tName222,Value222\r\n\t\tName223,Value223\r\n\t\tName224,Value224\r\n\t\tName225,Value225\r\n\t\tName226,Value226\r\n\t\tName227,Value227\r\n\t\tName228,Value228\r\n\t\tName229,Value229\r\n\t\tName230,Value230\r\n\t\tName231,Value231\r\n\t\tName232,Value232\r\n\t\tName233,Value233\r\n\t\tName234,Value234\r\n\t\tName235,Value235\r\n\t\tName236,Value236\r\n\t\tName237,Value237\r\n\t\tName238,Value238\r\n\t\tName239,Value239\r\n\t\tName240,Value240\r\n\t\tName241,Value241\r\n\t\tName242,Value242\r\n\t\tName243,Value243\r\n\t\tName244,Value244\r\n\t\tName245,Value245\r\n\t\tName246,Value246\r\n\t\tName247,Value247\r\n\t\tName248,Value248\r\n\t\tName249,Value249\r\n\t\tName250,Value250\r\n\t\tName251,Value251\r\n\t\tName252,Value252\r\n\t\tName253,Value253\r\n\t\tName254,Value254\r\n\t\tName255,Value255\r\n\t\tName256,Value256\r\n\t\tName257,Value257\r\n\t\tName258,Value258\r\n\t\tName259,Value259\r\n\t\tName260,Value260\r\n\t\tName261,Value261\r\n\t\tName262,Value262\r\n\t\tName263,Value263\r\n\t\tName264,Value264\r\n\t\tName265,Value265\r\n\t\tName266,Value266\r\n\t\tName267,Value267\r\n\t\tName268,Value268\r\n\t\tName269,Value269\r\n\t\tName270,Value270\r\n\t\tName271,Value271\r\n\t\tName272,Value272\r\n\t\tName273,Value273\r\n\t\tName274,Value274\r\n\t\tName275,Value275\r\n\t\tName276,Value276\r\n\t\tName277,Value277\r\n\t\tName278,Value278\r\n\t\tName279,Value279\r\n\t\tName280,Value280\r\n\t\tName281,Value281\r\n\t\tName282,Value282\r\n\t\tName283,Value283\r\n\t\tName284,Value284\r\n\t\tName285,Value285\r\n\t\tName286,Value286\r\n\t\tName287,Value287\r\n\t\tName288,Value288\r\n\t\tName289,Value289\r\n\t\tName290,Value290\r\n\t\tName291,Value291\r\n\t\tName292,Value292\r\n\t\tName293,Value293\r\n\t\tName294,Value294\r\n\t\tName295,Value295\r\n\t\tName296,Value296\r\n\t\tName297,Value297\r\n\t\tName298,Value298\r\n\t\tName299,Value299\r\n\t\tName300,Value300\r\n\t\tName301,Value301\r\n\t\tName302,Value302\r\n\t\tName303,Value303\r\n\t\tName304,Value304\r\n\t\tName305,Value305\r\n\t\tName306,Value306\r\n\t\tName307,Value307\r\n\t\tName308,Value308\r\n\t\tName309,Value309\r\n\t\tName310,Value310\r\n\t\tName311,Value311\r\n\t\tName312,Value312\r\n\t\tName313,Value313\r\n\t\tName314,Value314\r\n\t\tName315,Value315\r\n\t\tName316,Value316\r\n\t\tName317,Value317\r\n\t\tName318,Value318\r\n\t\tName319,Value319\r\n\t\tName320,Value320\r\n\t\tName321,Value321\r\n\t\tName322,Value322\r\n\t\tName323,Value323\r\n\t\tName324,Value324\r\n\t\tName325,Value325\r\n\t\tName326,Value326\r\n\t\tName327,Value327\r\n\t\tName328,Value328\r\n\t\tName329,Value329\r\n\t\tName330,Value330\r\n\t\tName331,Value331\r\n\t\tName332,Value332\r\n\t\tName333,Value333\r\n\t\tName334,Value334\r\n\t\tName335,Value335\r\n\t\tName336,Value336\r\n\t\tName337,Value337\r\n\t\tName338,Value338\r\n\t\tName339,Value339\r\n\t\tName340,Value340\r\n\t\tName341,Value341\r\n\t\tName342,Value342\r\n\t\tName343,Value343\r\n\t\tName344,Value344\r\n\t\tName345,Value345\r\n\t\tName346,Value346\r\n\t\tName347,Value347\r\n\t\tName348,Value348\r\n\t\tName349,Value349\r\n\t\tName350,Value350\r\n\t\tName351,Value351\r\n\t\tName352,Value352\r\n\t\tName353,Value353\r\n\t\tName354,Value354\r\n\t\tName355,Value355\r\n\t\tName356,Value356\r\n\t\tName357,Value357\r\n\t\tName358,Value358\r\n\t\tName359,Value359\r\n\t\tName360,Value360\r\n\t\tName361,Value361\r\n\t\tName362,Value362\r\n\t\tName363,Value363\r\n\t\tName364,Value364\r\n\t\tName365,Value365\r\n\t\tName366,Value366\r\n\t\tName367,Value367\r\n\t\tName368,Value368\r\n\t\tName369,Value369\r\n\t\tName370,Value370\r\n\t\tName371,Value371\r\n\t\tName372,Value372\r\n\t\tName373,Value373\r\n\t\tName374,Value374\r\n\t\tName375,Value375\r\n\t\tName376,Value376\r\n\t\tName377,Value377\r\n\t\tName378,Value378\r\n\t\tName379,Value379\r\n\t\tName380,Value380\r\n\t\tName381,Value381\r\n\t\tName382,Value382\r\n\t\tName383,Value383\r\n\t\tName384,Value384\r\n\t\tName385,Value385\r\n\t\tName386,Value386\r\n\t\tName387,Value387\r\n\t\tName388,Value388\r\n\t\tName389,Value389\r\n\t\tName390,Value390\r\n\t\tName391,Value391\r\n\t\tName392,Value392\r\n\t\tName393,Value393\r\n\t\tName394,Value394\r\n\t\tName395,Value395\r\n\t\tName396,Value396\r\n\t\tName397,Value397\r\n\t\tName398,Value398\r\n\t\tName399,Value399\r\n\t\tName400,Value400\r\n\t\tName401,Value401\r\n\t\tName402,Value402\r\n\t\tName403,Value403\r\n\t\tName404,Value404\r\n\t\tName405,Value405\r\n\t\tName406,Value406\r\n\t\tName407,Value407\r\n\t\tName408,Value408\r\n\t\tName409,Value409\r\n\t\tName410,Value410\r\n\t\tName411,Value411\r\n\t\tName412,Value412\r\n\t\tName413,Value413\r\n\t\tName414,Value414\r\n\t\tName415,Value415\r\n\t\tName416,Value416\r\n\t\tName417,Value417\r\n\t\tName418,Value418\r\n\t\tName419,Value419\r\n\t\tName420,Value420\r\n\t\tName421,Value421\r\n\t\tName422,Value422\r\n\t\tName423,Value423\r\n\t\tName424,Value424\r\n\t\tName425,Value425\r\n\t\tName426,Value426\r\n\t\tName427,Value427\r\n\t\tName428,Value428\r\n\t\tName429,Value429\r\n\t\tName430,Value430\r\n\t\tName431,Value431\r\n\t\tName432,Value432\r\n\t\tName433,Value433\r\n\t\tName434,Value434\r\n\t\tName435,Value435\r\n\t\tName436,Value436\r\n\t\tName437,Value437\r\n\t\tName438,Value438\r\n\t\tName439,Value439\r\n\t\tName440,Value440\r\n\t\tName441,Value441\r\n\t\tName442,Value442\r\n\t\tName443,Value443\r\n\t\tName444,Value444\r\n\t\tName445,Value445\r\n\t\tName446,Value446\r\n\t\tName447,Value447\r\n\t\tName448,Value448\r\n\t\tName449,Value449\r\n\t\tName450,Value450\r\n\t\tName451,Value451\r\n\t\tName452,Value452\r\n\t\tName453,Value453\r\n\t\tName454,Value454\r\n\t\tName455,Value455\r\n\t\tName456,Value456\r\n\t\tName457,Value457\r\n\t\tName458,Value458\r\n\t\tName459,Value459\r\n\t\tName460,Value460\r\n\t\tName461,Value461\r\n\t\tName462,Value462\r\n\t\tName463,Value463\r\n\t\tName464,Value464\r\n\t\tName465,Value465\r\n\t\tName466,Value466\r\n\t\tName467,Value467\r\n\t\tName468,Value468\r\n\t\tName469,Value469\r\n\t\tName470,Value470\r\n\t\tName471,Value471\r\n\t\tName472,Value472\r\n\t\tName473,Value473\r\n\t\tName474,Value474\r\n\t\tName475,Value475\r\n\t\tName476,Value476\r\n\t\tName477,Value477\r\n\t\tName478,Value478\r\n\t\tName479,Value479\r\n\t\tName480,Value480\r\n\t\tName481,Value481\r\n\t\tName482,Value482\r\n\t\tName483,Value483\r\n\t\tName484,Value484\r\n\t\tName485,Value485\r\n\t\tName486,Value486\r\n\t\tName487,Value487\r\n\t\tName488,Value488\r\n\t\tName489,Value489\r\n\t\tName490,Value490\r\n\t\tName491,Value491\r\n\t\tName492,Value492\r\n\t\tName493,Value493\r\n\t\tName494,Value494\r\n\t\tName495,Value495\r\n\t\tName496,Value496\r\n\t\tName497,Value497\r\n\t\tName498,Value498\r\n\t\tName499,Value499\r\n\t\tName500,Value500\r\n\t\tName501,Value501\r\n\t\tName502,Value502\r\n\t\tName503,Value503\r\n\t\tName504,Value504\r\n\t\tName505,Value505\r\n\t\tName506,Value506\r\n\t\tName507,Value507\r\n\t\tName508,Value508\r\n\t\tName509,Value509\r\n\t\tName510,Value510\r\n\t\tName511,Value511\r\n\t\tName512,Value512\r\n\t\tName513,Value513\r\n\t\tName514,Value514\r\n\t\tName515,Value515\r\n\t\tName516,Value516\r\n\t\tName517,Value517\r\n\t\tName518,Value518\r\n\t\tName519,Value519\r\n\t\tName520,Value520\r\n\t\tName521,Value521\r\n\t\tName522,Value522\r\n\t\tName523,Value523\r\n\t\tName524,Value524\r\n\t\tName525,Value525\r\n\t\tName526,Value526\r\n\t\tName527,Value527\r\n\t\tName528,Value528\r\n\t\tName529,Value529\r\n\t\tName530,Value530\r\n\t\tName531,Value531\r\n\t\tName532,Value532\r\n\t\tName533,Value533\r\n\t\tName534,Value534\r\n\t\tName535,Value535\r\n\t\tName536,Value536\r\n\t\tName537,Value537\r\n\t\tName538,Value538\r\n\t\tName539,Value539\r\n\t\tName540,Value540\r\n\t\tName541,Value541\r\n\t\tName542,Value542\r\n\t\tName543,Value543\r\n\t\tName544,Value544\r\n\t\tName545,Value545\r\n\t\tName546,Value546\r\n\t\tName547,Value547\r\n\t\tName548,Value548\r\n\t\tName549,Value549\r\n\t\tName550,Value550\r\n\t\tName551,Value551\r\n\t\tName552,Value552\r\n\t\tName553,Value553\r\n\t\tName554,Value554\r\n\t\tName555,Value555\r\n\t\tName556,Value556\r\n\t\tName557,Value557\r\n\t\tName558,Value558\r\n\t\tName559,Value559\r\n\t\tName560,Value560\r\n\t\tName561,Value561\r\n\t\tName562,Value562\r\n\t\tName563,Value563\r\n\t\tName564,Value564\r\n\t\tName565,Value565\r\n\t\tName566,Value566\r\n\t\tName567,Value567\r\n\t\tName568,Value568\r\n\t\tName569,Value569\r\n\t\tName570,Value570\r\n\t\tName571,Value571\r\n\t\tName572,Value572\r\n\t\tName573,Value573\r\n\t\tName574,Value574\r\n\t\tName575,Value575\r\n\t\tName576,Value576\r\n\t\tName577,Value577\r\n\t\tName578,Value578\r\n\t\tName579,Value579\r\n\t\tName580,Value580\r\n\t\tName581,Value581\r\n\t\tName582,Value582\r\n\t\tName583,Value583\r\n\t\tName584,Value584\r\n\t\tName585,Value585\r\n\t\tName586,Value586\r\n\t\tName587,Value587\r\n\t\tName588,Value588\r\n\t\tName589,Value589\r\n\t\tName590,Value590\r\n\t\tName591,Value591\r\n\t\tName592,Value592\r\n\t\tName593,Value593\r\n\t\tName594,Value594\r\n\t\tName595,Value595\r\n\t\tName596,Value596\r\n\t\tName597,Value597\r\n\t\tName598,Value598\r\n\t\tName599,Value599\r\n\t\tName600,Value600\r\n\t\tName601,Value601\r\n\t\tName602,Value602\r\n\t\tName603,Value603\r\n\t\tName604,Value604\r\n\t\tName605,Value605\r\n\t\tName606,Value606\r\n\t\tName607,Value607\r\n\t\tName608,Value608\r\n\t\tName609,Value609\r\n\t\tName610,Value610\r\n\t\tName611,Value611\r\n\t\tName612,Value612\r\n\t\tName613,Value613\r\n\t\tName614,Value614\r\n\t\tName615,Value615\r\n\t\tName616,Value616\r\n\t\tName617,Value617\r\n\t\tName618,Value618\r\n\t\tName619,Value619\r\n\t\tName620,Value620\r\n\t\tName621,Value621\r\n\t\tName622,Value622\r\n\t\tName623,Value623\r\n\t\tName624,Value624\r\n\t\tName625,Value625\r\n\t\tName626,Value626\r\n\t\tName627,Value627\r\n\t\tName628,Value628\r\n\t\tName629,Value629\r\n\t\tName630,Value630\r\n\t\tName631,Value631\r\n\t\tName632,Value632\r\n\t\tName633,Value633\r\n\t\tName634,Value634\r\n\t\tName635,Value635\r\n\t\tName636,Value636\r\n\t\tName637,Value637\r\n\t\tName638,Value638\r\n\t\tName639,Value639\r\n\t\tName640,Value640\r\n\t\tName641,Value641\r\n\t\tName642,Value642\r\n\t\tName643,Value643\r\n\t\tName644,Value644\r\n\t\tName645,Value645\r\n\t\tName646,Value646\r\n\t\tName647,Value647\r\n\t\tName648,Value648\r\n\t\tName649,Value649\r\n\t\tName650,Value650\r\n\t\tName651,Value651\r\n\t\tName652,Value652\r\n\t\tName653,Value653\r\n\t\tName654,Value654\r\n\t\tName655,Value655\r\n\t\tName656,Value656\r\n\t\tName657,Value657\r\n\t\tName658,Value658\r\n\t\tName659,Value659\r\n\t\tName660,Value660\r\n\t\tName661,Value661\r\n\t\tName662,Value662\r\n\t\tName663,Value663\r\n\t\tName664,Value664\r\n\t\tName665,Value665\r\n\t\tName666,Value666\r\n\t\tName667,Value667\r\n\t\tName668,Value668\r\n\t\tName669,Value669\r\n\t\tName670,Value670\r\n\t\tName671,Value671\r\n\t\tName672,Value672\r\n\t\tName673,Value673\r\n\t\tName674,Value674\r\n\t\tName675,Value675\r\n\t\tName676,Value676\r\n\t\tName677,Value677\r\n\t\tName678,Value678\r\n\t\tName679,Value679\r\n\t\tName680,Value680\r\n\t\tName681,Value681\r\n\t\tName682,Value682\r\n\t\tName683,Value683\r\n\t\tName684,Value684\r\n\t\tName685,Value685\r\n\t\tName686,Value686\r\n\t\tName687,Value687\r\n\t\tName688,Value688\r\n\t\tName689,Value689\r\n\t\tName690,Value690\r\n\t\tName691,Value691\r\n\t\tName692,Value692\r\n\t\tName693,Value693\r\n\t\tName694,Value694\r\n\t\tName695,Value695\r\n\t\tName696,Value696\r\n\t\tName697,Value697\r\n\t\tName698,Value698\r\n\t\tName699,Value699\r\n\t\tName700,Value700\r\n\t\tName701,Value701\r\n\t\tName702,Value702\r\n\t\tName703,Value703\r\n\t\tName704,Value704\r\n\t\tName705,Value705\r\n\t\tName706,Value706\r\n\t\tName707,Value707\r\n\t\tName708,Value708\r\n\t\tName709,Value709\r\n\t\tName710,Value710\r\n\t\tName711,Value711\r\n\t\tName712,Value712\r\n\t\tName713,Value713\r\n\t\tName714,Value714\r\n\t\tName715,Value715\r\n\t\tName716,Value716\r\n\t\tName717,Value717\r\n\t\tName718,Value718\r\n\t\tName719,Value719\r\n\t\tName720,Value720\r\n\t\tName721,Value721\r\n\t\tName722,Value722\r\n\t\tName723,Value723\r\n\t\tName724,Value724\r\n\t\tName725,Value725\r\n\t\tName726,Value726\r\n\t\tName727,Value727\r\n\t\tName728,Value728\r\n\t\tName729,Value729\r\n\t\tName730,Value730\r\n\t\tName731,Value731\r\n\t\tName732,Value732\r\n\t\tName733,Value733\r\n\t\tName734,Value734\r\n\t\tName735,Value735\r\n\t\tName736,Value736\r\n\t\tName737,Value737\r\n\t\tName738,Value738\r\n\t\tName739,Value739\r\n\t\tName740,Value740\r\n\t\tName741,Value741\r\n\t\tName742,Value742\r\n\t\tName743,Value743\r\n\t\tName744,Value744\r\n\t\tName745,Value745\r\n\t\tName746,Value746\r\n\t\tName747,Value747\r\n\t\tName748,Value748\r\n\t\tName749,Value749\r\n\t\tName750,Value750\r\n\t\tName751,Value751\r\n\t\tName752,Value752\r\n\t\tName753,Value753\r\n\t\tName754,Value754\r\n\t\tName755,Value755\r\n\t\tName756,Value756\r\n\t\tName757,Value757\r\n\t\tName758,Value758\r\n\t\tName759,Value759\r\n\t\tName760,Value760\r\n\t\tName761,Value761\r\n\t\tName762,Value762\r\n\t\tName763,Value763\r\n\t\tName764,Value764\r\n\t\tName765,Value765\r\n\t\tName766,Value766\r\n\t\tName767,Value767\r\n\t\tName768,Value768\r\n\t\tName769,Value769\r\n\t\tName770,Value770\r\n\t\tName771,Value771\r\n\t\tName772,Value772\r\n\t\tName773,Value773\r\n\t\tName774,Value774\r\n\t\tName775,Value775\r\n\t\tName776,Value776\r\n\t\tName777,Value777\r\n\t\tName778,Value778\r\n\t\tName779,Value779\r\n\t\tName780,Value780\r\n\t\tName781,Value781\r\n\t\tName782,Value782\r\n\t\tName783,Value783\r\n\t\tName784,Value784\r\n\t\tName785,Value785\r\n\t\tName786,Value786\r\n\t\tName787,Value787\r\n\t\tName788,Value788\r\n\t\tName789,Value789\r\n\t\tName790,Value790\r\n\t\tName791,Value791\r\n\t\tName792,Value792\r\n\t\tName793,Value793\r\n\t\tName794,Value794\r\n\t\tName795,Value795\r\n\t\tName796,Value796\r\n\t\tName797,Value797\r\n\t\tName798,Value798\r\n\t\tName799,Value799\r\n\t\tName800,Value800\r\n\t\tName801,Value801\r\n\t\tName802,Value802\r\n\t\tName803,Value803\r\n\t\tName804,Value804\r\n\t\tName805,Value805\r\n\t\tName806,Value806\r\n\t\tName807,Value807\r\n\t\tName808,Value808\r\n\t\tName809,Value809\r\n\t\tName810,Value810\r\n\t\tName811,Value811\r\n\t\tName812,Value812\r\n\t\tName813,Value813\r\n\t\tName814,Value814\r\n\t\tName815,Value815\r\n\t\tName816,Value816\r\n\t\tName817,Value817\r\n\t\tName818,Value818\r\n\t\tName819,Value819\r\n\t\tName820,Value820\r\n\t\tName821,Value821\r\n\t\tName822,Value822\r\n\t\tName823,Value823\r\n\t\tName824,Value824\r\n\t\tName825,Value825\r\n\t\tName826,Value826\r\n\t\tName827,Value827\r\n\t\tName828,Value828\r\n\t\tName829,Value829\r\n\t\tName830,Value830\r\n\t\tName831,Value831\r\n\t\tName832,Value832\r\n\t\tName833,Value833\r\n\t\tName834,Value834\r\n\t\tName835,Value835\r\n\t\tName836,Value836\r\n\t\tName837,Value837\r\n\t\tName838,Value838\r\n\t\tName839,Value839\r\n\t\tName840,Value840\r\n\t\tName841,Value841\r\n\t\tName842,Value842\r\n\t\tName843,Value843\r\n\t\tName844,Value844\r\n\t\tName845,Value845\r\n\t\tName846,Value846\r\n\t\tName847,Value847\r\n\t\tName848,Value848\r\n\t\tName849,Value849\r\n\t\tName850,Value850\r\n\t\tName851,Value851\r\n\t\tName852,Value852\r\n\t\tName853,Value853\r\n\t\tName854,Value854\r\n\t\tName855,Value855\r\n\t\tName856,Value856\r\n\t\tName857,Value857\r\n\t\tName858,Value858\r\n\t\tName859,Value859\r\n\t\tName860,Value860\r\n\t\tName861,Value861\r\n\t\tName862,Value862\r\n\t\tName863,Value863\r\n\t\tName864,Value864\r\n\t\tName865,Value865\r\n\t\tName866,Value866\r\n\t\tName867,Value867\r\n\t\tName868,Value868\r\n\t\tName869,Value869\r\n\t\tName870,Value870\r\n\t\tName871,Value871\r\n\t\tName872,Value872\r\n\t\tName873,Value873\r\n\t\tName874,Value874\r\n\t\tName875,Value875\r\n\t\tName876,Value876\r\n\t\tName877,Value877\r\n\t\tName878,Value878\r\n\t\tName879,Value879\r\n\t\tName880,Value880\r\n\t\tName881,Value881\r\n\t\tName882,Value882\r\n\t\tName883,Value883\r\n\t\tName884,Value884\r\n\t\tName885,Value885\r\n\t\tName886,Value886\r\n\t\tName887,Value887\r\n\t\tName888,Value888\r\n\t\tName889,Value889\r\n\t\tName890,Value890\r\n\t\tName891,Value891\r\n\t\tName892,Value892\r\n\t\tName893,Value893\r\n\t\tName894,Value894\r\n\t\tName895,Value895\r\n\t\tName896,Value896\r\n\t\tName897,Value897\r\n\t\tName898,Value898\r\n\t\tName899,Value899\r\n\t\tName900,Value900\r\n\t\tName901,Value901\r\n\t\tName902,Value902\r\n\t\tName903,Value903\r\n\t\tName904,Value904\r\n\t\tName905,Value905\r\n\t\tName906,Value906\r\n\t\tName907,Value907\r\n\t\tName908,Value908\r\n\t\tName909,Value909\r\n\t\tName910,Value910\r\n\t\tName911,Value911\r\n\t\tName912,Value912\r\n\t\tName913,Value913\r\n\t\tName914,Value914\r\n\t\tName915,Value915\r\n\t\tName916,Value916\r\n\t\tName917,Value917\r\n\t\tName918,Value918\r\n\t\tName919,Value919\r\n\t\tName920,Value920\r\n\t\tName921,Value921\r\n\t\tName922,Value922\r\n\t\tName923,Value923\r\n\t\tName924,Value924\r\n\t\tName925,Value925\r\n\t\tName926,Value926\r\n\t\tName927,Value927\r\n\t\tName928,Value928\r\n\t\tName929,Value929\r\n\t\tName930,Value930\r\n\t\tName931,Value931\r\n\t\tName932,Value932\r\n\t\tName933,Value933\r\n\t\tName934,Value934\r\n\t\tName935,Value935\r\n\t\tName936,Value936\r\n\t\tName937,Value937\r\n\t\tName938,Value938\r\n\t\tName939,Value939\r\n\t\tName940,Value940\r\n\t\tName941,Value941\r\n\t\tName942,Value942\r\n\t\tName943,Value943\r\n\t\tName944,Value944\r\n\t\tName945,Value945\r\n\t\tName946,Value946\r\n\t\tName947,Value947\r\n\t\tName948,Value948\r\n\t\tName949,Value949\r\n\t\tName950,Value950\r\n\t\tName951,Value951\r\n\t\tName952,Value952\r\n\t\tName953,Value953\r\n\t\tName954,Value954\r\n\t\tName955,Value955\r\n\t\tName956,Value956\r\n\t\tName957,Value957\r\n\t\tName958,Value958\r\n\t\tName959,Value959\r\n\t\tName960,Value960\r\n\t\tName961,Value961\r\n\t\tName962,Value962\r\n\t\tName963,Value963\r\n\t\tName964,Value964\r\n\t\tName965,Value965\r\n\t\tName966,Value966\r\n\t\tName967,Value967\r\n\t\tName968,Value968\r\n\t\tName969,Value969\r\n\t\tName970,Value970\r\n\t\tName971,Value971\r\n\t\tName972,Value972\r\n\t\tName973,Value973\r\n\t\tName974,Value974\r\n\t\tName975,Value975\r\n\t\tName976,Value976\r\n\t\tName977,Value977\r\n\t\tName978,Value978\r\n\t\tName979,Value979\r\n\t\tName980,Value980\r\n\t\tName981,Value981\r\n\t\tName982,Value982\r\n\t\tName983,Value983\r\n\t\tName984,Value984\r\n\t\tName985,Value985\r\n\t\tName986,Value986\r\n\t\tName987,Value987\r\n\t\tName988,Value988\r\n\t\tName989,Value989\r\n\t\tName990,Value990\r\n\t\tName991,Value991\r\n\t\tName992,Value992\r\n\t\tName993,Value993\r\n\t\tName994,Value994\r\n\t\tName995,Value995\r\n\t\tName996,Value996\r\n\t\tName997,Value997\r\n\t\tName998,Value998\r\n\t\tName999,Value999\r\n\t\tName1000,Value1000\r\n    }\r\n    Table(Source:src1, Columns: \"Name=Name,Value=Value\")\r\n\tForList(Source:src1){\r\n\t\tDiv(){#Name# = #Value#}\r\n\t}\r\n}"
        },
        {
            "Name": "test_json",
            "Conditions": "true",
            "Menu": "default_menu",
            "Value": "Div(container){\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №1 Simple Json Object\r\n        }\r\n        Div(panel-body){\r\n            Expected:\r\n            Div(){key1 = value1}\r\n            Div(){key2 = value2}\r\n            Div(){key3 = value3}\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Result:\r\n        }\r\n        Div(panel-body){\r\n            JsonToSource(Source: Json1, {\"key1\":\"value1\", \"key2\":\"value2\", \"key3\":\"value3\"})\r\n            ForList(Source: Json1){\r\n                Div(){#key# = #value#}\r\n            }\r\n        }\r\n    }\r\n\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №2 Simple Json List\r\n        }\r\n        Div(panel-body){\r\n            Expected:\r\n            Div(){0 = value1}\r\n            Div(){1 = value2}\r\n            Div(){2 = value3}\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Result:\r\n        }\r\n        Div(panel-body){\r\n            JsonToSource(Source: Json1, [\"value1\", \"value2\", \"value3\"])\r\n            ForList(Source: Json1){\r\n                Div(){#key# = #value#}\r\n            }\r\n        }\r\n    }\r\n\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №3 Simple Json List Of Objects\r\n        }\r\n        Div(panel-body){\r\n            Expected:\r\n            Div(){0 = {\"key1\":\"value1\", \"key2\":\"value2\", \"key3\":\"value3\"}}\r\n            Div(){1 = {\"key1\":\"value1\", \"key2\":\"value2\", \"key3\":\"value3\"}}\r\n            Div(){2 = {\"key1\":\"value1\", \"key2\":\"value2\", \"key3\":\"value3\"}}\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Result:\r\n        }\r\n        Div(panel-body){\r\n            JsonToSource(Source: Json1, [{\"key1\":\"value1\", \"key2\":\"value2\", \"key3\":\"value3\"}, {\"key1\":\"value1\", \"key2\":\"value2\", \"key3\":\"value3\"}, {\"key1\":\"value1\", \"key2\":\"value2\", \"key3\":\"value3\"}])\r\n            ForList(Source: Json1){\r\n                Div(){#key# = #value#}\r\n            }\r\n        }\r\n    }\r\n\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №4 Simple Json Object With List\r\n        }\r\n        Div(panel-body){\r\n            Expected:\r\n            Div(){key1 = [value1.1,value1.2,value1.3]}\r\n            Div(){key2 = [value2.1,value2.2]}\r\n            Div(){key3 = [value3.1,value3.2,value3.3]}\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Result:\r\n        }\r\n        Div(panel-body){\r\n            JsonToSource(Source: Json1, {\"key1\":[\"value1.1\", \"value1.2\", \"value1.3\"], \"key2\":[\"value2.1\", \"value2.2\"], \"key3\":[\"value3.1\", \"value3.2\", \"value3.3\"]})\r\n            ForList(Source: Json1){\r\n                Div(){#key# = #value#}\r\n            }\r\n        }\r\n    }\r\n    \r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №4 Depth Json Object With List\r\n        }\r\n        Div(panel-body){\r\n            Expected:\r\n            Div(){key1 = [value1.1,value1.2,value1.3]}\r\n            Div(){key2 = [value2.1,value2.2]}\r\n            Div(){key3 = [value3.1,value3.2,value3.3]}\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Result:\r\n        }\r\n        Div(panel-body){\r\n            JsonToSource(Source: Json1, {\"key1\":[\"value1.1\", \"value1.2\", \"value1.3\"], \"key2\":[\"value2.1\", \"value2.2\"], \"key3\":[\"value3.1\", \"value3.2\", \"value3.3\"]})\r\n            ForList(Source: Json1){\r\n                JsonToSource(Json11, #value#)\r\n                Div(){\r\n                    #key# = [\r\n                        ForList(Json11){\r\n                            #value#,\r\n                        }\r\n                    ]\r\n                }\r\n            }\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №5 Json Object With Other Object\r\n        }\r\n        Div(panel-body){\r\n            Expected:\r\n            Div(){key1 = {\"key1.1\":\"value1.1\", \"key1.2\":\"value1.2\", \"key1.3\":\"value1.3\"}}\r\n            Div(){key2 = {\"key2.1\":\"value2.1\", \"key2.2\":\"value2.2\", \"key2.3\":\"value2.3\"}}\r\n            Div(){key3 = value3}\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Result:\r\n        }\r\n        Div(panel-body){\r\n            JsonToSource(Source: Json1, {\"key1\":{\"key1.1\":\"value1.1\", \"key1.2\":\"value1.2\", \"key1.3\":\"value1.3\"}, \"key2\":{\"key2.1\":\"value2.1\", \"key2.2\":\"value2.2\", \"key2.3\":\"value2.3\"}, \"key3\":\"value3\"})\r\n            ForList(Source: Json1){\r\n                Div(){#key# = #value#}\r\n            }\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №6 Json Value Replacing\r\n        }\r\n        Div(panel-body){\r\n            Expected:\r\n            Div(){key1 = value4}\r\n            Div(){key2 = value2}\r\n            Div(){key3 = value3}\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Result:\r\n        }\r\n        Div(panel-body){\r\n            JsonToSource(Source: Json1, {\"key1\":\"value1\", \"key2\":\"value2\", \"key3\":\"value3\", \"key1\":\"value4\"})\r\n            ForList(Source: Json1){\r\n                Div(){#key# = #value#}\r\n            }\r\n        }\r\n    }\r\n}"
        },
        {
            "Name": "test_conditions",
            "Conditions": "true",
            "Menu": "default_menu",
            "Value": "Div(Class: container) {\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №0 If Without Condition\r\n        }\r\n        Div(panel-body){\r\n            Expected: success\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Result:\r\n        }\r\n        Div(panel-body){\r\n            If(){\r\n                fail\r\n            }.Else{\r\n                success\r\n            }\r\n        }\r\n    }\r\n\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №1 Simple Condition With Float (1 == 1 && (1.001 == 1 || 0.001 == 0))\r\n        }\r\n        Div(panel-body){\r\n            Expected: success\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Result:\r\n        }\r\n        Div(panel-body){\r\n            If(And(1 == 1, Or(1.001 == 1, 0.001 == 0))){\r\n                fail\r\n            }.Else{\r\n                success\r\n            }\r\n        }\r\n    }\r\n\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №2 Simple Condition (1 == 1 && 0 == 1)\r\n        }\r\n        Div(panel-body){\r\n            Expected: success\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Result:\r\n        }\r\n        Div(panel-body){\r\n            If(And(1 == 1, 0 == 1)){\r\n                fail\r\n            }.Else{\r\n                success\r\n            }\r\n        }\r\n    }\r\n\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №3 Condition With Variables\r\n        }\r\n        Div(panel-body){\r\n            Expected: success\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Result:\r\n        }\r\n        Div(panel-body){\r\n            SetVar(\"Condition1\", 1).(\"Condition2\", 0.3)\r\n            If(And( GetVar(\"Condition2\") == 0.3, And( GetVar(\"Condition1\") == 1, Or( GetVar(\"Condition2\") == 0, GetVar(\"Condition1\") == 0)))){\r\n                Span(fail)\r\n            }.Else{\r\n                Span(success)\r\n            }\r\n        }\r\n    }\r\n\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №4 Previous Condition Without Variables (Hardcoded numbers)\r\n        }\r\n        Div(panel-body){\r\n            Expected: success\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Result:\r\n        }\r\n        Div(panel-body){\r\n            If(And(0.3 == 0.3, And(1 == 1, Or(0.3 == 0, 1 == 0)))){\r\n                Span(fail)\r\n            }.Else{\r\n                Span(success)\r\n            }\r\n        }\r\n    }\r\n\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №5 Simple Condition With Float And Variable\r\n        }\r\n        Div(panel-body){\r\n            Expected: success\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Result:\r\n        }\r\n        Div(panel-body){\r\n            SetVar(\"Condition1\", 1.001)\r\n            If(#Condition1# > 1){\r\n                success\r\n            }.Else{\r\n                fail\r\n            }\r\n        }\r\n    }\r\n\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №6 Condition With HotReplacing Variable (Code(#VarName#))\r\n        }\r\n        Div(panel-body){\r\n            Expected: success\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Result:\r\n        }\r\n        Div(panel-body){\r\n            SetVar(\"Condition3\", 1)\r\n            If(#Condition3# == 2){\r\n                fail2.1\r\n            }.ElseIf(#Condition3# == 1){\r\n                success\r\n                SetVar(\"Condition3\", 2)\r\n            }.ElseIf(#Condition3# == 2){\r\n                fail2.2\r\n            }.Else{\r\n                fail.else\r\n            }\r\n        }\r\n    }   \r\n\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №7 Condition With HotReplacing Variable (Code(GetVar(VarName)))\r\n        }\r\n        Div(panel-body){\r\n            Expected: success\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Result:\r\n        }\r\n        Div(panel-body){\r\n            SetVar(\"Condition4\", 1)\r\n            If(GetVar(Condition4) == 2){\r\n                fail2.1\r\n            }.ElseIf(GetVar(Condition4) == 1){\r\n                success\r\n                SetVar(\"Condition4\", 2)\r\n            }.ElseIf(GetVar(Condition4) == 2){\r\n                fail2.2\r\n            }.Else{\r\n                fail.else\r\n            }\r\n        }\r\n    }  \r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Case №8 Condition 10 < 9\r\n        }\r\n        Div(panel-body){\r\n            Expected: success\r\n        }\r\n    }\r\n    Div(panel){\r\n        Div(panel-heading){\r\n            Result:\r\n        }\r\n        Div(panel-body){\r\n            SetVar(\"Condition5\", 1)\r\n            If(GetVar(\"Condition5\") < -1){\r\n                fail => 1 < -1\r\n            }.Else{\r\n                success\r\n            }\r\n            \r\n        }\r\n    }  \r\n}"
        },
        {
            "Name": "test_vars",
            "Conditions": "true",
            "Menu": "default_menu",
            "Value": "Div(Class: container) {\n    Div(panel){\n        Div(panel-heading){\n            Case №1 Variable In Variable With Hot Replacing\n        }\n        Div(panel-body){\n            Expected:\n            Div(){GetVar = 123}\n            Div(){## = 123}\n        }\n    }\n    Div(panel){\n        Div(panel-heading){\n            Result:\n        }\n        Div(panel-body){\n            SetVar(\"Var1\", \"1\")\n            SetVar(\"Var2\", #Var1#2)\n            SetVar(\"Var3\", GetVar(\"Var2\")3)\n            Div(){GetVar = GetVar(\"Var3\")}\n            Div(){## = #Var3#}\n            SetVar(\"Var1\", 0)\n            SetVar(\"Var2\", 0)\n        }\n    }\n\n    Div(panel){\n        Div(panel-heading){\n            Case №2 Some Tags In Variable\n        }\n        Div(panel-body){\n            Expected:\n            Div(){## = P(This is p tag)Span(This is span tag)This is text without tag}\n            Div(){GetVar = P(This is p tag)Span(This is span tag)This is text without tag}\n        }\n    }\n    Div(panel){\n        Div(panel-heading){\n            Result:\n        }\n        Div(panel-body){\n            SetVar(\"VarTags\", P(This is p tag)Span(This is span tag)This is text without tag)\n            Div(){## = #VarTags#}\n            Div(){GetVar = GetVar(VarTags)}\n        }\n    }\n\n    Div(panel){\n        Div(panel-heading){\n            Case №3 Variable Without Name\n        }\n        Div(panel-body){\n            Expected: ## \n        }\n    }\n    Div(panel){\n        Div(panel-heading){\n            Result:\n        }\n        Div(panel-body){\n            SetVar(\"\", \"This is variable without name\")\n            GetVar(\"\")\n            ##\n        }\n    }\n\n    Div(panel){\n        Div(panel-heading){\n            Case №3 Variable HotReplacing\n        }\n        Div(panel-body){\n            Expected: Value1 Value1 Value2 Value2 Value22 Value222 Value222\n        }\n    }\n    Div(panel){\n        Div(panel-heading){\n            Result:\n        }\n        Div(panel-body){\n            SetVar(\"Name1\", \"Value1\")\n            GetVar(\"Name1\")\n            #Name1#\n            SetVar(\"Name1\", \"Value2\")\n            GetVar(\"Name1\")\n            #Name1#\n            SetVar(\"Name1\", GetVar(\"Name1\")2)\n            GetVar(\"Name1\")\n            SetVar(\"Name1\", #Name1#2)\n            GetVar(\"Name1\")\n            #Name1#\n        }\n    }\n\n    Div(panel){\n        Div(panel-heading){\n            Case №4 Long Variable Title\n        }\n        Div(panel-body){\n            Expected: \n            Div(){## = Some_Mega_Long_Value_Of_The_Variable123#FakeName1#}\n            Div(){GetVar = Some_Mega_Long_Value_Of_The_Variable123#FakeName1#}\n        }\n    }\n    Div(panel){\n        Div(panel-heading){\n            Result:\n        }\n        Div(panel-body){\n            SetVar(\"Some_Mega_Long_Title_Of_The_Variable123##\", \"Some_Mega_Long_Value_Of_The_Variable123#FakeName1#\")\n            Div(){## = #Some_Mega_Long_Title_Of_The_Variable123###}\n            Div(){GetVar = GetVar(\"Some_Mega_Long_Title_Of_The_Variable123##\")}\n        }\n    }\n}"
        }
    ],
    "blocks": [
        {
            "Name": "test_block_5",
            "Conditions": "true",
            "Value": "SetVar(recursiveBlockNum, Calculate(#recursiveBlockNum# + 1))\r\nBlock №5 content №GetVar(\"recursiveBlockNum\")! Include(test_block_5)"
        },
        {
            "Name": "test_block_4",
            "Conditions": "true",
            "Value": "SetVar(\"block4\", \"Variable in the block!\")\r\nBlock in variable!"
        },
        {
            "Name": "test_block_3",
            "Conditions": "true",
            "Value": "Block in variable!"
        },
        {
            "Name": "test_block_2",
            "Conditions": "true",
            "Value": "Div(panel){\r\n    Div(panel-heading){\r\n        Case №2 Simple Block With Source\r\n    }\r\n    Div(panel-body){\r\n        This is block number GetVar(\"blockNum\")!\r\n        SetVar(\"blockNum\", 3)\r\n        Table(membersSrc, \"ID=id,Name=member_name\")\r\n    }\r\n}"
        },
        {
            "Name": "test_block_1",
            "Conditions": "true",
            "Value": "Div(panel){\r\n    Div(panel-heading){\r\n        Case №1 Simple Block With Variable\r\n    }\r\n    Div(panel-body){\r\n        This is block number GetVar(\"blockNum\")!\r\n        SetVar(\"blockNum\", 2)\r\n    }\r\n}"
        }
    ],
    "menus": [
        {
            "Name": "default_menu",
            "Conditions": "ContractAccess(\"@1EditMenu\")",
            "Value": "MenuGroup(Title: \"Tests\", Icon: \"icon-settings\"){\r\n    MenuGroup(Title: \"Group 1\", Icon: \"icon-settings\"){\r\n        MenuItem(\r\n            Page: \"test_vars\",\r\n            Title: \"Variables tests\"\r\n        ),\r\n        MenuItem(\r\n            Page: \"test_conditions\",\r\n            Title: \"Condition tests\"\r\n        ),\r\n        MenuItem(\r\n            Page: \"test_json\",\r\n            Title: \"JSON tests\"\r\n        ), \r\n        MenuItem(\r\n            Page: \"test_source\",\r\n            Title: \"Source tests\"\r\n        ), \r\n        MenuItem(\r\n            Page: \"test_contracts\",\r\n            Title: \"Contracts tests\"\r\n        )\r\n    },\r\n    MenuGroup(Title: \"Group 2\", Icon: \"icon-settings\"){\r\n        MenuItem(\r\n            Page: \"test_blocks\",\r\n            Title: \"Blocks tests\"\r\n        ),\r\n        MenuItem(\r\n            Page: \"test_lang\",\r\n            Title: \"Lang resources tests\"\r\n        ),\r\n        MenuItem(\r\n            Page: \"test_db\",\r\n            Title: \"DBFind tests\"\r\n        ),\r\n        MenuItem(\r\n            Page: \"test_calc\",\r\n            Title: \"Calculate tests\"\r\n        )\r\n    }\r\n}"
        }
    ],
    "parameters": [],
    "languages": [
        {
            "Name": "test_lang_2",
            "Trans": "{\"en\":\"value2\",\"EN\":\"value3\",\"En\":\"value5\"}",
            "Conditions": ""
        },
        {
            "Name": "test_lang",
            "Trans": "{\"AZ\":\"AZ\",\"BY\":\"BY\",\"CX\":\"CX\",\"DW\":\"DW\",\"EV\":\"EV\",\"FU\":\"FU\",\"GT\":\"GT\",\"HS\":\"HS\",\"IR\":\"IR\",\"JQ\":\"JQ\",\"KP\":\"KP\",\"LO\":\"LO\",\"MN\":\"MN\",\"NM\":\"NM\",\"OL\":\"OL\",\"PK\":\"PK\",\"QJ\":\"QJ\",\"RI\":\"RI\",\"SH\":\"SH\",\"TG\":\"TG\",\"UF\":\"UF\",\"VE\":\"VE\",\"WD\":\"WD\",\"XC\":\"XC\",\"YB\":\"YB\"}",
            "Conditions": ""
        }
    ],
    "contracts": [
		{
            "Name": "test_Contract",
            "Value": "contract test_Contract {\n    data {\n        TestNum int\n        Name string \"optional\"\n        Value int \"optional\"\n        Field1 string \"optional\"\n        Field2 string \"optional\"\n        Field3 string \"optional\"\n        Field4 string \"optional\"\n        Field5 string \"optional\"\n        Field6 string \"optional\"\n        Field7 string \"optional\"\n        Field8 string \"optional\"\n        Field9 string \"optional\"\n        Field10 string \"optional\"\n        Field11 string \"optional\"\n        Field12 string \"optional\"\n        Field13 string \"optional\"\n        Field14 string \"optional\"\n        Field15 string \"optional\"\n        Field16 string \"optional\"\n        Field17 string \"optional\"\n        Field18 string \"optional\"\n        Field19 string \"optional\"\n        Field20 string \"optional\"\n        Image bytes \"image optional\"\n        Radio string \"optional\"\n        Select string \"optional\"\n        InputMap string \"optional\"\n        \n    }\n    conditions {\n\n    }\n    action {\n        if $TestNum == 2 {\n            if Size($Field1) < 200 {\n                error \"Field1 is less then 200 symbols length\"\n            }\n            if Size($Field2) < 200 {\n                error \"Field2 is less then 200 symbols length\"\n            }\n            if Size($Field3) < 200 {\n                error \"Field3 is less then 200 symbols length\"\n            }\n            if Size($Field4) < 200 {\n                error \"Field4 is less then 200 symbols length\"\n            }\n            if Size($Field5) < 200 {\n                error \"Field5 is less then 200 symbols length\"\n            }\n            if Size($Field6) < 200 {\n                error \"Field6 is less then 200 symbols length\"\n            }\n            if Size($Field7) < 200 {\n                error \"Field7 is less then 200 symbols length\"\n            }\n            if Size($Field8) < 200 {\n                error \"Field8 is less then 200 symbols length\"\n            }\n            if Size($Field9) < 200 {\n                error \"Field9 is less then 200 symbols length\"\n            }\n            if Size($Field10) < 200 {\n                error \"Field10 is less then 200 symbols length\"\n            }\n            if Size($Field11) < 200 {\n                error \"Field11 is less then 200 symbols length\"\n            }\n            if Size($Field12) < 200 {\n                error \"Field12 is less then 200 symbols length\"\n            }\n            if Size($Field13) < 200 {\n                error \"Field13 is less then 200 symbols length\"\n            }\n            if Size($Field14) < 200 {\n                error \"Field14 is less then 200 symbols length\"\n            }\n            if Size($Field15) < 200 {\n                error \"Field15 is less then 200 symbols length\"\n            }\n            if Size($Field16) < 200 {\n                error \"Field16 is less then 200 symbols length\"\n            }\n            if Size($Field17) < 200 {\n                error \"Field17 is less then 200 symbols length\"\n            }\n            if Size($Field18) < 200 {\n                error \"Field18 is less then 200 symbols length\"\n            }\n            if Size($Field19) < 200 {\n                error \"Field19 is less then 200 symbols length\"\n            }\n            if Size($Field20) < 200 {\n                error \"Field20 is less then 200 symbols length\"\n            }\n            info Sprintf(\"All 20 string fields with >=200 symbol length. %v = %v\", $Name, $Value);\n        }\n        if $TestNum == 5 {\n            \n        }\n        if $TestNum == 6 {\n            \n        }\n    }\n}",
            "Conditions": "true"
        }
	],
    "tables": [
        {
            "Name": "test_db_table",
            "Columns": "[{\"name\":\"name\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"value\",\"type\":\"json\",\"conditions\":\"true\"}]",
            "Permissions": "{\"insert\":\"ContractConditions(\\\"MainCondition\\\")\",\"update\":\"ContractConditions(\\\"MainCondition\\\")\",\"new_column\":\"ContractConditions(\\\"MainCondition\\\")\"}"
        }
    ],
    "data": [
        {
            "Table": "test_db_table",
            "Columns": [
                "value",
                "name"
            ],
            "Data": [
                [
                    "{\"name1\": \"value1\", \"name2\": \"value21\"}",
                    "test7"
                ],
                [
                    "{\"name1\": \"value1\", \"name2\": \"value21\"}",
                    "test6"
                ],
                [
                    "{\"name2\": \"value332\", \"name111\": \"value212\"}",
                    "test5"
                ],
                [
                    "{\"name1\": \"value2\", \"name2\": \"value3\"}",
                    "test4"
                ],
                [
                    "{\"name1\": \"value2\", \"name2\": \"value3\"}",
                    "test2"
                ],
                [
                    "{\"name1\": \"value2\", \"name2\": \"value3\"}",
                    "test2"
                ],
                [
                    "{\"name1\": \"value2\", \"name2\": \"value3\"}",
                    "test3"
                ],
                [
                    "{\"name1\": \"value1\"}",
                    "test"
                ]
            ]
        }
    ]
}