{
    "blocks": [],
    "contracts": [
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract hackaton_RateBug {\n    data {\n        Rate int\n        Id int\n    }\n    \n    conditions {\n        if $Rate < 0 || $Rate > 10 {\n            info \"оценка должна быть от 0 до 5\"\n        }        \n    }\n    action {\n        DBUpdate(\"hackaton_bugs\", $Id, \"rate\", $Rate)\n    }\n}",
            "Name": "hackaton_RateBug"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract hackaton_RateUser {\n    data {\n        Rate int\n        Id int\n    }\n    \n    conditions {\n        if $Rate < 1 || $Rate > 10 {\n            info \"оценка должна быть от 1 до 10\"\n        }\n        if DBFind(\"hackaton\").Where(\"id=? and rate > 5\", $Id).One(\"id\"){\n            info \"оценка уже есть\"\n        }\n        \n    }\n    action {\n        DBUpdate(\"hackaton\", $Id, \"rate\", $Rate)\n    }\n}",
            "Name": "hackaton_RateUser"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract hackaton_StoreBug {\n    data {\n        Name string\n        Author string\n        Src string\n    }\n    \n    conditions {\n        if DBFind(\"hackaton_bugs\").Where(\"name=? and author=?\", $Name, $Author).Row() {\n            info \"Этот баг уже добавлен\"\n        }\n    }\n    action {\n        DBInsert(\"hackaton_bugs\", \"name,author,src\", $Name, $Author, $Src)\n    }\n}",
            "Name": "hackaton_StoreBug"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract hackaton_StoreDescription {\n    data {\n        Type string\n        Description string\n        Id string\n    }\n    \n    conditions {\n        if Int($Id) > 0{\n            // ok\n        }else{\n            warning Sprintf(\"wrong id (%v)\", $Id)\n        }\n    }\n    action {\n        if $Type == \"bug\"{\n            DBUpdate(\"hackaton_bugs\", Int($Id), \"description\", $Description)\n        }\n    }\n}",
            "Name": "hackaton_StoreDescription"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract hackaton_StoreUser {\n    data {\n        Name string\n        Email string\n        Work string\n    }\n    \n    conditions {\n        $Email = Replace($Email, \" \", \"\")\n        if DBFind(\"hackaton\").Where(\"email=?\", $Email).Row() {\n            info \"Пользователь с такой почтой уже добавлен\"\n        }\n        \n    }\n    action {\n        DBInsert(\"hackaton\", \"name,email,work\", $Name, $Email, $Work)\n    }\n}",
            "Name": "hackaton_StoreUser"
        }
    ],
    "data": [],
    "languages": [],
    "menus": [
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "MenuItem(Title: hackaton, Page: hackaton, Icon:fa fa-list-ul)\nMenuItem(Title: hackaton bugs, Page: hackaton_bugs, Icon:fa fa-list-ul)",
            "Name": "default_menu"
        }
    ],
    "pages": [
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "DBFind(Name:hackaton, Source: src).Order(\"id desc\").Custom(_actions){\n    If(#rate#>0){}.Else{\n        Form(){\n            Div(col-sm-6){\n                Input(Name: Rate, Type: number, Value: GetVar(rate))\n                Input(Name: Id, Type: hidden, Value: #id#)\n            }\n            Div(col-sm-6){\n                Button(Body: rate, Contract: hackaton_RateUser, Class: btn btn-primary, Page: hackaton)\n            }\n        }\n    }\n}.Custom(_source){\n    LinkPage(Class: icon-notebook, Page: hackaton_source, PageParams: \"Id=#id#\")\n}.Custom(_rate){\n    If(#rate#>4){\n        Div(text-success){#rate#}\n    }.Else{\n        Div(text-danger){#rate#}\n    }\n}\nDiv(content-wrapper){\n    Div(row){\n        Div(col-sm-8 col-sm-offset-2){\n            Form(panel panel-primary){\n                Div(panel-body){\n                    Div(row){\n                        Div(col-sm-4){Name*}\n                        Div(col-sm-8){Input(Name: Name)}\n                    }\n                    Div(row){\n                        Div(col-sm-4){Email*}\n                        Div(col-sm-8){Input(Name: Email)}\n                    }\n                    Div(row){\n                        Div(col-sm-4){Source*}\n                        Div(col-sm-8){Input(Name: Work, Type: textarea)}\n                    }\n                }\n                Div(panel-footer text-right){\n                    Button(Body: store user, Contract: hackaton_StoreUser, Page: hackaton)\n                }\n            }\n        }\n    }\n    \n    Div(row){\n        Div(col-sm-12 col-lg-10 col-lg-offset-1){\n            Table(src, \"id,name,email,source=_source,rate=_rate,=_actions\")\n        }\n    }\n}",
            "Name": "hackaton",
            "Menu": "default_menu"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "Div(content-wrapper){\n    Div(breadcrumb){\n        Div(){\n            LinkPage(Body:hackaton bugs, Page: hackaton_bugs)\n            Span(/).Style(margin-right: 10px;margin-left: 10px;).(source, text-muted)\n        }\n    }\n    If(#Id#>0){\n        DBFind(Name:hackaton_bugs, Source: src).Columns(\"src,description,rate\").Where(\"id=#Id#\").Vars(bug)\n        \n        Div(row){\n            Div(col-sm-10 col-sm-offset-1){\n                Div(row){\n                    Form(form-group){\n                        Div(col-sm-10){\n                            Input(Name: Rate, Type: number, Value: GetVar(rate))\n                            \n                        }\n                        Div(col-sm-2){\n                            Button(Body: rate, Contract: hackaton_RateBug, Class: btn btn-primary btn-block, Page: hackaton_bug_source,Params: \"Id=#Id#\", PageParams: \"Id=#Id#\")\n                        }\n                    }\n                    Form(form-group){\n                        Div(col-sm-10){\n                            Input(Name:Description, Type:textarea)\n                        }\n                        Div(col-sm-2){\n                            Input(Name:Type, Type: hidden, Value: bug)\n                            Button(Body: description, Contract:hackaton_StoreDescription, Page: hackaton_bug_source, Class:btn btn-primary btn-block, Params: \"Id=#Id#\", PageParams: \"Id=#Id#\")\n                            \n                        }\n                    }\n                }\n            }\n            Div(col-sm-10 col-sm-offset-1){\n                Rate: #bug_rate#\n            }\n            Div(col-sm-10 col-sm-offset-1){\n                Div(panel panel-primary){\n                    Div(panel-heading){Description}\n                    Div(panel-body){\nCode(\n    #bug_description#\n)\n                    }\n                }\n                \n            }\n            Div(col-sm-10 col-sm-offset-1){\n                Div(panel panel-primary){\n                    Div(panel-heading){Test Case}\n                    Div(panel-body){\nCode(\n    #bug_src#\n)\n                    }\n                }\n            }\n        }\n    }.Else{\n        id не передано на страницу\n    }\n}",
            "Name": "hackaton_bug_source",
            "Menu": "default_menu"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "DBFind(Name:hackaton_bugs, Source: src).Order(\"id desc\").Custom(_source){\n    LinkPage(Class: icon-notebook, Page: hackaton_bug_source, PageParams: \"Id=#id#\")\n}.Custom(_rate){\n    If(#rate#<2){\n        Div(text-success){#rate#}\n    }.Else{\n        Div(text-danger){#rate#}\n    }\n}\nDiv(content-wrapper){\n    Div(row){\n        Div(col-sm-8 col-sm-offset-2){\n            Form(panel panel-primary){\n                Div(panel-body){\n                    Div(row){\n                        Div(col-sm-4){Name*}\n                        Div(col-sm-8){Input(Name: Name)}\n                    }\n                    Div(row){\n                        Div(col-sm-4){Author*}\n                        Div(col-sm-8){Input(Name: Author)}\n                    }\n                    Div(row){\n                        Div(col-sm-4){Source*}\n                        Div(col-sm-8){Input(Name: Src, Type: textarea)}\n                    }\n                }\n                Div(panel-footer text-right){\n                    Button(Body: store bug, Contract: hackaton_StoreBug, Page: hackaton_bugs, Class: btn btn-primary)\n                }\n            }\n        }\n    }\n    \n    Div(row){\n        Div(col-sm-12 col-lg-10 col-lg-offset-1){\n            Table(src, \"id,name,author,source=_source,rate=_rate,=_actions\")\n        }\n    }\n}",
            "Name": "hackaton_bugs",
            "Menu": "default_menu"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "Div(content-wrapper){\n    Div(breadcrumb){\n        Div(){\n            LinkPage(Body:hackaton, Page: hackaton)\n            Span(/).Style(margin-right: 10px;margin-left: 10px;).(source, text-muted)\n        }\n    }\n    If(#Id#>0){\n        DBFind(Name:hackaton, Source: src).Columns(\"work\").Where(\"id=#Id#\").Vars(hacker)\n        Div(row){\n            Div(col-sm-12){\nCode(\n    #hacker_work#\n)\n            }\n        }\n    }.Else{\n        id не передано на страницу\n    }\n}",
            "Name": "hackaton_source",
            "Menu": "default_menu"
        }
    ],
    "parameters": [],
    "tables": [
        {
            "Name": "hackaton",
            "Columns": "[\n    {\n        \"name\": \"name\",\n        \"type\": \"text\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"email\",\n        \"type\": \"text\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"work\",\n        \"type\": \"text\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"rate\",\n        \"type\": \"number\",\n        \"conditions\": \"true\"\n    }\n]",
            "Permissions": "{\"insert\":\"true\",\"update\":\"true\",\"new_column\":\"true\"}"
        },
        {
            "Name": "hackaton_bugs",
            "Columns": "[\n    {\n        \"name\": \"name\",\n        \"type\": \"text\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"author\",\n        \"type\": \"text\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"src\",\n        \"type\": \"text\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"rate\",\n        \"type\": \"number\",\n        \"conditions\": \"true\"\n    }\n]",
            "Permissions": "{\"insert\":\"true\",\"update\":\"true\",\"new_column\":\"true\"}"
        }
    ]
}