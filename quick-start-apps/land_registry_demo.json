{
    "name": "Land registry",
    "data": [
        {
            "Name": "land_registry_edit",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "If(#notific_id#>0){\r\n    DBFind(notifications,notes).Columns(\"page_params->admin,page_params->land_id\").Where(\"id=#notific_id#\").Vars(note)\r\n}\r\nIf(#note_page_params_land_id#>0){\r\n    SetVar(LandId,#note_page_params_land_id#)\r\n}.Else{\r\n    SetVar(LandId,1)\r\n}\r\nIf(#note_page_params_admin#==1){\r\n    SetVar(admin,1)\r\n}\r\nIf(#admin#==1){\r\n    SetTitle($depart_role2$)\r\n}.Else{\r\n    SetTitle($owner$)\r\n}\r\n\r\nAppParam(App:#application_id#, Name: land_yes_no, Source: src_yes_no)\r\nDBFind(land_registry,src_entry).WhereId(#LandId#).Vars(entry)\r\nDBFind(members,src_owners).Where(\"id=#entry_owner_id#\").Vars(owner)\r\nSetVar(cons,).(cert,$undefined$).(legal,$undefined$)\r\nData(part1,\"Res,Val\"){\r\n    \"$area_size$ (Span(m).(2,sup))\",#entry_area#\r\n    $owner$,#owner_member_name#\r\n    $lr_address$,#entry_address#\r\n    $record_add_date$,DateTime(#entry_date_create#)\r\n    $buildings_use_class$,\"AppParam(App:#application_id#, Name: land_buildings_use_class, Index: #entry_buildings_use_class#)\"\r\n    $land_nature$,\"AppParam(App:#application_id#, Name: land_nature, Index: #entry_land_nature#)\"\r\n}\r\n\r\nIf(#admin#==1){\r\n    If(GetVar(entry_price)){\r\n        SetVar(cons,#entry_price#)\r\n    }\r\n    Data(part2,\"Res,Val\"){\r\n        $consideration_value$,#cons#\r\n    }\r\n    Data(part3,\"Name,Type,Res,Val,Src\"){\r\n        EncumbranceCertificate,radio,$encumbrance_certificate$,#entry_encumbrance_certificate#,src_yes_no\r\n        LegalStatus,radio,$legal_status$,#entry_legal_status#,src_yes_no\r\n    }\r\n}.Else{\r\n    If(GetVar(entry_encumbrance_certificate)){\r\n        SetVar(cert,AppParam(App:#application_id#, Name: land_yes_no, Index: #entry_encumbrance_certificate#))\r\n    }\r\n    If(GetVar(entry_legal_status)){\r\n        SetVar(legal,AppParam(App:#application_id#, Name: land_yes_no, Index: #entry_legal_status#))\r\n    }\r\n    Data(part2,\"Name,Type,Res,Val\"){\r\n        Price,number,$consideration_value$,#entry_price#\r\n    }\r\n    Data(part3,\"Res,Val\"){\r\n        $consideration_value$,#cert#\r\n        $legal_status$,#legal#\r\n    }\r\n}\r\nData(parts,\"Part\"){\r\n    part1\r\n    part2\r\n    part3\r\n}\r\nDiv(content-wrapper){\r\n    Div(breadcrumb){\r\n        LinkPage(LangRes(land_records), land_registry_records, PageParams: \"admin=#admin#\")\r\n        Span(/,mh)\r\n        Span(LangRes(land_records_edit) ##LandId#, text-muted)\r\n    }\r\n    Div(container){\r\n        Div(row){\r\n            Div(col-sm-8 col-sm-offset-2 text-left){\r\n                Form(panel panel-primary){\r\n                    Div(list-group-item text-center){\r\n                        Div(h3){LangRes(land_records_edit)}\r\n                    }\r\n                    Div(list-group-item){\r\n                        Map(Hmap:300, MapType: hybrid, Value: #entry_map_coords#)\r\n                    }\r\n                    ForList(parts){\r\n                        Div(list-group-item){\r\n                            ForList(#Part#){\r\n                                Div(row mt-sm h5 flex){\r\n                                    Div(col-md-5 text-right text-bold){#Res#:}\r\n                                    Div(col-md-6 text-left){\r\n                                        If(#Type#==number){\r\n                                            Input(Name: #Name#, Class: input-sm, Value: #Val#, Type: #type#)\r\n                                        }.ElseIf(#Type#==radio){\r\n                                            Div(form-inline text-nowrap){\r\n                                                RadioGroup(Name: #Name#, Value: #Val#, Source: #Src#, ValueColumn: id, NameColumn: name)\r\n                                            }\r\n                                        }.Else{\r\n                                            #Val#\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    Div(panel-footer text-right){\r\n                        Input(Name: LandId, Type: hidden, Value: #LandId#)\r\n                        Button(Page: land_registry_records, Body: $lr_back$, Class: btn btn-default pull-left, PageParams: \"admin=#admin#\")\r\n\r\n                        If(#admin#==1){\r\n                            Button(Body: $lr_save$, Class: btn btn-primary, Contract: land_registry_UpdateAdmin, Params: \"NotificId=#notific_id#\", Page: land_registry_records)\r\n                        }.Else{\r\n                            Button(Body: $lr_save$, Class: btn btn-primary, Contract: land_registry_UpdateOwner, Params: \"Price=Val(Price),NotificId=#notific_id#\", Page: land_registry_records)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }.Style(\r\n        .sup {vertical-align: super;font-size:small;display: inline-block;}\r\n        .flex {display: flex;align-items: center;}\r\n    )\r\n}",
            "Type": "blocks"
        },
        {
            "Name": "land_registry_records",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "If(GetVar(Search)){\r\n    SetVar(Where,\"delete=0 and buildings_use_class=#Search#\")\r\n}.Else{\r\n    SetVar(Where,\"delete=0\").(Search,)\r\n}\r\n\r\nIf(GetVar(Order)){}.Else{\r\n    SetVar(Order,\"id desc\")\r\n}\r\n\r\nDBFind(applications).Columns(\"name,id\").Where(\"name='Land registry'\").Vars(application)\r\n\r\nDBFind(Name: land_registry, Source: src_land_registry).Where(#Where#).Order(#Order#).Custom(_id){\r\n    Span(#id#)\r\n}.Custom(_owner){\r\n    DBFind(Name: members, Source: src_members).Where(\"id=#owner_id#\").Vars(row)\r\n    LinkPage(Page: profile_view, PageParams: \"v_member_id=#row_id#\"){\r\n        Span(Class: h5 text-bold, Body: #row_member_name#)\r\n    }\r\n}.Custom(_land){\r\n    Span(AppParam(App:#application_id#, Name: land_use, Index: #land_use#))\r\n}.Custom(_buildings){\r\n    Span(AppParam(App:#application_id#, Name: land_buildings_use_class, Index: #buildings_use_class#))\r\n}.Custom(_area){\r\n    Span(#area#)\r\n}.Custom(_address){\r\n    Span(#address#)\r\n}.Custom(_cons){\r\n    Div(h6 ml-lg){\r\n        If(#price#>0){\r\n            Span(#price#)\r\n        }.Else{\r\n            Em(Class: fa fa-1x text-muted fa-question-circle)\r\n        }\r\n    }\r\n}.Custom(_legal){\r\n    Div(h6 ml-lg){\r\n        If(#legal_status#==0){\r\n            Em(Class: fa fa-1x text-muted fa-question-circle)\r\n        }\r\n        If(#legal_status#==1){\r\n            Em(Class: fa fa-1x text-success fa-check-circle)\r\n        }\r\n        If(#legal_status#==2){\r\n            Em(Class: fa fa-1x text-danger fa-exclamation-circle)\r\n        }\r\n    }\r\n}.Custom(_encumberance){\r\n    Div(h6 ml-lg){\r\n        If(#encumbrance_certificate#==0){\r\n            Em(Class: fa fa-1x text-muted fa-question-circle)\r\n        }\r\n        If(#encumbrance_certificate#==1){\r\n            Em(Class: fa fa-1x text-success fa-check-circle)\r\n        }\r\n        If(#encumbrance_certificate#==2){\r\n            Em(Class: fa fa-1x text-danger fa-exclamation-circle)\r\n        }\r\n    }\r\n}.Custom(_actions){\r\n    Div(text-right text-nowrap){\r\n        Button(Page: #this#, Contract: land_registry_Delete, Params: \"LandId=#id#\", Class: btn btn-danger fa fa-2x fa-trash mh-sm)\r\n        Button(Page: land_registry_view, PageParams: \"LandId=#id#\", Class: btn btn-primary fa fa-2x fa-eye mh-sm)\r\n    }\r\n}.Count(reg_count)\r\n\r\nDiv(Class: content-wrapper){\r\n    Form(panel panel-primary){\r\n        Div(panel-body){\r\n            Div(row){\r\n                Div(col-md-9 text-left){\r\n                    Div(input-group){\r\n                        Div(input-group-addon){\r\n                            $buildings_use_class$\r\n                        }\r\n                        AppParam(App:#application_id#, Name: land_buildings_use_class, Source:src_search)\r\n                        Select(Name: BuildingUse, Source: src_search, NameColumn: name, ValueColumn: id, Value: #Search#)\r\n\r\n                        Div(input-group-btn){\r\n                            Button(Page: #this#, PageParams: \"Search=Val(BuildingUse),Order=#Order#\", Class: btn btn-default fa fa-search)\r\n                        }\r\n                    }\r\n                }\r\n                Div(col-md-3 text-center){\r\n                    Div(btn-group text-nowrap){\r\n                        If(#Order#==\"price\"){\r\n                            Button(Page: #this#, Class: ml-sm btn bg-gray, PageParams: \"Order=price desc,Search=#Search#\", Body: Em(Class:fa fa-sort-numeric-asc) $price$)\r\n                        }.ElseIf(#Order#==\"price desc\"){\r\n                            Button(Page: #this#, Class: ml-sm btn bg-gray, PageParams: \"Order=price,Search=#Search#\", Body: Em(Class:fa fa-sort-numeric-desc) $price$)\r\n                        }.Else{\r\n                            Button(Page: #this#, Class: ml-sm btn bg-gray-lighter, PageParams: \"Order=price,Search=#Search#\", Body: $price$)\r\n                        }\r\n\r\n                        If(#Order#==\"area\"){\r\n                            Button(Page: #this#, Class: ml-sm btn bg-gray, PageParams: \"Order=area desc,Search=#Search#\", Body: Em(Class:fa fa-sort-numeric-asc) $area_size$)\r\n                        }.ElseIf(#Order#==\"area desc\"){\r\n                            Button(Page: #this#, Class: ml-sm btn bg-gray, PageParams: \"Order=area,Search=#Search#\", Body: Em(Class:fa fa-sort-numeric-desc) $area_size$)\r\n                        }.Else{\r\n                            Button(Page: #this#, Class: ml-sm btn bg-gray-lighter, PageParams: \"Order=area desc,Search=#Search#\", Body: $area_size$)\r\n                        }\r\n                    }\r\n\r\n\r\n                }\r\n            }\r\n            Div(table-responsive){\r\n                Table(Source:src_land_registry, Columns: \"ID=_id,$owner$=_owner,$area_size$=_area,$lr_address$=_address,$consideration_value$(INR)=_cons,$legal_status$=_legal,$encumbrance_certificate$=_encumberance,=_actions\")\r\n            }\r\n            If(GetVar(isSearch) == 1){\r\n                Div(row){\r\n                    Div(col-md-12 mt-lg){\r\n                        Div(text-center){\r\n                            Button(Body: View all, Class: btn btn-primary, Page: #this#, PageParams: \"isSearch=0\")\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Type": "blocks"
        },
        {
            "Name": "default_menu",
            "Conditions": "ContractAccess(\"@1EditMenu\")",
            "Value": " ",
            "Type": "menu"
        },
        {
            "Name": "add_new_record",
            "Trans": "{\"en\":\"Add new record\",\"ru\":\"Добавить новую запись\"}",
            "Type": "languages"
        },
        {
            "Name": "add_role",
            "Trans": "{\"en\": \"Add role\", \"ru\": \"Добавить роль\"}",
            "Type": "languages"
        },
        {
            "Name": "applications",
            "Trans": "{\"en\":\"Applications\",\"ru\":\"Приложения\"}",
            "Type": "languages"
        },
        {
            "Name": "area_size",
            "Trans": "{\"en\":\"Area size\",\"ru\":\"Размер\"}",
            "Type": "languages"
        },
        {
            "Name": "ask_request_second",
            "Trans": "{\"en\":\"Do you want to send a second request?\",\"ru\":\"Вы хотите отправить повторный запрос?\"}",
            "Type": "languages"
        },
        {
            "Name": "attention",
            "Trans": "{\"en\": \"ATTENTION! The page has not received parameters and is unavailable for viewing.\", \"ru\": \"ВНИМАНИЕ! Страница не получила параметров и не доступна для просмотра.\"}",
            "Type": "languages"
        },
        {
            "Name": "avatar",
            "Trans": "{\"en\": \"Avatar\", \"ru\": \"Фото\"}",
            "Type": "languages"
        },
        {
            "Name": "buildings_use_class",
            "Trans": "{\"en\":\"Buildings use class\",\"ru\":\"Класс используемых зданий\"}",
            "Type": "languages"
        },
        {
            "Name": "cancel",
            "Trans": "{\"en\":\"Cancel\",\"ru\":\"Отмена\"}",
            "Type": "languages"
        },
        {
            "Name": "close",
            "Trans": "{\"en\": \"Close\", \"ru\": \"Закрыть\"}",
            "Type": "languages"
        },
        {
            "Name": "code",
            "Trans": "{\"en\":\"Code\",\"ru\":\"Код\"}",
            "Type": "languages"
        },
        {
            "Name": "confirm",
            "Trans": "{\"en\":\"Confirm\",\"ru\":\"Подтвердить\"}",
            "Type": "languages"
        },
        {
            "Name": "consideration_value",
            "Trans": "{\"en\":\"Consideration value\",\"ru\":\"Справедливая стоимость\"}",
            "Type": "languages"
        },
        {
            "Name": "create",
            "Trans": "{\"en\": \"Create\", \"ru\": \"Создать\"}",
            "Type": "languages"
        },
        {
            "Name": "demo_sendContract",
            "Trans": "{\"en\":\"Send to contract\",\"ru\":\"Передача в контракт\"}",
            "Type": "languages"
        },
        {
            "Name": "demo_sendMessage",
            "Trans": "{\"en\":\"Send a text parameter to a notification\",\"ru\":\"Передача текстового параметра в оповещении\"}",
            "Type": "languages"
        },
        {
            "Name": "demo_sendPage",
            "Trans": "{\"en\":\"Send to page\",\"ru\":\"Передача на страницу\"}",
            "Type": "languages"
        },
        {
            "Name": "demo_title",
            "Trans": "{\"en\":\"Demonstration\",\"ru\":\"Демонстрация\"}",
            "Type": "languages"
        },
        {
            "Name": "depart_role1",
            "Trans": "{\"en\":\"Department of Land Resources\",\"ru\":\"Департамент земельных ресурсов\"}",
            "Type": "languages"
        },
        {
            "Name": "depart_role2",
            "Trans": "{\"en\":\"Department of Legal Affairs\",\"ru\":\"Департамент по правовым вопросам\"}",
            "Type": "languages"
        },
        {
            "Name": "depart_role3",
            "Trans": "{\"en\":\"Department of Revenue\",\"ru\":\"Департамент налогов и сборов\"}",
            "Type": "languages"
        },
        {
            "Name": "department_of_land_resources",
            "Trans": "{\"en\":\"Department of Land Resources\",\"ru\":\"Отдел земельных ресурсов\"}",
            "Type": "languages"
        },
        {
            "Name": "description",
            "Trans": "{\"en\": \"Description\", \"ru\": \"Описание\"}",
            "Type": "languages"
        },
        {
            "Name": "edit_contract",
            "Trans": "{\"en\":\"Edit contract\",\"ru\":\"Редактировать контракт\"}",
            "Type": "languages"
        },
        {
            "Name": "edit_page",
            "Trans": "{\"en\":\"Edit page\",\"ru\":\"Редактировать страницу\"}",
            "Type": "languages"
        },
        {
            "Name": "editing_profile",
            "Trans": "{\"en\": \"Editing profile\", \"ru\": \"Редактирование профиля\"}",
            "Type": "languages"
        },
        {
            "Name": "encumbrance_certificate",
            "Trans": "{\"en\":\"Encumbrance certificate\",\"ru\":\"Сертификат обременения\"}",
            "Type": "languages"
        },
        {
            "Name": "id",
            "Trans": "{\"en\": \"ID\", \"ru\": \"ID\"}",
            "Type": "languages"
        },
        {
            "Name": "input",
            "Trans": "{\"en\":\"Input\",\"ru\":\"Ввод\"}",
            "Type": "languages"
        },
        {
            "Name": "land_nature",
            "Trans": "{\"en\":\"Nature\",\"ru\":\"Тип\"}",
            "Type": "languages"
        },
        {
            "Name": "land_record",
            "Trans": "{\"en\":\"Land record\",\"ru\":\"Земельная запись\"}",
            "Type": "languages"
        },
        {
            "Name": "land_records",
            "Trans": "{\"en\":\"Land Registry\",\"ru\":\"Земельный реестр\"}",
            "Type": "languages"
        },
        {
            "Name": "land_records_add",
            "Trans": "{\"en\":\"Land Record adding\",\"ru\":\"Добавление земельной записи\"}",
            "Type": "languages"
        },
        {
            "Name": "land_records_edit",
            "Trans": "{\"en\":\"Land record edit\",\"ru\":\"Редактирование земельной записи\"}",
            "Type": "languages"
        },
        {
            "Name": "land_use",
            "Trans": "{\"en\":\"Land use\",\"ru\":\"Землепользование\"}",
            "Type": "languages"
        },
        {
            "Name": "legal_status",
            "Trans": "{\"en\":\"Legal status\",\"ru\":\"Правовой статус\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_add",
            "Trans": "{\"en\": \"Add\", \"ru\": \"Добавить\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_address",
            "Trans": "{\"en\":\"Address\",\"ru\":\"Адрес\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_back",
            "Trans": "{\"en\": \"Back\", \"ru\": \"Назад\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_change",
            "Trans": "{\"en\": \"Change\", \"ru\": \"Изменить\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_save",
            "Trans": "{\"en\": \"Save\", \"ru\": \"Сохранить\"}",
            "Type": "languages"
        },
        {
            "Name": "member_id",
            "Trans": "{\"en\": \"Member ID\", \"ru\": \"ID члена\"}",
            "Type": "languages"
        },
        {
            "Name": "name",
            "Trans": "{\"en\": \"Name\", \"ru\": \"Название\"}",
            "Type": "languages"
        },
        {
            "Name": "need_your_processing",
            "Trans": "{\"en\":\"Need your processing\",\"ru\":\"Нужна ваша обработка\"}",
            "Type": "languages"
        },
        {
            "Name": "new_land",
            "Trans": "{\"en\":\"New land\",\"ru\":\"Новая земля\"}",
            "Type": "languages"
        },
        {
            "Name": "new_voting",
            "Trans": "{\"en\": \"New voting\", \"ru\": \"Новое голосование\"}",
            "Type": "languages"
        },
        {
            "Name": "no",
            "Trans": "{\"en\":\"No\",\"ru\":\"Нет\"}",
            "Type": "languages"
        },
        {
            "Name": "no_problem",
            "Trans": "{\"en\":\"No Issues\",\"ru\":\"Нет проблем\"}",
            "Type": "languages"
        },
        {
            "Name": "notifications",
            "Trans": "{\"en\": \"Notifications\", \"ru\": \"Уведомления\"}",
            "Type": "languages"
        },
        {
            "Name": "owner",
            "Trans": "{\"en\":\"Owner\",\"ru\":\"Владелец\"}",
            "Type": "languages"
        },
        {
            "Name": "price",
            "Trans": "{\"en\":\"Price\",\"ru\":\"Цена\"}",
            "Type": "languages"
        },
        {
            "Name": "problem",
            "Trans": "{\"en\":\"Have Issues\",\"ru\":\"Проблемы\"}",
            "Type": "languages"
        },
        {
            "Name": "profile_edit",
            "Trans": "{\r\n    \"en\": \"Profile edit\",\r\n    \"ru\": \"Редактирование профиля\"\r\n}",
            "Type": "languages"
        },
        {
            "Name": "record_add_date",
            "Trans": "{\"en\":\"Record Add Date\",\"ru\":\"Дата добавления записи\"}",
            "Type": "languages"
        },
        {
            "Name": "referendum",
            "Trans": "{\"en\":\"Referendum\",\"ru\":\"Референдум\"}",
            "Type": "languages"
        },
        {
            "Name": "registration_date",
            "Trans": "{\"en\":\"Registration Date\",\"ru\":\"Дата регистрации\"}",
            "Type": "languages"
        },
        {
            "Name": "result",
            "Trans": "{\"en\":\"Result\",\"ru\":\"Результат\"}",
            "Type": "languages"
        },
        {
            "Name": "send_contract",
            "Trans": "{\"en\":\"Send to contract\",\"ru\":\"Отправить в контракт\"}",
            "Type": "languages"
        },
        {
            "Name": "send_notify",
            "Trans": "{\"en\":\"Send Notification\",\"ru\":\"Отправить оповещение\"}",
            "Type": "languages"
        },
        {
            "Name": "send_page",
            "Trans": "{\"en\":\"Send to page\",\"ru\":\"Отправить на страницу\"}",
            "Type": "languages"
        },
        {
            "Name": "send_request",
            "Trans": "{\"en\":\"Send request\",\"ru\":\"Послать запрос\"}",
            "Type": "languages"
        },
        {
            "Name": "total_votes",
            "Trans": "{\"en\":\"Total votes\",\"ru\":\"Всего проголосовало\"}",
            "Type": "languages"
        },
        {
            "Name": "undefined",
            "Trans": "{\"en\":\"Undefined\",\"ru\":\"Не определено\"}",
            "Type": "languages"
        },
        {
            "Name": "user_info",
            "Trans": "{\"en\": \"User information\", \"ru\": \"Информация о пользователе\"}",
            "Type": "languages"
        },
        {
            "Name": "username",
            "Trans": "{\"en\": \"Username\", \"ru\": \"Никнейм\"}",
            "Type": "languages"
        },
        {
            "Name": "view_all",
            "Trans": "{\"en\": \"View all\", \"ru\": \"Посмотреть все\"}",
            "Type": "languages"
        },
        {
            "Name": "votes_taken_accept",
            "Trans": "{\"ru\":\"Положительных голосов\",\"en\":\"Positive votes\"}",
            "Type": "languages"
        },
        {
            "Name": "votes_taken_reject",
            "Trans": "{\"ru\":\"Отрицательных голосов\",\"en\":\"Negative votes\"}",
            "Type": "languages"
        },
        {
            "Name": "want_save",
            "Trans": "{\"en\":\"Do you want to save changes?\",\"ru\":\"Действительно хотите сохранить\"}",
            "Type": "languages"
        },
        {
            "Name": "yes",
            "Trans": "{\"en\":\"Yes\",\"ru\":\"Да\"}",
            "Type": "languages"
        },
        {
            "Name": "land_registry",
            "Columns": "[{\"name\":\"address\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"land_use\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"land_nature\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"modification_date\",\"type\":\"datetime\",\"conditions\":\"true\"},{\"name\":\"tax_receipt_and_bills\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"encumbrance_certificate\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"area\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"delete\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"price_gov_value\",\"type\":\"money\",\"conditions\":\"true\"},{\"name\":\"buildings_use_class\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"price_market_value\",\"type\":\"money\",\"conditions\":\"true\"},{\"name\":\"owner_id\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"map_coords\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"date_create\",\"type\":\"datetime\",\"conditions\":\"true\"},{\"name\":\"legal_status\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"land_local_body\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"registration_date\",\"type\":\"datetime\",\"conditions\":\"true\"},{\"name\":\"price\",\"type\":\"money\",\"conditions\":\"true\"}]",
            "Permissions": "{\"insert\":\"true\",\"update\":\"true\",\"new_column\":\"true\"}",
            "Type": "tables"
        },
        {
            "Name": "land_registry_ownership",
            "Columns": "[{\"name\":\"dep3_approved\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"lend_object_id\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"price\",\"type\":\"money\",\"conditions\":\"true\"},{\"name\":\"owner_id\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"date_signing\",\"type\":\"datetime\",\"conditions\":\"true\"},{\"name\":\"owner_new_id\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"step\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"date_creat\",\"type\":\"datetime\",\"conditions\":\"true\"},{\"name\":\"owner_type\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"dep2_approved\",\"type\":\"number\",\"conditions\":\"true\"}]",
            "Permissions": "{\"insert\":\"true\",\"update\":\"true\",\"new_column\":\"true\"}",
            "Type": "tables"
        },
        {
            "Name": "land_buildings_use_class",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "Shops,Financial and professional services,Restaurants and cafes,Business,Hotels,Dwellinghouses,Non-residential institutions,No",
            "Type": "app_params"
        },
        {
            "Name": "land_ec_status",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "No Issues,Have Issues",
            "Type": "app_params"
        },
        {
            "Name": "land_local_body",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "Minor Gram Panchayat,Major Gram Panchayat,Other Municipality/Notified Area,Municipal Corporation",
            "Type": "app_params"
        },
        {
            "Name": "land_nature",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "0101 Sale Deed,0111 AGREEMENT OF SALE CUM GPA,0202 Mortgage without Possession,0206 Mortgage deed by small farmer for Agrl.loans in f/o PAC/Bank,0208 Deposit of Title Deeds,0302 Gift Settlement in f/o family member,0303 Gift Settlement in f/o others,0304 Gift Settlement for Charitable/religious purposes,0401 Partition,0402 Partition among Family Members,0505 RECEIPT(R.T.D.M),0701 Lease Deed,0801 Rectification Deed,0803 Cancellation Deed",
            "Type": "app_params"
        },
        {
            "Name": "land_use",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "01 Residential-U,09 URBAN VacantLand(Residential)-U,21 Dry land-R,26 Wet Land double crop-R,27 Wet Land single crop-R,30 Coconut Garden-R",
            "Type": "app_params"
        },
        {
            "Name": "land_yes_no",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "no_problem,problem",
            "Type": "app_params"
        },
        {
            "Name": "legal_status",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "No Issues,Title Not Clear,Multiple Owner Claims,Khata Not Clear",
            "Type": "app_params"
        },
        {
            "Name": "land_registry_add",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "DBFind(applications,src_app).Columns(\"name,id\").Where(\"name='Land registry'\").Vars(application)\r\nDBFind(members,src_owners).Custom(name){#member_name#}\r\nAppParam(App:#application_id#, Name: land_nature, Source: src_nature)\r\nAppParam(App:#application_id#, Name: land_buildings_use_class, Source: src_class)\r\nSetVar(defaultCoords,`{\"zoom\":8, \"center\":{\"lat\":51.500,\"lng\":-0.125}}`)\r\nData(part1, \"Name,Type,Res,Val\"){\r\n    Coords,map,lr_address,#defaultCoords#\r\n}\r\nData(part2, \"Name,Type,Res,Val\"){\r\n    OwnerId,select,owner,src_owners\r\n    LandNature,select,land_nature,src_nature\r\n    BuildingsUseClass,select,buildings_use_class,src_class\r\n    RegistrationDate,date,registration_date,\r\n}\r\nData(parts, \"Part\"){\r\n    part1\r\n    part2\r\n}\r\nSetTitle($department_of_land_resources$)\r\nDiv(content-wrapper){\r\n    Div(breadcrumb){\r\n        Div(){\r\n            LinkPage(LangRes(land_records), land_registry_records)\r\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n            Span(LangRes(land_records_add), text-muted)\r\n        }\r\n    }\r\n    Div(container){\r\n        Div(row){\r\n            Div(col-sm-8 col-sm-offset-2 text-left){\r\n                Form(panel panel-primary){\r\n                    Div(panel-heading){LangRes(add_new_record)}\r\n                    ForList(parts){\r\n                        Div(list-group-item){\r\n                            ForList(#Part#){\r\n                                Div(row mt-sm){\r\n                                    Div(col-md-3 mt-sm text-right){\r\n                                        Strong(LangRes(#Res#))\r\n                                    }\r\n                                    Div(col-md-9){\r\n                                        If(#Type#==map){\r\n                                            InputMap(Name: #Name#, Type: polygon, MapType: hybrid, Value:#Val#)\r\n                                        }.ElseIf(#Type#==select){\r\n                                            Select(Name: #Name#, Source: #Val#, ValueColumn: id, NameColumn: name)\r\n                                        }.Else{\r\n                                            Input(Name: #Name#, Type: #Type#)\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    Div(panel-footer text-right){\r\n                        Button(Page: land_registry_records, Body: LangRes(lr_back), Class: btn btn-default pull-left)\r\n                        Button(Body: LangRes(lr_add), Class: btn btn-primary, Contract: land_registry_Add, Page: land_registry_records)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "land_registry_edit",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "DBFind(applications,src_app).Columns(\"name,id\").Where(\"name='Land registry'\").Vars(application)\r\nInclude(land_registry_edit)",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "land_registry_records",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "DBFind(applications,src_app).Columns(\"name,id\").Where(\"name='Land registry'\").Vars(application)\r\nSetTitle(\"Land registry\")\r\nDiv(breadcrumb){\r\n    Div(Class: text-muted, Body: \"The app is a registry of real estate objects.\")\r\n}\r\nAddToolButton(Title: $lr_add$, Page: land_registry_add, Icon: icon-plus)\r\nSetVar(this, land_registry_records)\r\nInclude(land_registry_records)",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "land_registry_view",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "DBFind(applications,src_app).Columns(\"name,id\").Where(\"name='Land registry'\").Vars(application)\r\nIf(GetVar(notific_val_int)){\r\n    SetVar(LandId, #notific_val_int#)\r\n}\r\n\r\nIf(GetVar(notific_id)){}.Else{SetVar(notific_id,0)}\r\n\r\nSetVar(title,$land_record$)\r\n\r\nIf(GetVar(LandId)){}.Else{SetVar(LandId,1)}\r\n\r\nIf(GetVar(LandId)){\r\n    DBFind(Name: land_registry, Source: src_entry).WhereId(#LandId#).Vars(entry)\r\n    DBFind(Name: land_registry_ownership, Source: src_land_ownership).Where(lend_object_id=#LandId#).Vars(ownership)\r\n\r\n    DBFind(Name: members, Source: src_owner).Where(id=#ownership_owner_id#).Vars(owner)\r\n}\r\nDBFind(notifications).Where(\"page_params->LandId='#LandId#' and page_params->second_request='1' and closed=0\").Vars(alert)\r\n\r\nSetVar(alert,0).(btn_legal,0).(btn_cert,0).(btn_price,0).(price,$undefined$)\r\nIf(#alert_id#>0){\r\n    SetVar(alert,1)\r\n}\r\nIf(And(#entry_legal_status#!=1, #alert#==0)){\r\n    SetVar(btn_legal,1)\r\n}\r\nIf(And(#entry_encumbrance_certificate#!=1, #alert#==0)){\r\n    SetVar(btn_cert,1)\r\n}\r\nIf(#entry_price#>0){\r\n    SetVar(price,\"#entry_price# INR\")\r\n}\r\nIf(#ownership_owner_id#==#key_id#){\r\n    SetVar(btn_price,1)\r\n}\r\n\r\nData(part1, \"Type,Res,Val\"){\r\n    map,map,#entry_map_coords#\r\n}\r\nData(part2, \"Res,Val\"){\r\n    \"$area_size$ (Span(m).(2,sup))\",#entry_area#\r\n    $owner$,#owner_member_name#\r\n    $lr_address$,#entry_address#\r\n    $record_add_date$,\"DateTime(#entry_date_create#)\"\r\n    $buildings_use_class$,\"AppParam(App:#application_id#, Name: land_buildings_use_class, Index: #entry_buildings_use_class#)\"\r\n    $land_nature$,\"AppParam(App:#application_id#, Name: land_nature, Index: #entry_land_nature#)\"\r\n}\r\nData(part3, \"Res,Val,ReqBtn\"){\r\n    $legal_status$,\"AppParam(App:#application_id#, Name: legal_status, Index: #entry_legal_status#)\",#btn_legal#\r\n}\r\nData(part4, \"Res,Val,ReqBtn\"){\r\n    $encumbrance_certificate$,\"AppParam(App:#application_id#, Name: land_ec_status, Index: #entry_encumbrance_certificate#)\",#btn_cert#\r\n}\r\nData(part5, \"Res,Val,PriceBtn\"){\r\n    $consideration_value$,#price#,#btn_cert#\r\n}\r\nData(parts, \"Part\"){\r\n    part1\r\n    part2\r\n    part3\r\n    part4\r\n    part5\r\n}\r\n\r\nSetTitle(#title#)\r\nDiv(content-wrapper){\r\n    Div(breadcrumb){\r\n        LinkPage(Body:$land_records$,Page: land_registry_records)\r\n        Span(/,mh)\r\n        Span(#title#, text-muted)\r\n    }\r\n    If(GetVar(LandId)){\r\n        Div(container){\r\n            Div(row){\r\n                Form(col-sm-8 col-sm-offset-2){\r\n                    Div(list-group-item text-center){\r\n                        Div(h3){\r\n                            $land_record$ #GetVar(LandId)\r\n                        }\r\n                    }\r\n                    ForList(parts){\r\n                        Div(list-group-item){\r\n                            ForList(#Part#){\r\n                                If(#Type#==map){\r\n                                    Map(MapType: hybrid, Hmap:300, Value: #Val#)\r\n                                }.Else{\r\n                                    Div(row mt-sm flex){\r\n                                        Div(col-md-5 text-right h5 m0 text-bold){#Res#:}\r\n                                        Div(col-md-7 text-left h5 m0){\r\n                                            #Val#\r\n                                            If(#ReqBtn#==1){\r\n                                                Button(Contract: land_registry_SecondRequest, Body:$send_request$, Params: \"LandId=#LandId#\", Class: ml btn btn-default, Page: land_registry_view, PageParams: \"LandId=#LandId#\").Alert(Text:$ask_request_second$, ConfirmButton:$confirm$, CancelButton:$cancel$)\r\n                                            }.ElseIf(#PriceBtn#==1){\r\n                                                Button(Page: land_registry_edit, Body:$lr_change$, PageParams: \"LandId=#LandId#\", Class: ml btn btn-default)\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }.Style(\r\n            .sup {vertical-align: super;font-size:small;display: inline-block;}\r\n            .flex {display: flex;align-items: center;}\r\n        )\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "land_registry_Add",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract land_registry_Add{\r\n    data{\r\n        OwnerId int\r\n        Coords string // {\"coords\":[{\"lat\":float,\"lng\":float},],\"area\": float,\"address\": string}\r\n        BuildingsUseClass int\r\n        LandNature int\r\n        RegistrationDate string \"date\"\r\n    }\r\n\r\n    func conditions{\r\n        var member map\r\n        member = DBFind(\"members\").Where(\"id = ?\", $OwnerId).Row()\r\n        if !member {\r\n            warning \"Member account for Owner not found\"\r\n        }\r\n        $coordsMap = JSONToMap($Coords)\r\n        $coordsAddress = $coordsMap[\"address\"]\r\n        $area = $coordsMap[\"area\"]\r\n        $area = Sprintf(\"%.0f\", $area)\r\n\r\n        if !$coordsAddress {\r\n            info \"Please input address\"\r\n        }\r\n        if $area <= 0 {\r\n            info \"Please use map for input of the area coordinates\"\r\n        }\r\n    }\r\n\r\n    func action{\r\n        var icon header body page string closureType landId landUse landLocalBody area int params map\r\n        landId = DBInsert(\"land_registry\", \"owner_id,address,area,buildings_use_class,map_coords,land_use,timestamp date_create,delete,land_nature,land_local_body,registration_date,timestamp modification_date\", $OwnerId, $coordsAddress, $area, $BuildingsUseClass, $Coords, landUse, $block_time, 0, $LandNature, landLocalBody, $RegistrationDate, $block_time)\r\n\r\n        DBInsert(\"land_registry_ownership\", \"step, timestamp date_creat, timestamp date_signing, lend_object_id, owner_id, owner_new_id\", -1, $block_time, $block_time, landId, $OwnerId, $OwnerId)\r\n\r\n        icon = \"fa fa-bell-o\"\r\n        body = \"Need your processing\"\r\n\r\n        var key map key_id int\r\n        key = DBFind(\"members\").Where(\"id!=?\", $key_id).Order(\"id\").Row()\r\n\r\n        if key{\r\n            key_id = Int(key[\"id\"])\r\n        } else {\r\n            key_id = $key_id\r\n        }\r\n\r\n        //notify owner\r\n        header = \"New Land: need price\"\r\n        params[\"land_id\"] = landId\r\n        page = \"land_registry_edit\"\r\n        notifications_Send(\"member_id,icon_name,text_header,text_body,page_name,params_map,sender\", $key_id,icon,header,body,page,JSONEncode(params),1)\r\n\r\n        //notify depart\r\n        header = \"Department of Legal Affairs: New land\"\r\n        params[\"admin\"] = 1\r\n        page = \"land_registry_edit\"\r\n        notifications_Send(\"member_id,icon_name,text_header,text_body,page_name,params_map,sender\", key_id,icon,header,body,page,JSONEncode(params),1)\r\n\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "land_registry_Delete",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract land_registry_Delete{\r\n    data{\r\n        LandId int\r\n    }\r\n    \r\n    func conditions{}\r\n    \r\n    func action{\r\n        DBUpdate(\"land_registry\", $LandId, \"delete\", \"1\")\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "land_registry_SecondRequest",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract land_registry_SecondRequest{\r\n    data{\r\n        LandId int\r\n    }\r\n\r\n    action{\r\n        var icon header body page string params map\r\n        icon = \"fa-bell\"\r\n        header = \"New land\"\r\n        body = \"Need your processing\"\r\n        page = \"land_registry_edit\"\r\n        params[\"land_id\"] = $LandId\r\n        params[\"admin\"] = 1\r\n        params[\"second_request\"] = 1\r\n        notifications_Send(\"member_id,icon_name,text_header,text_body,page_name,params_map,sender\", $key_id,icon,header,body,page,JSONEncode(params),1)\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "land_registry_UpdateAdmin",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract land_registry_UpdateAdmin{\r\n    data {\r\n        LandId int\r\n        EncumbranceCertificate int\r\n        LegalStatus int\r\n        NotificId int\r\n    }\r\n    func conditions {\r\n        $land = DBFind(\"land_registry\").Where(\"id=?\", $LandId).Row()\r\n        if !$land{\r\n            warning \"Land not found in registry\"\r\n        }\r\n        $name = DBFind(\"members\").Where(\"id=?\", $key_id).One(\"member_name\")\r\n    }\r\n    \r\n    func action { \r\n        DBUpdate(\"land_registry\", $LandId, \"legal_status,encumbrance_certificate\", $LegalStatus, $EncumbranceCertificate)\r\n        notifications_Close(\"notific_id\", $NotificId)\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "land_registry_UpdateOwner",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract land_registry_UpdateOwner{\r\n    data{\r\n        LandId int\r\n        NotificId string \"optional\"\r\n        Price string\r\n    }\r\n    \r\n    func conditions{\r\n        $Price = Int($Price)\r\n        $NotificId = Int($NotificId)\r\n        var entry map\r\n        entry = DBFind(\"land_registry\").Where(\"id=? and owner_id=?\",$LandId, $key_id).Row()\r\n        if !entry{\r\n            info \"You cant change this Land\"\r\n        }\r\n    }\r\n    \r\n    func action{\r\n        DBUpdate(\"land_registry\", $LandId, \"price,timestamp modification_date\", $Price, $block_time)\r\n        if $NotificId > 0{\r\n            notifications_Close(\"notific_id\", $NotificId)\r\n        }\r\n    }\r\n}",
            "Type": "contracts"
        }
    ]
}