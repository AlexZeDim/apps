{
    "name": "Tokens",
    "data": [
        {
            "Name": "default_menu",
            "Conditions": "ContractAccess(\"@1EditMenu\")",
            "Value": "MenuItem(Title: T tokens, Page: t_tokens, Icon:fa fa-list-ul)",
            "Type": "menu"
        },
        {
            "Name": "t_amount",
            "Trans": "{\"en\":\"Amount\"}",
            "Type": "languages"
        },
        {
            "Name": "t_back",
            "Trans": "{\"en\":\"Back\",\"ru\":\"Назад\"}",
            "Type": "languages"
        },
        {
            "Name": "t_data_input",
            "Trans": "{\"en\":\"Data input\",\"ru\":\"Ввод данных\"}",
            "Type": "languages"
        },
        {
            "Name": "t_data_view",
            "Trans": "{\"en\":\"Data view\",\"ru\":\"Просмотр данных\"}",
            "Type": "languages"
        },
        {
            "Name": "t_ecosystem",
            "Trans": "{\"en\":\"Ecosystem\"}",
            "Type": "languages"
        },
        {
            "Name": "t_edit",
            "Trans": "{\"en\":\"Edit\",\"ru\":\"Редактировать\"}",
            "Type": "languages"
        },
        {
            "Name": "t_item_not_found",
            "Trans": "{\"en\":\"Item not found\",\"ru\":\"Объект не найден\"}",
            "Type": "languages"
        },
        {
            "Name": "t_limited",
            "Trans": "{\"en\":\"Limited\"}",
            "Type": "languages"
        },
        {
            "Name": "t_save",
            "Trans": "{\"en\":\"Save\",\"ru\":\"Сохранить\"}",
            "Type": "languages"
        },
        {
            "Name": "t_title",
            "Trans": "{\"en\":\"Title\"}",
            "Type": "languages"
        },
        {
            "Name": "t_token_edit",
            "Trans": "{\"en\":\"T token edit\"}",
            "Type": "languages"
        },
        {
            "Name": "t_token_view",
            "Trans": "{\"en\":\"T token view\"}",
            "Type": "languages"
        },
        {
            "Name": "t_tokens",
            "Trans": "{\"en\":\"T tokens\"}",
            "Type": "languages"
        },
        {
            "Name": "t_type",
            "Trans": "{\"en\":\"Type\"}",
            "Type": "languages"
        },
        {
            "Name": "t_type_withdraw",
            "Trans": "{\"en\":\"Type withdraw\"}",
            "Type": "languages"
        },
        {
            "Name": "t_view",
            "Trans": "{\"en\":\"View\",\"ru\":\"Просмотр\"}",
            "Type": "languages"
        },
        {
            "Name": "tokens",
            "Columns": "[\n    {\n        \"conditions\": \"ContractAccess(\\\"@1EmissionEdit\\\")\",\n        \"name\": \"ecosystem\",\n        \"type\": \"number\"\n    },\n    {\n        \"conditions\": \"ContractAccess(\\\"@1EmissionEdit\\\")\",\n        \"name\": \"title\",\n        \"type\": \"varchar\"\n    },\n    {\n        \"conditions\": \"ContractAccess(\\\"@1EmissionEdit\\\")\",\n        \"name\": \"amount\",\n        \"type\": \"json\"\n    },\n    {\n        \"conditions\": \"ContractAccess(\\\"@1EmissionEdit\\\")\",\n        \"name\": \"type\",\n        \"type\": \"number\"\n    },\n    {\n        \"conditions\": \"ContractAccess(\\\"@1EmissionEdit\\\")\",\n        \"name\": \"limited\",\n        \"type\": \"number\"\n    },\n    {\n        \"conditions\": \"ContractAccess(\\\"@1EmissionEdit\\\")\",\n        \"name\": \"type_withdraw\",\n        \"type\": \"number\"\n    }\n]",
            "Permissions": "{\"insert\":\"true\",\"update\":\"true\",\"new_column\":\"true\"}",
            "Type": "tables"
        },
        {
            "Name": "t_token_edit",
            "Conditions": "true",
            "Value": "DBFind(@1applications).Columns(\"id\").Where({name:\"Tokens\", deleted:0}).Vars(application)\nSetVar(title,$t_create$).(btn_title,$t_create$).(item_type,).(item_title,).(item_amount,).(item_limited,).(item_ecosystem,).(item_type_withdraw,)\nIf(GetVar(Id)){\n    DBFind(tokens).Where({id:#Id#}).Vars(item)\n    SetVar(title,$t_edit$ ##Id#).(btn_title,$t_save$)\n}\nSetTitle(#title#)\nDiv(content-wrapper){\n    Div(breadcrumb){\n        LinkPage(Body: $t_tokens$, Page: t_tokens)\n        Span(/, mh)\n        Span(#title#, text-muted)\n    }\n    Div(row){\n        Div(col-sm-8 col-sm-offset-2 col-lg-6 col-lg-offset-3){\n            Form(panel panel-primary){\n                Div(panel-heading){\n                    LangRes(t_data_input)\n                }\n                Div(panel-body){\n                    If(GetVar(Id)){\n                        Input(Name: Id, Type:hidden, Value: #Id#)\n                    }\n                    Div(row mt-sm){\n                        Div(col-sm-4 mt-sm text-right){\n                            LangRes(t_type)\n                        }\n                        Div(col-sm-8 text-left){\n                            Input(Name: Type, Type:number, Value: #item_type#)\n                        }\n                    }\n                    Div(row mt-sm){\n                        Div(col-sm-4 mt-sm text-right){\n                            LangRes(t_title)\n                        }\n                        Div(col-sm-8 text-left){\n                            Input(Name: Title, Type:text, Value: #item_title#)\n                        }\n                    }\n                    Div(row mt-sm){\n                        Div(col-sm-4 mt-sm text-right){\n                            LangRes(t_amount)\n                        }\n                        Div(col-sm-8 text-left){\n                            Input(Name: Amount, Type:textarea, Value: #item_amount#)\n                        }\n                    }\n                    Div(row mt-sm){\n                        Div(col-sm-4 mt-sm text-right){\n                            LangRes(t_limited)\n                        }\n                        Div(col-sm-8 text-left){\n                            Input(Name: Limited, Type:number, Value: #item_limited#)\n                        }\n                    }\n                    Div(row mt-sm){\n                        Div(col-sm-4 mt-sm text-right){\n                            LangRes(t_ecosystem)\n                        }\n                        Div(col-sm-8 text-left){\n                            Input(Name: Ecosystem, Type:number, Value: #item_ecosystem#)\n                        }\n                    }\n                    Div(row mt-sm){\n                        Div(col-sm-4 mt-sm text-right){\n                            LangRes(t_type_withdraw)\n                        }\n                        Div(col-sm-8 text-left){\n                            Input(Name: TypeWithdraw, Type:number, Value: #item_type_withdraw#)\n                        }\n                    }\n                }\n                Div(panel-footer text-right){\n                    Button(Body: LangRes(t_back), Page: t_tokens, Class: btn btn-default pull-left)\n                    Button(Body: #btn_title#, Page: t_tokens, Class: btn btn-primary, Contract: TTokenEdit)\n                }\n            }\n        }\n    }\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "t_token_view",
            "Conditions": "true",
            "Value": "\nDBFind(@1applications).Columns(\"id\").Where({name:\"Tokens\", deleted:0}).Vars(application)\nIf(GetVar(Id)){\n    DBFind(tokens).Where({id:#Id#}).Vars(item)\n}\nSetVar(title,$t_view$ ##Id#)\nSetTitle(#title#)\nDiv(content-wrapper){\n    Div(breadcrumb){\n        LinkPage(Body: $t_tokens$, Page: t_tokens)\n        Span(/, mh)\n        Span(#title#, text-muted)\n    }\n    If(GetVar(Id)){\n        Div(row){\n            Div(col-sm-8 col-sm-offset-2 col-lg-6 col-lg-offset-3){\n                Div(panel panel-primary){\n                    Div(panel-heading){\n                        LangRes(t_data_view)\n                    }\n                    Div(panel-body){\n                        Div(row mt-sm){\n                            Div(col-sm-4 text-right text-bold){\n                                LangRes(t_type)\n                            }\n                            Div(col-sm-8 text-left){\n                                #item_type#\n                            }\n                        }\n\n                        Div(row mt-sm){\n                            Div(col-sm-4 text-right text-bold){\n                                LangRes(t_title)\n                            }\n                            Div(col-sm-8 text-left){\n                                #item_title#\n                            }\n                        }\n\n                        Div(row mt-sm){\n                            Div(col-sm-4 text-right text-bold){\n                                LangRes(t_amount)\n                            }\n                            Div(col-sm-8 text-left){\n                                #item_amount#\n                            }\n                        }\n\n                        Div(row mt-sm){\n                            Div(col-sm-4 text-right text-bold){\n                                LangRes(t_limited)\n                            }\n                            Div(col-sm-8 text-left){\n                                #item_limited#\n                            }\n                        }\n\n                        Div(row mt-sm){\n                            Div(col-sm-4 text-right text-bold){\n                                LangRes(t_ecosystem)\n                            }\n                            Div(col-sm-8 text-left){\n                                #item_ecosystem#\n                            }\n                        }\n\n                        Div(row mt-sm){\n                            Div(col-sm-4 text-right text-bold){\n                                LangRes(t_type_withdraw)\n                            }\n                            Div(col-sm-8 text-left){\n                                #item_type_withdraw#\n                            }\n                        }\n                    }\n                    Div(panel-footer text-left){\n                        Button(Body: LangRes(t_back), Page: t_tokens, Class: btn btn-default)\n                    }\n                }\n            }\n        }\n    }.Else{\n        Div(h3 text-center){\n            LangRes(t_item_not_found)\n        }\n    }\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "t_tokens",
            "Conditions": "true",
            "Value": "DBFind(@1applications).Columns(\"id\").Where({name:\"Tokens\", deleted:0}).Vars(application)\nSetTitle($t_tokens$)\nSetVar(page_name,t_tokens)\nDiv(content-wrapper){\n    AddToolButton(Title: Create, Page: t_token_edit, Icon: icon-plus)\n\n    DBFind(tokens).Count(count)\n    If(#page#>0){\n        SetVar(prev_page,Calculate(#page#-1)\n    }.Else{\n        SetVar(page,0).(prev_page,0)\n    }\n    SetVar(per_page,25).(off,Calculate(#page#*#per_page#)).(last_page,Calculate(#count#/#per_page#)).(next_page,#last_page#)\n    If(#count#>Calculate(#off#+#per_page#)){\n        SetVar(next_page,Calculate(#page#+1)\n    }\n    Div(button-group){\n        If(#page#>0){\n            Button(Body:\"1\", Class:btn btn-default, Page:#page_name#, PageParams: \"page=0\")\n        }.Else{\n            Button(Body:\"1\", Class:btn btn-default disabled)\n        }\n        If(#page#>1){\n            Button(Body:Calculate(#prev_page#+1),Class:btn btn-default, Page:#page_name#, PageParams:\"page=#prev_page#\")\n        }\n        If(And(#page#>0,#page#<#last_page#)){\n            Button(Body:Calculate(#page#+1), Class:btn btn-default disabled)\n        }\n        If(#next_page#<#last_page#){\n            Button(Body:Calculate(#next_page#+1),Class:btn btn-default,Page:#page_name#, PageParams:\"page=#next_page#\")\n        }\n        If(#page#<#last_page#){\n            Button(Body:Calculate(#last_page#+1), Class:btn btn-default, Page:#page_name#, PageParams:\"page=#last_page#\")\n        }.ElseIf(#last_page#>0){\n            Button(Body:Calculate(#last_page#+1), Class:btn btn-default disabled)\n        }\n    }\n    Div(panel panel-primary){\n        Div(panel-body){\n            Div(table-responsive){\n                DBFind(tokens,src_tokens).Offset(#off#).Order(id).Custom(_actions){\n                    Div(text-right text-nowrap){\n                        Button(Class: btn btn-info fa fa-eye mr-sm, Page: t_token_view, PageParams: \"Id=#id#\")\n                        Button(Class: btn btn-default fa fa-edit mr-sm, Page: t_token_edit, PageParams: \"Id=#id#\")\n                        Button(Class: btn btn-danger fa fa-trash, Page: t_tokens, Contract: TTokenDelete, Params: \"Id=#id#\").Alert($delete_alert$, $yes$, $no$)\n                    }\n                }\n                Table(src_tokens,\"$t_type$=type,$t_title$=title,$t_amount$=amount,$t_limited$=limited,$t_ecosystem$=ecosystem,$t_type_withdraw$=type_withdraw,=_actions\")\n            }\n        }\n    }\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "TTokenEdit",
            "Conditions": "true",
            "Value": "contract TTokenEdit {\n    data {\n        Id string \"optional\"\n        Type int\n        Title string\n        Amount string\n        Limited int\n        Ecosystem int\n        TypeWithdraw int\n    }\n    conditions {\n        $Id = Int($Id)\n        if $Id > 0{\n            if !DBFind(\"tokens\").Where({id:$Id}).One(\"id\") {\n                warning \"Record not found\"\n            }\n        }\n    }\n    action {\n        var m map\n        m = {type:$Type, title:$Title, amount:$Amount, limited:$Limited, ecosystem:$Ecosystem, type_withdraw:$TypeWithdraw}\n        if $Id > 0{\n            DBUpdate(\"tokens\", $Id, m)\n        }else{\n            DBInsert(\"tokens\", m)\n        }\n    }\n}",
            "Type": "contracts"
        }
    ]
}