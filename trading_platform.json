{
    "name": "Trading Platform",
    "data": [
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "Div(col-md-3 mt-sm text-right){\n    Label(For:Count){LangRes(lots_count)}\n}\nDiv(col-md-9 text-left){\n    If(And(GetVar(TypeId),GetVar(lot_unit_count))){\n        Input(Name:Count, Type:number, Value:#lot_unit_count#)\n    }.ElseIf(GetVar(lot_unit_count)){\n        Div(mt-sm){\n            #lot_unit_count#\n        }\n    }.Else{\n        Input(Name:Count, Type:number)\n    }\n}",
            "Name": "lots_count_block",
            "Type": "blocks"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "Div(col-md-3 mt-sm text-right){\n    Label(){LangRes(lots_dimensions)}\n}\nDiv(col-md-9 text-left){\n    Div(row){\n        Div(col-md-3 mt-sm text-right){\n            Label(For:Length){LangRes(lots_length)}\n        }\n        Div(col-md-9 text-left){\n            If(And(GetVar(TypeId),GetVar(lot_length))){\n                Input(Name:Length, Type:number, Value:#lot_length#)\n            }.ElseIf(GetVar(lot_length)){\n                Div(mt-sm){\n                    #lot_length#\n                }\n            }.Else{\n                Input(Name:Length, Type:number)\n            }\n        }\n    }\n    Div(row){\n        Div(col-md-3 mt-sm text-right){\n            Label(For:Height){LangRes(lots_height)}\n        }\n        Div(col-md-9 text-left){\n            If(And(GetVar(TypeId),GetVar(lot_height))){\n                Input(Name:Height, Type:number, Value:#lot_height#)\n            }.ElseIf(GetVar(lot_height)){\n                Div(mt-sm){\n                    #lot_height#\n                }\n            }.Else{\n                Input(Name:Height, Type:number)\n            }\n        }\n    }\n    Div(row){\n        Div(col-md-3 mt-sm text-right){\n            Label(For:Width){LangRes(lots_width)}\n        }\n        Div(col-md-9 text-left){\n            If(And(GetVar(TypeId),GetVar(lot_width))){\n                Input(Name:Width, Type:number, Value:#lot_width#)\n            }.ElseIf(GetVar(lot_width)){\n                Div(mt-sm){\n                    #lot_width#\n                }\n            }.Else{\n                Input(Name:Width, Type:number)\n            }\n        }\n    }\n}",
            "Name": "lots_dimensions_block",
            "Type": "blocks"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "AppParam(App:#application_id#,Name:lots_weight_types, Source: weight_types)\nDiv(col-md-3 mt-sm text-right){\n    Label(For:Weight){LangRes(lots_weight)}\n}\nDiv(col-md-9 text-left){\n    Div(row){\n        If(And(GetVar(TypeId),GetVar(lot_weight))){\n            Div(col-sm-8){\n                Input(Name:Weight, Type:number, Value:#lot_weight#)\n            }\n            Div(col-sm-4){\n                Select(Name:WeightType, Source:weight_types, NameColumn:name, ValueColumn:id, Value:#lot_weight_type#)\n            }\n        }.ElseIf(GetVar(lot_weight)){\n            Div(col-sm-12 mt-sm){\n                Span(#lot_width#,mr-sm)\n                AppParam(App:#application_id#,Name:lots_weight_types, Index: #lot_weight_type#)\n            }\n        }.Else{\n            Div(col-sm-8){\n                Input(Name:Weight, Type:number)\n            }\n            Div(col-sm-4){\n                Select(Name:WeightType, Source:weight_types, NameColumn:name, ValueColumn:id)\n            }\n        }\n    }\n}",
            "Name": "lots_weight2_block",
            "Type": "blocks"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "Data(weight_types, \"id,name\"){\n    1,$lots_kg$\n    2,$lots_ton$\n}\nDiv(col-md-3 mt-sm text-right){\n    Label(For:Weight){LangRes(lots_weight)}\n}\nDiv(col-md-9 text-left){\n    Div(row){\n        If(And(GetVar(TypeId),GetVar(lot_weight))){\n            Div(col-sm-8){\n                Input(Name:Weight, Type:number, Value:#lot_weight#)\n            }\n            Div(col-sm-4){\n                Select(Name:WeightType, Source:weight_types, NameColumn:name, ValueColumn:id, Value:#lot_weight_type#)\n            }\n        }.ElseIf(GetVar(lot_weight)){\n            Div(col-sm-12 mt-sm){\n                Span(#lot_width#,mr-sm)\n                AppParam(App:#application_id#,Name:lots_weight_types, Index: #lot_weight_type#)\n            }\n        }.Else{\n            Div(col-sm-8){\n                Input(Name:Weight, Type:number)\n            }\n            Div(col-sm-4){\n                Select(Name:WeightType, Source:weight_types, NameColumn:name, ValueColumn:id)\n            }\n        }\n    }\n}",
            "Name": "lots_weight_block",
            "Type": "blocks"
        },
        {
            "Conditions": "ContractAccess(\"@1EditMenu\")",
            "Value": "MenuItem(Title: \"Список лотов\", Page: lots_list, Icon:\"icon-list\")",
            "Name": "default_menu",
            "Type": "menu"
        },
        {
            "Name": "amount_final",
            "Trans": "{\n    \"ru\": \"Конечная сумма\"\n}",
            "Type": "languages"
        },
        {
            "Name": "amount_starting",
            "Trans": "{\n    \"ru\": \"Стартовая сумма\"\n}",
            "Type": "languages"
        },
        {
            "Name": "buyer",
            "Trans": "{\n    \"ru\": \"Покупатель\"\n}",
            "Type": "languages"
        },
        {
            "Name": "date_creation",
            "Trans": "{\n    \"ru\": \"Дата создания\"\n}",
            "Type": "languages"
        },
        {
            "Name": "lot_deleted",
            "Trans": "{\n    \"ru\": \"Лот удалён\"\n}",
            "Type": "languages"
        },
        {
            "Name": "lot_edit",
            "Trans": "{\n    \"ru\": \"Редактировать\"\n}",
            "Type": "languages"
        },
        {
            "Name": "lot_next",
            "Trans": "{\n    \"ru\": \"Далее\"\n}",
            "Type": "languages"
        },
        {
            "Name": "lots_amount_max",
            "Trans": "{\n    \"ru\": \"Текущая максимальная сумма\"\n}",
            "Type": "languages"
        },
        {
            "Name": "lots_back",
            "Trans": "{\n    \"ru\": \"Назад\"\n}",
            "Type": "languages"
        },
        {
            "Name": "lots_bid",
            "Trans": "{\n    \"ru\": \"Сделать ставку\"\n}",
            "Type": "languages"
        },
        {
            "Name": "lots_bidding",
            "Trans": "{\n    \"ru\": \"Идут торги\"\n}",
            "Type": "languages"
        },
        {
            "Name": "lots_cat",
            "Trans": "{\n    \"ru\": \"Категория\"\n}",
            "Type": "languages"
        },
        {
            "Name": "lots_cat01",
            "Trans": "{\"ru\":\"Запорная арматура\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_cat02",
            "Trans": "{\"ru\":\"Трубная продукция\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_cat03",
            "Trans": "{\"ru\":\"Блочное и технологическое оборудование\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_cat04",
            "Trans": "{\"ru\":\"Нефтепромысловое оборудование\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_cat05",
            "Trans": "{\"ru\":\"Металлопрокат\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_cat06",
            "Trans": "{\"ru\":\"КИП и А\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_cat07",
            "Trans": "{\"ru\":\"Химическая продукция и сопутствующие материалы\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_cat08",
            "Trans": "{\"ru\":\"Кабельная продукция\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_cat09",
            "Trans": "{\"ru\":\"Транспорт\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_cat10",
            "Trans": "{\"ru\":\"Материалы административно-хозяйственного назначения\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_cat11",
            "Trans": "{\"ru\":\"Строительные материалы\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_cat12",
            "Trans": "{\"ru\":\"Спецодежда, СИЗ, противопожарное оборудование и материалы\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_cat13",
            "Trans": "{\"ru\":\"Прочее\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_close",
            "Trans": "{\"ru\":\"Закрыть\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_condition",
            "Trans": "{\n    \"ru\": \"Состояние\"\n}",
            "Type": "languages"
        },
        {
            "Name": "lots_contract",
            "Trans": "{\n    \"ru\": \"Договор\"\n}",
            "Type": "languages"
        },
        {
            "Name": "lots_count",
            "Trans": "{\n    \"ru\": \"Количество\"\n}",
            "Type": "languages"
        },
        {
            "Name": "lots_create",
            "Trans": "{\n    \"ru\": \"Создать лот\"\n}",
            "Type": "languages"
        },
        {
            "Name": "lots_date_end",
            "Trans": "{\n    \"ru\": \"Дата окончания торгов\"\n}",
            "Type": "languages"
        },
        {
            "Name": "lots_date_start",
            "Trans": "{\n    \"ru\": \"Дата начала торгов\"\n}",
            "Type": "languages"
        },
        {
            "Name": "lots_delete",
            "Trans": "{\n    \"ru\": \"Удалить лот\"\n}",
            "Type": "languages"
        },
        {
            "Name": "lots_delete_auction",
            "Trans": "{\n    \"ru\": \"Вы действительно хотите удалить аукцион?\"\n}",
            "Type": "languages"
        },
        {
            "Name": "lots_description",
            "Trans": "{\n    \"ru\": \"Описание\"\n}",
            "Type": "languages"
        },
        {
            "Name": "lots_dimensions",
            "Trans": "{\n    \"ru\": \"Габариты\"\n}",
            "Type": "languages"
        },
        {
            "Name": "lots_edit",
            "Trans": "{\n    \"ru\": \"Редактирование лота\"\n}",
            "Type": "languages"
        },
        {
            "Name": "lots_height",
            "Trans": "{\n    \"ru\": \"Высота\"\n}",
            "Type": "languages"
        },
        {
            "Name": "lots_kg",
            "Trans": "{\n    \"ru\": \"килограмм\"\n}",
            "Type": "languages"
        },
        {
            "Name": "lots_length",
            "Trans": "{\n    \"ru\": \"Длина\"\n}",
            "Type": "languages"
        },
        {
            "Name": "lots_list",
            "Trans": "{\n    \"ru\": \"Список лотов\"\n}",
            "Type": "languages"
        },
        {
            "Name": "lots_liter",
            "Trans": "{\n    \"ru\": \"литр\"\n}",
            "Type": "languages"
        },
        {
            "Name": "lots_location",
            "Trans": "{\n    \"ru\": \"Местонахождение\"\n}",
            "Type": "languages"
        },
        {
            "Name": "lots_name",
            "Trans": "{\n    \"ru\": \"Название\"\n}",
            "Type": "languages"
        },
        {
            "Name": "lots_new",
            "Trans": "{\n    \"ru\": \"новое\"\n}",
            "Type": "languages"
        },
        {
            "Name": "lots_no",
            "Trans": "{\n    \"ru\": \"Нет\"\n}",
            "Type": "languages"
        },
        {
            "Name": "lots_not_found",
            "Trans": "{\n    \"ru\": \"Лоты не найдены\"\n}",
            "Type": "languages"
        },
        {
            "Name": "lots_old",
            "Trans": "{\n    \"ru\": \"б/у\"\n}",
            "Type": "languages"
        },
        {
            "Name": "lots_photo",
            "Trans": "{\n    \"ru\": \"Фотография\"\n}",
            "Type": "languages"
        },
        {
            "Name": "lots_rejected",
            "Trans": "{\"ru\":\"Отклонен\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_save",
            "Trans": "{\n    \"ru\": \"Сохранить\"\n}",
            "Type": "languages"
        },
        {
            "Name": "lots_select_cat",
            "Trans": "{\n    \"ru\": \"Выбор категории\"\n}",
            "Type": "languages"
        },
        {
            "Name": "lots_select_type",
            "Trans": "{\n    \"ru\": \"Выбор вида\"\n}",
            "Type": "languages"
        },
        {
            "Name": "lots_signed",
            "Trans": "{\n    \"ru\": \"Торги завершены, подпись получена\"\n}",
            "Type": "languages"
        },
        {
            "Name": "lots_status",
            "Trans": "{\n    \"ru\": \"Статус\"\n}",
            "Type": "languages"
        },
        {
            "Name": "lots_subscribe",
            "Trans": "{\n    \"ru\": \"Подписаться\"\n}",
            "Type": "languages"
        },
        {
            "Name": "lots_ton",
            "Trans": "{\n    \"ru\": \"тонна\"\n}",
            "Type": "languages"
        },
        {
            "Name": "lots_type",
            "Trans": "{\n    \"ru\": \"Вид\"\n}",
            "Type": "languages"
        },
        {
            "Name": "lots_type01",
            "Trans": "{\"ru\":\"АРМАТУРА ПРОМЫШЛЕННАЯ ТРУБОПРОВОДНАЯ\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_type02",
            "Trans": "{\"ru\":\"ДЕТАЛИ ТРУБОПРОВОДОВ\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_type03",
            "Trans": "{\"ru\":\"ПРОДУКЦИЯ ТРУБНАЯ\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_type04",
            "Trans": "{\"ru\":\"З/Ч И КОМПЛЕКТУЮЩИЕ К ОБОР. ТЕХНОЛОГИЧ.\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_type05",
            "Trans": "{\"ru\":\"ОБОРУДОВАНИЕ БЛОЧНОЕ НЕФТЕПРОМЫСЛОВОЕ\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_type06",
            "Trans": "{\"ru\":\"ОБОРУДОВАНИЕ ТЕХНОЛОГИЧЕСКОЕ\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_type07",
            "Trans": "{\"ru\":\"З/Ч К БУРОВОМУ ОБОРУДОВАНИЮ, ИНСТРУМЕНТУ\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_type08",
            "Trans": "{\"ru\":\"З/Ч К НЕФТЕПРОМЫСЛОВОМУ И ПОГРУЖ.ОБОРУД.\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_type09",
            "Trans": "{\"ru\":\"ИНСТРУМЕНТ ЛОВИЛЬНЫЙ, КРС И З/Ч К НЕМУ\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_type10",
            "Trans": "{\"ru\":\"ОБОРУД-НИЕ И ИНСТР.БУРОВОЙ, ТЕХ.ОСНАСТКА\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_type11",
            "Trans": "{\"ru\":\"ОБОРУД-НИЕ НЕФТЕПРОМЫСЛОВОЕ, НЕФТЕПОГРУЖ\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_type12",
            "Trans": "{\"ru\":\"ОБОРУДОВАНИЕ И ЗАПЧАСТИ ДЛЯ ГЕОФИЗИКИ\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_type13",
            "Trans": "{\"ru\":\"ЗАПЧАСТИ И КОМПЛЕКТУЮЩИЕ К ТЕХНИКЕ\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_type14",
            "Trans": "{\"ru\":\"МЕТАЛЛОИЗДЕЛИЯ ПРОМЫШЛЕННОГО НАЗНАЧЕНИЯ\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_type15",
            "Trans": "{\"ru\":\"ПРОКАТ ЦВЕТНЫХ МЕТАЛЛОВ\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_type16",
            "Trans": "{\"ru\":\"ПРОКАТ ЧЕРНЫХ МЕТАЛЛОВ\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_type17",
            "Trans": "{\"ru\":\"ОБЕСПЕЧЕНИЕ ПРОГРАММНОЕ\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_type18",
            "Trans": "{\"ru\":\"СРЕДСТВА АСУТП\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_type19",
            "Trans": "{\"ru\":\"СРЕДСТВА КОММУНИКАЦИИ И СВЯЗИ\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_type20",
            "Trans": "{\"ru\":\"ПРИБОРЫ И СРЕДСТВА АВТОМАТИЗАЦИИ\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_type21",
            "Trans": "{\"ru\":\"ТЕХНИКА ВЫЧИСЛИТЕЛЬНАЯ\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_type22",
            "Trans": "{\"ru\":\"ОБОРУДОВАНИЕ, ПРИБОРЫ, ЛАБОРАТОРНЫЕ\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_type23",
            "Trans": "{\"ru\":\"ПОЛИМЕРЫ, ПЛАСТИЧ. МАССЫ, ХИМИЧ. ВОЛОКНА\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_type24",
            "Trans": "{\"ru\":\"ПОСУДА, МАТЕРИАЛЫ ВСПОМ-НЫЕ ЛАБОРАТОРНЫЕ\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_type25",
            "Trans": "{\"ru\":\"РЕАКТИВЫ ХИМИЧЕСКИЕ ДЛЯ АНАЛИЗОВ\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_type26",
            "Trans": "{\"ru\":\"ХИМПРОДУКЦИЯ\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_type27",
            "Trans": "{\"ru\":\"ПРОДУКЦИЯ КАБЕЛЬНАЯ\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_type28",
            "Trans": "{\"ru\":\"ТЕХНИКА ТРАНСПОРТНАЯ\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_type29",
            "Trans": "{\"ru\":\"ИЗД. КУЛЬТУРНО-БЫТ. НАЗН. И ХОЗ. ОБИХОДА\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_type30",
            "Trans": "{\"ru\":\"КАНЦТОВАРЫ, ОФИСНАЯ ТЕХН., ПРОД.БУМАЖНАЯ\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_type31",
            "Trans": "{\"ru\":\"МЕБЕЛЬ\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_type32",
            "Trans": "{\"ru\":\"ПРОДУКЦИЯ ПОЛИГРАФИЧЕСКОЙ ПРОМЫШЛЕННОСТИ\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_type33",
            "Trans": "{\"ru\":\"ИНСТРУМЕНТ, МАТЕРИАЛЫ АБРАЗИВНЫЕ\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_type34",
            "Trans": "{\"ru\":\"КРЕПЕЖНЫЕ ИЗДЕЛИЯ ОБЩЕМАШИНОСТРОИТЕЛЬН.\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_type35",
            "Trans": "{\"ru\":\"МАТЕРИАЛЫ ОГНЕУП., ТЕРМОИЗОЛЯЦ., СТРОИТ.\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_type36",
            "Trans": "{\"ru\":\"ОБОРУДОВАНИЕ ПРОТИВОПОЖАРНОЕ\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_type37",
            "Trans": "{\"ru\":\"СПЕЦОДЕЖДА, СПЕЦОБУВЬ И ДРУГИЕ СИЗ\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_type38",
            "Trans": "{\"ru\":\"СРЕДСТВА АВАРИЙНО-СПАСАТ. И МЕДИЦИНСКИЕ\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_type39",
            "Trans": "{\"ru\":\"МАШИНЫ ЭЛЕКТРИЧЕСКИЕ\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_type40",
            "Trans": "{\"ru\":\"ОБОРУД-ИЕ И МАТЕРИАЛЫ ЭЛЕКТРОТЕХНИЧЕСКИЕ\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_type41",
            "Trans": "{\"ru\":\"ЗАПЧАСТИ К ОБОРУДОВАНИЮ МЕХАНИЧЕСКОМУ\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_type42",
            "Trans": "{\"ru\":\"ОБОРУДОВАНИЕ МЕХАНИЧЕСКОЕ\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_type43",
            "Trans": "{\"ru\":\"ПОДШИПНИКИ КАЧЕНИЯ\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_type44",
            "Trans": "{\"ru\":\"ПРОДУКЦИЯ РЕЗИНОТЕХНИЧЕСКАЯ И АСБЕСТОВАЯ\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_type45",
            "Trans": "{\"ru\":\"ПРОДУКЦИЯ ТЕКСТИЛЬН. - ТКАНИ И МАТЕРИАЛЫ\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_unsubscribe",
            "Trans": "{\"ru\":\"Отписаться\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_view",
            "Trans": "{\n    \"ru\": \"Просмотр лота\"\n}",
            "Type": "languages"
        },
        {
            "Name": "lots_view_info",
            "Trans": "{\n    \"ru\": \"Подробности лота\"\n}",
            "Type": "languages"
        },
        {
            "Name": "lots_waiting_approval",
            "Trans": "{\"ru\":\"Ожидает подтверждения\"}",
            "Type": "languages"
        },
        {
            "Name": "lots_waiting_for_sign",
            "Trans": "{\n    \"ru\": \"Торги завершены, ожидание подписи\"\n}",
            "Type": "languages"
        },
        {
            "Name": "lots_waiting_for_start",
            "Trans": "{\n    \"ru\": \"Ожидание начала торгов\"\n}",
            "Type": "languages"
        },
        {
            "Name": "lots_weight",
            "Trans": "{\n    \"ru\": \"Вес\"\n}",
            "Type": "languages"
        },
        {
            "Name": "lots_width",
            "Trans": "{\n    \"ru\": \"Ширина\"\n}",
            "Type": "languages"
        },
        {
            "Name": "lots_yes",
            "Trans": "{\n    \"ru\": \"Да\"\n}",
            "Type": "languages"
        },
        {
            "Name": "order_max",
            "Trans": "{\n    \"ru\": \"Максимальная ставка\"\n}",
            "Type": "languages"
        },
        {
            "Name": "order_min",
            "Trans": "{\n    \"ru\": \"Минимальная ставка\"\n}",
            "Type": "languages"
        },
        {
            "Name": "photo",
            "Trans": "{\n    \"ru\": \"Фото\"\n}",
            "Type": "languages"
        },
        {
            "Name": "platform_requests",
            "Trans": "{\"ru\":\"Запросы на регистрацию\"}",
            "Type": "languages"
        },
        {
            "Name": "platform_session",
            "Trans": "{\"ru\":\"Вы уже вошли как участник торгов!\"}",
            "Type": "languages"
        },
        {
            "Name": "platform_singup",
            "Trans": "{\"ru\":\"Регистрация\"}",
            "Type": "languages"
        },
        {
            "Name": "seller",
            "Trans": "{\n    \"ru\": \"Продавец\"\n}",
            "Type": "languages"
        },
        {
            "Name": "buyers",
            "Columns": "[{\"conditions\":\"true\",\"name\":\"amount\",\"type\":\"money\"},{\"conditions\":\"true\",\"name\":\"lot_id\",\"type\":\"number\"},{\"conditions\":\"ContractAccess(\\\"lots_Sign\\\")\",\"name\":\"status\",\"type\":\"number\"},{\"conditions\":\"true\",\"name\":\"buyer_id\",\"type\":\"number\"}]",
            "Permissions": "{\"insert\": \"true\", \"update\": \"true\", \"new_column\": \"true\"}",
            "Type": "tables"
        },
        {
            "Name": "lots",
            "Columns": "[{\"conditions\":\"true\",\"name\":\"amount_final\",\"type\":\"money\"},{\"conditions\":\"true\",\"name\":\"date_creation\",\"type\":\"datetime\"},{\"conditions\":\"true\",\"name\":\"length\",\"type\":\"number\"},{\"conditions\":\"true\",\"name\":\"order_min\",\"type\":\"money\"},{\"conditions\":\"true\",\"name\":\"date_start\",\"type\":\"datetime\"},{\"conditions\":\"true\",\"name\":\"width\",\"type\":\"number\"},{\"conditions\":\"true\",\"name\":\"seller\",\"type\":\"number\"},{\"conditions\":\"true\",\"name\":\"comment\",\"type\":\"text\"},{\"conditions\":\"true\",\"name\":\"location\",\"type\":\"text\"},{\"conditions\":\"true\",\"name\":\"unit_count\",\"type\":\"number\"},{\"conditions\":\"true\",\"name\":\"description\",\"type\":\"text\"},{\"conditions\":\"true\",\"name\":\"weight_type\",\"type\":\"number\"},{\"conditions\":\"true\",\"name\":\"type_bargain\",\"type\":\"number\"},{\"conditions\":\"true\",\"name\":\"name\",\"type\":\"text\"},{\"conditions\":\"true\",\"name\":\"buyer\",\"type\":\"number\"},{\"conditions\":\"true\",\"name\":\"weight\",\"type\":\"number\"},{\"conditions\":\"true\",\"name\":\"amount_starting\",\"type\":\"money\"},{\"conditions\":\"true\",\"name\":\"height\",\"type\":\"number\"},{\"conditions\":\"true\",\"name\":\"condition\",\"type\":\"number\"},{\"conditions\":\"true\",\"name\":\"amount_max\",\"type\":\"money\"},{\"conditions\":\"true\",\"name\":\"lots_type_id\",\"type\":\"number\"},{\"conditions\":\"true\",\"name\":\"status\",\"type\":\"number\"},{\"conditions\":\"true\",\"name\":\"deleted\",\"type\":\"number\"},{\"conditions\":\"true\",\"name\":\"date_end\",\"type\":\"datetime\"},{\"conditions\":\"true\",\"name\":\"contract_id\",\"type\":\"number\"},{\"conditions\":\"true\",\"name\":\"photo\",\"type\":\"number\"},{\"conditions\":\"true\",\"name\":\"category\",\"type\":\"number\"},{\"conditions\":\"true\",\"name\":\"order_max\",\"type\":\"money\"}]",
            "Permissions": "{\"insert\": \"true\", \"update\": \"true\", \"new_column\": \"true\"}",
            "Type": "tables"
        },
        {
            "Name": "lots_tracks",
            "Columns": "[{\"conditions\":\"true\",\"name\":\"lot_id\",\"type\":\"number\"},{\"conditions\":\"true\",\"name\":\"deleted\",\"type\":\"number\"},{\"conditions\":\"true\",\"name\":\"key_id\",\"type\":\"number\"}]",
            "Permissions": "{\"insert\": \"true\", \"update\": \"true\", \"new_column\": \"ContractConditions(\\\"MainCondition\\\")\"}",
            "Type": "tables"
        },
        {
            "Name": "lots_types",
            "Columns": "[{\"conditions\":\"true\",\"name\":\"deleted\",\"type\":\"number\"},{\"conditions\":\"true\",\"name\":\"category\",\"type\":\"number\"},{\"conditions\":\"true\",\"name\":\"lots_params\",\"type\":\"varchar\"},{\"conditions\":\"true\",\"name\":\"resource_name\",\"type\":\"varchar\"}]",
            "Permissions": "{\"insert\": \"true\", \"update\": \"true\", \"new_column\": \"true\"}",
            "Type": "tables"
        },
        {
            "Name": "platform_requests",
            "Columns": "[{\"conditions\":\"true\",\"name\":\"role\",\"type\":\"text\"},{\"conditions\":\"true\",\"name\":\"name_first\",\"type\":\"text\"},{\"conditions\":\"true\",\"name\":\"company_position\",\"type\":\"text\"},{\"conditions\":\"true\",\"name\":\"status\",\"type\":\"number\"},{\"conditions\":\"true\",\"name\":\"member_id\",\"type\":\"number\"},{\"conditions\":\"true\",\"name\":\"name_last\",\"type\":\"text\"},{\"conditions\":\"true\",\"name\":\"member_name\",\"type\":\"text\"},{\"conditions\":\"true\",\"name\":\"name_middle\",\"type\":\"text\"},{\"conditions\":\"true\",\"name\":\"company_name\",\"type\":\"text\"}]",
            "Permissions": "{\"insert\": \"ContractConditions(\\\"platform_Singup\\\")\", \"update\": \"ContractConditions(\\\"MainCondition\\\")\", \"new_column\": \"ContractConditions(\\\"MainCondition\\\")\"}",
            "Type": "tables"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "Торг с повышением цен,Торг с фиксированной ценой",
            "Name": "bargain_type",
            "Type": "app_params"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "lots_cat01,lots_cat02,lots_cat03,lots_cat04,lots_cat05,lots_cat06,lots_cat07,lots_cat08,lots_cat09,lots_cat10,lots_cat11,lots_cat12,lots_cat13",
            "Name": "lots_categories",
            "Type": "app_params"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "lots_new,lots_old",
            "Name": "lots_condition",
            "Type": "app_params"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "lots_dimensions_block,lots_weight_block,lots_weight2_block,lots_count_block",
            "Name": "lots_params",
            "Type": "app_params"
        },
        {
            "Conditions": "true",
            "Value": "lots_waiting_approval,lots_waiting_for_start,lots_bidding,lots_waiting_for_sign,lots_signed,lots_rejected",
            "Name": "lots_status",
            "Type": "app_params"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "lots_kg,lots_ton,lots_liter",
            "Name": "lots_weight_types",
            "Type": "app_params"
        },
        {
            "Conditions": "true",
            "Value": "DBFind(applications).Columns(\"id\").Where(\"name='Trading Platform' AND deleted=0\").Vars(application)\r\nSetVar(title, $lots_create$).(name,).(description,).(amount_starting,).(order_min,).(order_max,).(date_start,).(date_end,).(time_start,).(time_end,).(contract_text,).(unit_count,).(weight,).(weight_type,).(length,).(width,).(height,).(location,).(condition,)\r\n\r\nSetVar(Action,\"create\").(BtnBody,LangRes(lots_create))\r\nIf(GetVar(Id)){\r\n    SetVar(Action,\"edit\").(BtnBody,LangRes(lots_save))\r\n\r\n    DBFind(lots, src_lots).Where(\"id=#Id#\").Vars(lot)\r\n    SetVar(title, $lots_edit$)\r\n    SetVar(name, #lot_name#)\r\n    SetVar(description, #lot_description#)\r\n    SetVar(amount_starting, Money(#lot_amount_starting#))\r\n    SetVar(order_min, Money(#lot_order_min#))\r\n    SetVar(order_max, Money(#lot_order_max#))\r\n    SetVar(date_start, DateTime(#lot_date_start#, YYYY-MM-DD))\r\n    SetVar(date_end, DateTime(#lot_date_end#, YYYY-MM-DD))\r\n    SetVar(time_start, DateTime(#lot_date_start#, HH:MI))\r\n    SetVar(time_end, DateTime(#lot_date_end#, HH:MI))\r\n    SetVar(contract_text,Binary().ById(#lot_contract_id#))\r\n    SetVar(unit_count,#lot_unit_count#)\r\n    SetVar(weight,#lot_weight#)\r\n    SetVar(weight_type,#lot_weight_type#)\r\n    SetVar(length,#lot_length#)\r\n    SetVar(width,#lot_width#)\r\n    SetVar(height,#lot_height#)\r\n    SetVar(location,#lot_location#)\r\n    SetVar(condition,#lot_condition#)\r\n    SetVar(type_bargain,#lot_type_bargain#)\r\n    SetVar(TypeId,#lot_lots_type_id#)\r\n    SetVar(CatId,#lot_category#)\r\n}\r\n\r\n\r\nDiv(content-wrapper){\r\n    If(GetVar(TypeId)){\r\n        SetTitle(#title#)\r\n        Div(breadcrumb){\r\n            LinkPage($lots_list$, lots_list)\r\n            Span(/,mh)\r\n            Span(Class: text-muted, Body: #title#)\r\n        }\r\n\r\n        Div(row){\r\n            Div(col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3){\r\n                Form(panel panel-primary){\r\n                    DBFind(lots_types,src_type).Where(\"deleted=0 and id=#TypeId#\").Vars(type)\r\n\r\n                    Div(panel-heading){#title#}\r\n                    Div(panel-body){\r\n                        If(GetVar(Id)) {\r\n                            Input(Name: Id, Type: hidden, Value: #Id#)\r\n                        }\r\n                        Div(list-group-item){\r\n                            Div(row mt-sm){\r\n                                Div(col-md-3 mt-sm text-right){\r\n                                    Strong(LangRes(lots_cat))\r\n                                }\r\n                                Div(col-md-9 text-left mt-sm){\r\n                                    AppParam(App: #application_id#, Name: lots_categories, Index: #CatId#)\r\n                                }\r\n                            }\r\n                            Div(row mt-sm){\r\n                                Div(col-md-3 mt-sm text-right){\r\n                                    Strong(LangRes(lots_type))\r\n                                }\r\n                                Div(col-md-9 text-left mt-sm){\r\n                                    ForList(src_type){\r\n                                        LangRes(#resource_name#)\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        Div(list-group-item){\r\n                            Div(row mt-sm){\r\n                                Div(col-md-3 mt-sm text-right){\r\n                                    Label(For: Name){LangRes(lots_name)}\r\n                                }\r\n                                Div(col-md-9 text-left){\r\n                                    Input(Name: Name, Value: #name#)\r\n                                }\r\n                            }\r\n                            Div(row mt-sm){\r\n                                Div(col-md-3 mt-sm text-right){\r\n                                    Label(For: Description){LangRes(lots_description)}\r\n                                }\r\n                                Div(col-md-9 text-left){\r\n                                    Input(Name: Description, Type: textarea, Value: #description#)\r\n                                }\r\n                            }\r\n                            Div(row mt-sm){\r\n                                Div(col-md-3 mt-sm text-right){\r\n                                    Label(For: Photo){LangRes(lots_photo)}\r\n                                }\r\n                                Div(col-md-9 text-left){\r\n                                    Input(Name: Photo, Type: file)\r\n                                }\r\n                            }\r\n                            If(#lot_contract_id#>0){\r\n                                Div(row mt-sm){\r\n                                    Div(col-md-3 mt-sm text-right){\r\n                                        Label(For: LotContract){LangRes(lots_contract)}\r\n                                    }\r\n                                    Div(col-md-9 mt-sm text-left){\r\n                                        #contract_text#\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            Div(row mt-sm){\r\n                                Div(col-md-3 mt-sm text-right){\r\n                                    Label(For:){LangRes(lots_location)}\r\n                                }\r\n                                Div(col-md-9 text-left mt-sm){\r\n                                    Input(Name: Location, Value: #location#)\r\n                                }\r\n                            }\r\n                            Div(row mt-sm){\r\n                                Div(col-md-3 mt-sm text-right){\r\n                                    Label(For:){LangRes(lots_condition)}\r\n                                }\r\n                                Div(col-md-9 text-left mt-sm){\r\n                                    AppParam(App:#application_id#, Name:lots_condition, Source:src_condition)\r\n                                    RadioGroup(Name: Condition, Value:#condition#, ValueColumn: id, NameColumn: name, Source: src_condition)\r\n                                }\r\n                            }\r\n                            ArrayToSource(type_blocks, [#type_lots_params#])\r\n                            ForList(type_blocks){\r\n                                Div(row mt-sm){\r\n                                    SetVar(block,AppParam(App:#application_id#, Name:lots_params, Index:#value#))\r\n                                    If(#block#==\"lots_count_block\"){\r\n                                        Include(lots_count_block)\r\n                                    }.ElseIf(#block#==\"lots_dimensions_block\"){\r\n                                        Include(lots_dimensions_block)\r\n                                    }.ElseIf(#block#==\"lots_weight_block\"){\r\n                                        Include(lots_weight_block)\r\n                                    }.ElseIf(#block#==\"lots_weight2_block\"){\r\n                                        Include(lots_weight2_block)\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                        }\r\n                        Div(list-group-item){\r\n                            Div(row mt-sm){\r\n                                Div(col-md-3 mt-sm text-right){\r\n                                    Label(For: DateStart){LangRes(lots_date_start)}\r\n                                }\r\n                                Div(col-md-9 text-left){\r\n                                    Div(row){\r\n                                        Div(col-md-6){\r\n                                            Input(Name: DateStart, Type: date, Value: #date_start#)\r\n                                        }\r\n                                        Div(col-md-6){\r\n                                            Input(Name: TimeStart, Type: time, Value: #time_start#)\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            Div(row mt-sm){\r\n                                Div(col-md-3 mt-sm text-right){\r\n                                    Label(For: DateEnd){LangRes(lots_date_end)}\r\n                                }\r\n                                Div(col-md-9 text-left){\r\n                                    Div(row){\r\n                                        Div(col-md-6){\r\n                                            Input(Name: DateEnd, Type: date, Value: #date_end#)\r\n                                        }\r\n                                        Div(col-md-6){\r\n                                            Input(Name: TimeEnd, Type: time, Value: #time_end#)\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        Div(list-group-item){\r\n                            Div(row mt-sm){\r\n                                Div(col-md-3 mt-sm text-right){\r\n                                    Label(For:){\"Тип торга\"}\r\n                                }\r\n                                Div(col-md-9 text-left){\r\n                                    AppParam(App:#application_id#, Name:bargain_type, Source:src_bargain_type)\r\n                                    RadioGroup(Name:TypeBargain,Value:#type_bargain#,NameColumn:name,ValueColumn:id,Source: src_bargain_type)\r\n                                }\r\n                            }\r\n                            Div(row mt-sm){\r\n                                Div(col-md-3 mt-sm text-right){\r\n                                    Label(For: AmountStarting){LangRes(amount_starting)}\r\n                                }\r\n                                Div(col-md-9 text-left){\r\n                                    Input(Name: AmountStarting, Type: number, Value: #amount_starting#)\r\n                                }\r\n                            }\r\n                            Div(row mt-sm){\r\n                                Div(col-md-3 mt-sm text-right){\r\n                                    Label(For: OrderMin){LangRes(order_min)}\r\n                                }\r\n                                Div(col-md-9 text-left){\r\n                                    Input(Name: OrderMin, Type: number, Value: #order_min#)\r\n                                }\r\n                            }\r\n                            Div(row mt-sm){\r\n                                Div(col-md-3 mt-sm text-right){\r\n                                    Label(For: OrderMax){LangRes(order_max)}\r\n                                }\r\n                                Div(col-md-9 text-left){\r\n                                    Input(Name: OrderMax, Type: number, Value: #order_max#)\r\n                                }\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                    Div(panel-footer text-right){\r\n                        If(GetVar(Id)) {\r\n                            Button(Body: $lots_back$, Class: btn btn-default pull-left, Page: lots_list)\r\n                        }.Else{\r\n                            Button(Body: $lots_back$, Class: btn btn-default pull-left hidden-lg, Page: lots_edit, PageParams: \"CatId=#CatId#\").Popup(Width: 50, Header: \"Выбор вида\")\r\n                            Button(Body: $lots_back$, Class: btn btn-default pull-left hidden-sm hidden-md hidden-xs, Page: lots_edit, PageParams: \"CatId=#CatId#\").Popup(Width: 40, Header: \"Выбор вида\")\r\n                        }\r\n                        Button(Body: #BtnBody#, Class: btn btn-primary, Contract: lots_SellerAction, Page: lots_list, Params: \"Action=#Action#,TypeId=#TypeId#\")\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }.Else{\r\n        If(GetVar(CatId)){\r\n            SetVar(Cat,AppParam(App: #application_id#, Name: lots_categories, Index: #CatId#))\r\n            DBFind(lots_types,src_types).Where(\"deleted=0 and category=#CatId#\")\r\n            Div(text-center form-group){\r\n                ForList(src_types){\r\n                    Button(Body: LangRes(#resource_name#), Class: btn btn-primary btn-block mr-sm mb-sm, Page: lots_edit, PageParams: \"TypeId=#id#,CatId=#CatId#\")\r\n                }\r\n            }\r\n            Div(text-left){\r\n                Button(Body: $lots_back$, Class: btn btn-default hidden-lg, Page: lots_edit).Popup(Width: 50, Header: \"Выбор категории\")\r\n                Button(Body: $lots_back$, Class: btn btn-default hidden-sm hidden-md hidden-xs, Page: lots_edit).Popup(Width: 40, Header: \"Выбор категории\")\r\n            }\r\n        }.Else{\r\n            AppParam(App: #application_id#, Name: lots_categories, Source: src_cats)\r\n            Div(text-center form-group){\r\n                ForList(src_cats){\r\n                    Button(Body: #name#, Class: btn btn-primary btn-block mr-sm mb-sm hidden-lg, Page: lots_edit, PageParams: \"CatId=#id#\").Popup(Width: 50, Header: \"Выбор вида\")\r\n                    Button(Body: #name#, Class: btn btn-primary btn-block mr-sm mb-sm hidden-sm hidden-md hidden-xs, Page: lots_edit, PageParams: \"CatId=#id#\").Popup(Width: 40, Header: \"Выбор вида\")\r\n                }\r\n            }\r\n            Div(text-left){\r\n                Button(Body: $lots_back$, Class: btn btn-default, Page: lots_list)\r\n            }\r\n        }\r\n    }\r\n}",
            "Name": "lots_edit",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Conditions": "true",
            "Value": "DBFind(applications).Columns(\"id\").Where(\"name='Trading Platform' AND deleted=0\").Vars(application)\r\nDBFind(roles).Where(\"id=#role_id#\").Columns(\"role_name\").Vars(r)\r\nSetTitle($lots_list$)\r\nDiv(content-wrapper){\r\n    Div(breadcrumb){\r\n        Span(Class: text-muted, Body: $lots_list$)\r\n        If(#r_role_name#==\"Seller\"){\r\n            Button(Body: Span(Class:icon-plus) $lots_create$, Page: lots_edit, Class: btn btn-link pull-right hidden-sm hidden-md hidden-xs).Popup(Width: 40, Header: \"Выбор категории\")\r\n            Button(Body: Span(Class:icon-plus) $lots_create$, Page: lots_edit, Class: btn btn-link pull-right hidden-lg).Popup(Width: 50, Header: \"Выбор категории\")\r\n        }\r\n    }\r\n\r\n    SetVar(Where,\"deleted=0\").(rejected_status,5)\r\n    If(GetVar(Search)){\r\n        If(GetVar(Status)!=\"\"){\r\n            SetVar(Where,\"#Where# and name='#Search#' and status=#Status#\")\r\n        }.Else{\r\n            SetVar(Where,\"#Where# and name='#Search#'\")\r\n        }\r\n    }.Else{\r\n        If(GetVar(Status)!=\"\"){\r\n            SetVar(Where,\"#Where# and status=#Status#\")\r\n        }\r\n        SetVar(Search,)\r\n    }\r\n\r\n    Div(text-right){\r\n        Data(status_icons, \"Icon\"){\r\n            fa fa-question\r\n            fa fa-hourglass-start\r\n            fa fa-hourglass-half\r\n            fa fa-hourglass-end\r\n            fa fa-check\r\n            fa fa-times\r\n        }\r\n\r\n        If(GetVar(Status)!=\"\"){\r\n            Button(Class: fa fa-times mr-sm btn bg-danger, Page: lots_list)\r\n        }\r\n        ForList(status_icons){\r\n            SetVar(status,Calculate(#status_icons_index#-1))\r\n            If(#Status#==#status#){\r\n                Button(Class: #Icon# mr-sm btn bg-gray-lighter, Page: lots_list, PageParams: \"Status=#status#,Search=#Search#\")\r\n            }.Else{\r\n                Button(Class: #Icon# mr-sm btn bg-gray, Page: lots_list, PageParams: \"Status=#status#,Search=#Search#\")\r\n            }\r\n        }\r\n    }.Style(div {display:inline-block;})\r\n\r\n    Form(panel panel-primary){\r\n        Div(panel-body){\r\n            Div(row){\r\n                Div(col-md-12){\r\n                    Div(input-group){\r\n                        Div(input-group-addon){\r\n                            \"Название\"\r\n                        }\r\n                        Input(Name: Search, Value: #Search#)\r\n                        Div(input-group-btn){\r\n                            Button(Class: fa fa-search btn btn-default, Page: lots_list, PageParams: \"Search=Val(Search)\")\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            DBFind(lots, src_lots).Where(\"#Where#\").Count(lots_count).Limit(50).Custom(_name){\r\n                Div(text-left){\r\n                    LinkPage(Class: text-primary h5 text-bold, Page: lots_view, PageParams: \"Id=#id#\", Body: #name#)\r\n                }\r\n            }.Custom(_photo){\r\n                Image(Src: Binary().ById(#photo#), Class:photo)\r\n            }.Custom(_seller){\r\n                Div(text-nowrap){\r\n                    DBFind(members).Columns(\"id,member_name,image_id\").Where(\"id=#seller#\").Vars(seller)\r\n                    If(Or(#seller_id#>0,#seller_id#<0)){\r\n                    }.Else{\r\n                        SetVar(seller_member_name,Address(#seller#))\r\n                    }\r\n                    LinkPage(Class: center text-primary h5 text-bold, Page: profile_view, PageParams: \"v_member_id=#seller#\"){\r\n                        If(#seller_image_id#>0){\r\n                            Image(Src: Binary().ById(#seller_image_id#), Class: img-circle mr)\r\n                        }.Else{\r\n                            Div(Class: fa icon-user fa-2x mr)\r\n                        }\r\n                        Div(){#seller_member_name#}\r\n                    }\r\n                }\r\n            }.Custom(_date_creation){\r\n                DateTime(#date_creation#, DD.MM.YYYY)\r\n            }.Custom(_date_start){\r\n                DateTime(#date_start#, DD.MM.YYYY)\r\n            }.Custom(_date_end){\r\n                DateTime(#date_end#, DD.MM.YYYY)\r\n            }.Custom(_amount_starting){\r\n                Money(#amount_starting#)\r\n            }.Custom(_amount_final){\r\n                If(#type_bargain# == 2){\r\n                    Money(#amount_starting#)\r\n                }.Else{\r\n                    Money(#amount_final#)\r\n                }\r\n            }.Custom(_status){\r\n                SetVar(status_index, Calculate(#status# + 1))\r\n                If(#status_index#==5){\r\n                    SetVar(status_class,text-success)\r\n                }.ElseIf(#status_index#==6){\r\n                    SetVar(status_class,text-danger)\r\n                }.ElseIf(#status_index#==1){\r\n                    SetVar(status_class,text-muted)\r\n                }.Else{\r\n                    SetVar(status_class,text-warning)\r\n                }\r\n                Div(#status_class#){\r\n                    AppParam(App: #application_id#, Name: lots_status, Index: #status_index#)\r\n                }\r\n            }.Custom(_actions){\r\n                SetVar(track_id,)\r\n                DBFind(lots_tracks).Where(\"lot_id=#id# and key_id=#key_id# and deleted=0\").Vars(track)\r\n                Div(text-right text-nowrap){\r\n                    If(#r_role_name#==\"Buyer\"){\r\n                        If(And(#status#>1,#status#<#rejected_status#)){\r\n                            Button(Class: btn btn-primary, Body: $lots_bid$, Page: lots_view,PageParams:\"Id=#id#\")\r\n                        }.ElseIf(#status#==1){\r\n                            If(#track_id#>0){\r\n                                Button(Class: btn btn-default, Body: $lots_unsubscribe$, Page: lots_list, Contract: lots_BuyerAction, Params: \"Action=track_reject,Id=#id#\")\r\n                            }.Else{\r\n                                Button(Class: btn btn-primary, Body: $lots_subscribe$, Page: lots_list, Contract: lots_BuyerAction, Params: \"Action=track_accept,Id=#id#\")\r\n                            }\r\n                        }\r\n                    }.ElseIf(And(#seller#==#key_id#,#r_role_name#==\"Seller\")){\r\n                        If(#status#<1){\r\n                            Button(Class: btn btn-default fa fa-edit mr-sm, Page: lots_edit, PageParams: \"Id=#id#\")\r\n                            Button(Class: btn btn-danger fa fa-trash, Page: lots_list, Contract: lots_Delete, Params: \"Id=#id#\").Alert($lots_delete_auction$, $lots_yes$, $lots_no$)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            Div(row){\r\n                Div(col-md-12){\r\n                    If(#lots_count#>0){\r\n                        Div(table-responsive){\r\n                            Table(src_lots,\"ID=id,$lots_name$=_name,$photo$=_photo,$seller$=_seller,$date_creation$=_date_creation,$lots_date_start$=_date_start,$lots_date_end$=_date_end,$amount_starting$=_amount_starting,$amount_final$=_amount_final,$lots_status$=_status,=_actions\")\r\n                        }\r\n                    }.Else{\r\n                        Div(text-center h3){\r\n                            LangRes(lots_not_found)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            If(GetVar(Search)){\r\n                Div(row){\r\n                    Div(col-md-12 mt-lg){\r\n                        Div(text-center){\r\n                            Button(Body: LangRes(show_all), Class: btn btn-primary, Page: lots_list)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }.Style(\r\n            th,td {text-align:center;}\r\n            .img-circle {height: 30px;width: 30px; border: 1px solid #5A5D63;}\r\n            .center {display:flex; align-items:center;}\r\n            .photo {height: 100px; width: 100px;}\r\n        )\r\n    }\r\n}",
            "Name": "lots_list",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Conditions": "true",
            "Value": "Div(){\r\n    If(And(#Id#>0,#role_id#==1,#NotificId#>0)){\r\n        Form(form-group){\r\n            Div(form-group){\r\n                Input(Name:Comment, Type:textarea)\r\n            }\r\n            Div(text-left){\r\n                Button(Body: \"Отклонить\", Page: lots_view, Contract: lots_AdminAction, Params: \"Action=reject,Id=#Id#,NotificId=#NotificId#\", PageParams: \"Id=#Id#\", Class: btn btn-danger pull-right)\r\n                Button(Body: \"Отмена\", Page: lots_view, PageParams: \"Id=#Id#,notific_id=#NotificId#\", Class: btn btn-default pull-left)\r\n            }\r\n        }\r\n    }.Else{\r\n        Button(Body: \"Отмена\", Page: lots_view, PageParams: \"Id=#Id#,notific_id=#NotificId#\", Class: btn btn-default pull-left)\r\n    }\r\n}",
            "Name": "lots_reject",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Conditions": "true",
            "Value": "DBFind(applications).Columns(\"id\").Where(\"name='Trading Platform' AND deleted=0\").Vars(application)\r\nDBFind(roles).Where(\"id=#role_id#\").Columns(\"role_name\").Vars(r)\r\nIf(#notific_id#>0){\r\n    DBFind(notifications).Columns(\"id,page_params->lot_id\").Where(\"id=#notific_id#\").Vars(note)\r\n    If(#note_id#>0){\r\n        SetVar(Id,#note_page_params_lot_id#)\r\n    }\r\n}.Else{\r\n    SetVar(notific_id,)\r\n}\r\nDiv(content-wrapper){\r\n    Div(breadcrumb){\r\n        LinkPage($lots_list$, lots_list)\r\n        Span(/,mh)\r\n        Span(Class: text-muted, Body: $lots_view$)\r\n    }\r\n\r\n    If(GetVar(Id)){\r\n        DBFind(lots,lot).Where(\"id=#Id#\").Vars(lot)\r\n        DBFind(lots_types,src_type).Where(\"deleted=0 and id=#lot_lots_type_id#\").Vars(type)\r\n        DBFind(roles).Columns(\"role_name\").Where(\"id=#role_id#\").Vars(r)\r\n        DBFind(lots_tracks).Where(\"lot_id=#Id# and key_id=#key_id# and deleted=0\").Vars(track)\r\n\r\n        Div(row){\r\n            Div(col-sm-8 col-sm-offset-2 col-lg-6 col-lg-offset-3){\r\n                Form(panel panel-default){\r\n                    Div(panel-heading text-center){\r\n                        If(#lot_deleted#==1){\r\n                            Div(Class: h2 text-danger, Body: LangRes(lot_deleted))\r\n                        }\r\n                        Div(Class: h3, Body: #lot_name#)\r\n                    }\r\n                    Div(panel-body){\r\n                        Div(text-center){\r\n                            Image(Src: Binary().ById(#lot_photo#), Class:big_photo mb-lg)\r\n                        }\r\n                        Div(list-group-item text-center){\r\n                            SetVar(status_index, Calculate(#lot_status# + 1)).(status_class,text-warning)\r\n                            If(#status_index# == 5){\r\n                                SetVar(status_class,text-success)\r\n                                Div(col-md-6 mt-sm text-right){\r\n                                    LangRes(buyer)\r\n                                }\r\n                                Div(col-md-6 text-left){\r\n                                    DBFind(members).Columns(\"id,member_name,image_id\").Where(\"id=#lot_buyer#\").Vars(buyer)\r\n                                    If(Or(#buyer_id#>0,#buyer_id#<0)){\r\n                                    }.Else{\r\n                                        SetVar(buyer_member_name,Address(#lot_buyer#))\r\n                                    }\r\n                                    LinkPage(Class: center text-primary h5 text-bold, Page: profile_view, PageParams: \"v_member_id=#seller#\"){\r\n                                        If(#buyer_image_id#>0){\r\n                                            Image(Src: Binary().ById(#buyer_image_id#), Class: img-circle mr)\r\n                                        }.Else{\r\n                                            Span(Class: fa icon-user fa-2x mr)\r\n                                        }\r\n                                        Span(#buyer_member_name#)\r\n                                    }\r\n                                }\r\n                            }.ElseIf(#status_index# == 6){\r\n                                SetVar(status_class,text-danger)\r\n                            }.ElseIf(And(#status_index#==1,#role_id#==1,#notific_id#>0)){\r\n                                Div(form-group text-left){\r\n                                    Button(Body: \"Отклонить\", Page: lots_reject, PageParams: \"NotificId=#notific_id#,Id=#Id#\", Class: btn btn-danger).Popup(Width: 40, Header: \"Пожалуйста укажите причину отказа\")\r\n                                    Button(Body: \"Принять\", Page: lots_view, Contract: lots_AdminAction, Params: \"Action=accept,Id=#Id#,NotificId=#notific_id#,Comment=\", Class: btn btn-success pull-right, PageParams: \"Id=#Id#\")\r\n                                }\r\n                            }.ElseIf(And(#status_index#==4,#key_id#==#lot_buyer#)){\r\n                                Div(form-group text-left){\r\n                                    Button(Body: \"Отклонить\", Contract: lots_Sign, Params: \"actions=buyer_reject,lot_id=#Id#,notific_id=#notific_id#\", Page: lots_view, PageParams: \"Id=#Id#\", Class: btn btn-danger)\r\n                                    Button(Body: \"Принять\", Contract: lots_Sign, Params: \"actions=buyer_accept,lot_id=#Id#,notific_id=#notific_id#\", Page: lots_view, PageParams: \"Id=#Id#\", Class: btn btn-success pull-right)\r\n                                }\r\n                            }.ElseIf(And(#r_role_name#==\"Buyer\",#notific_id#>0)){\r\n                                Div(form-group text-left){\r\n                                    Button(Body: \"Не интересует\", Page: lots_view, Contract: lots_BuyerAction, Params: \"Action=track_reject,Id=#Id#,NotificId=#notific_id#\", Class: btn btn-default, PageParams: \"Id=#Id#\")\r\n                                    Button(Body: \"Отслеживать\", Page: lots_view, Params: \"Action=track_accept,NotificId=#notific_id#,Id=#Id#\",PageParams: \"Id=#Id#\", Contract: lots_BuyerAction, Class: btn btn-success pull-right)\r\n                                }\r\n                            }\r\n                            Div(#status_class#){\r\n                                AppParam(App: #application_id#, Name: lots_status, Index: #status_index#)\r\n                            }\r\n                            If(#lot_comment#!=\"\"){\r\n                                Div(text-muted){\r\n                                    #lot_comment#\r\n                                }\r\n                            }\r\n                        }\r\n                        Div(form-group){\r\n                            Div(list-group-item text-center){\r\n                                Div(row mt-sm t4){\r\n                                    Div(col-md-6 text-right){\r\n                                        ID\r\n                                    }\r\n                                    Div(col-md-6 text-left){\r\n                                        #lot_id#\r\n                                    }\r\n                                }\r\n\r\n                                Div(row mt-sm t4){\r\n                                    Div(col-md-6 text-right){\r\n                                        LangRes(lots_description)\r\n                                    }\r\n                                    Div(col-md-6 text-left){\r\n                                        #lot_description#\r\n                                    }\r\n                                }\r\n\r\n                                Div(row mt-sm t4){\r\n                                    Div(col-md-6 mt-sm text-right){\r\n                                        LangRes(seller)\r\n                                    }\r\n                                    Div(col-md-6 text-left){\r\n                                        DBFind(members).Columns(\"id,member_name,image_id\").Where(\"id=#lot_seller#\").Vars(seller)\r\n                                        If(Or(#seller_id#>0,#seller_id#<0)){\r\n                                        }.Else{\r\n                                            SetVar(seller_member_name,Address(#lot_seller#))\r\n                                        }\r\n                                        LinkPage(Class: center text-primary h5 text-bold, Page: profile_view, PageParams: \"v_member_id=#lot_seller#\"){\r\n                                            If(#seller_image_id#>0){\r\n                                                Image(Src: Binary().ById(#seller_image_id#), Class: img-circle mr)\r\n                                            }.Else{\r\n                                                Span(Class: fa icon-user fa-2x mr)\r\n                                            }\r\n                                            Span(#seller_member_name#)\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            Div(list-group-item text-center){\r\n                                Div(row mt-sm t4){\r\n                                    Div(col-md-6 text-right){\r\n                                        LangRes(date_creation)\r\n                                    }\r\n                                    Div(col-md-6 text-left){\r\n                                        DateTime(#lot_date_creation#, DD.MM.YYYY HH:MI)\r\n                                    }\r\n                                }\r\n                                Div(row mt-sm t4){\r\n                                    Div(col-md-6 text-right){\r\n                                        LangRes(lots_date_start)\r\n                                    }\r\n                                    Div(col-md-6 text-left){\r\n                                        DateTime(#lot_date_start#, DD.MM.YYYY HH:MI)\r\n                                    }\r\n                                }\r\n                                Div(row mt-sm t4){\r\n                                    Div(col-md-6 text-right){\r\n                                        LangRes(lots_date_end)\r\n                                    }\r\n                                    Div(col-md-6 text-left){\r\n                                        DateTime(#lot_date_end#, DD.MM.YYYY HH:MI)\r\n                                    }\r\n                                }\r\n                            }\r\n                            Div(list-group-item text-center){\r\n                                If(#lot_type_bargain# == 2){\r\n                                    Div(row mt-sm t4){\r\n                                        Div(col-md-6 text-right){\r\n                                            Span(Body: \"Цена\")\r\n                                        }\r\n                                        Div(col-md-6 text-left){\r\n                                            Money(#lot_amount_starting#)\r\n                                        }\r\n                                    }\r\n                                }.Else{\r\n                                    Div(row mt-sm t4){\r\n                                        Div(col-md-6 text-right){\r\n                                            Span(\"Тип торга\")\r\n                                        }\r\n                                        Div(col-md-6 text-left){\r\n                                            Span(Body: AppParam(App:#application_id#, Name:bargain_type, Index: #lot_type_bargain#))\r\n                                        }\r\n                                    }\r\n\r\n                                    Div(row mt-sm t4){\r\n                                        Div(col-md-6 text-right){\r\n                                            LangRes(amount_starting)\r\n                                        }\r\n                                        Div(col-md-6 text-left){\r\n                                            Money(#lot_amount_starting#)\r\n                                        }\r\n                                    }\r\n\r\n                                    Div(row mt-sm t4){\r\n                                        Div(col-md-6 text-right){\r\n                                            LangRes(order_min)\r\n                                        }\r\n                                        Div(col-md-6 text-left){\r\n                                            Money(#lot_order_min#)\r\n                                        }\r\n                                    }\r\n\r\n                                    Div(row mt-sm t4){\r\n                                        Div(col-md-6 text-right){\r\n                                            LangRes(order_max)\r\n                                        }\r\n                                        Div(col-md-6 text-left){\r\n                                            Money(#lot_order_max#)\r\n                                        }\r\n                                    }\r\n\r\n                                    Div(row mt-sm t4){\r\n                                        Div(col-md-6 text-right){\r\n                                            LangRes(lots_amount_max)\r\n                                        }\r\n                                        Div(col-md-6 text-left){\r\n                                            Money(#lot_amount_max#)\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            If(#lot_contract_id#>0){\r\n                                Div(list-group-item text-center){\r\n                                    Div(row mt-sm t4){\r\n                                        Div(col-md-12){\r\n                                            DBFind(binaries, src_binaries).Where(\"id=#lot_contract_id#\")\r\n                                            Table(Source: src_binaries, \"$lots_contract$=data\")\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            If(#lot_status# >= 3){\r\n                                Div(list-group-item text-center){\r\n                                    Div(row){\r\n                                        Div(col-md-12 mt-sm text-center){\r\n                                            Span(Class: h4, Body:\"Рейтинг ставок\")\r\n                                        }\r\n                                        DBFind(Name: buyers, Source: src_buyers).Where(lot_id = #Id#).Order(amount DESC, id ASC).Custom(custom_buyer_id){\r\n                                        DBFind(members).Columns(\"id,member_name,image_id\").Where(\"id=#buyer_id#\").Vars(member)\r\n                                        If(Or(#member_id#>0,#member_id#<0)){\r\n                                        }.Else{\r\n                                            SetVar(member_member_name,Address(#buyer_id#))\r\n                                        }\r\n                                        LinkPage(Class: center text-primary h5 text-bold, Page: profile_view, PageParams: \"v_member_id=#buyer_id#\"){\r\n                                            If(#member_image_id#>0){\r\n                                                Image(Src: Binary().ById(#member_image_id#), Class: img-circle mr)\r\n                                            }.Else{\r\n                                                Span(Class: fa icon-user fa-2x mr)\r\n                                            }\r\n                                            Span(#member_member_name#)\r\n                                        }\r\n                                    }.Custom(custom_amount){\r\n                                        Money(#amount#)\r\n                                    }.Custom(custom_status){\r\n                                        If(#status# == -1){\r\n                                            Span(Class: text-danger, Body: \"Отказ\")\r\n                                        }\r\n                                        If(And(#status# == 0, #lot_buyer# == #buyer_id#)){\r\n                                            Span(Class: text-warning, Body: \"Ожидание подписи\")\r\n                                        }.ElseIf(#status# == 0){\r\n                                            Span(Body: \"Претендент\")\r\n                                        }\r\n                                        If(#status# == 1){\r\n                                            Span(Class: text-success, Body: \"Победитель\")\r\n                                        }\r\n                                    }\r\n                                    Table(src_buyers, \"Пользователь=custom_buyer_id,Ставка=custom_amount,Статус=custom_status\").Style(padding-left:10px;)\r\n                                    }\r\n                                }\r\n                            }\r\n                            If(And(#lot_status#==2,#r_role_name#==\"Buyer\",#lot_type_bargain# == 2)){\r\n                                Div(list-group-item text-center){\r\n                                    Div(row){\r\n                                        Div(col-md-12 mt-sm text-center){\r\n                                            Span(Class: h4,Body:\"Претенденты на покупку\")\r\n                                        }\r\n                                        DBFind(\"buyers\",Source: src_buyers).Columns(\"id,lot_id,buyer_id\").Custom(wallet_byer){\r\n                                            Span(Address(#buyer_id#))\r\n                                        }.Where(lot_id=#Id#)\r\n                                        Table(Source:src_buyers,Columns:\"ID ставки=id,Номер кошелька=wallet_byer\").Style(padding-left:10px;)\r\n                                    }\r\n                                }                    \r\n                                Div(list-group-item text-center){\r\n                                    Div(row mt-sm){\r\n                                        Div(col-md-12){\r\n                                            DBFind(\"buyers\").Where(\"buyer_id = #key_id# and lot_id = #Id#\").Vars(rate_).Order(\"id\")\r\n                                            If(#rate__id# > 0){\r\n                                                Button(Class: btn btn-success pull-right disabled,Body: \"Купить\")\r\n                                            }.Else{\r\n                                                Button(Class: btn btn-success pull-right,Body: \"Купить\",Contract:AuctionProcess,Page:lots_list,Params:\"step_rate=0,lot_id=#Id#\")\r\n                                            }\r\n                                            Button(Class: btn btn-default pull-left,Body: \"Назад\",Page:lots_list)\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            Div(text-right mt){\r\n                                Button(Class: btn btn-info hidden-lg, Body: $lots_view_info$, Page: lots_view_info, PageParams: \"notific_id=#notific_id#,Id=#Id#,\").Popup(Header:\"#lot_name#\", Width: 50)\r\n                                Button(Class: btn btn-info hidden-sm hidden-md hidden-xs, Body: $lots_view_info$, Page: lots_view_info, PageParams: \"notific_id=#notific_id#,Id=#Id#\").Popup(Header:\"#lot_name#\", Width: 40)\r\n                            }\r\n                        }\r\n                        Div(form-group){\r\n                            If(#lot_deleted#==0) {\r\n                                If(#r_role_name#==\"Buyer\"){\r\n                                    If(#comment#==\"пока отключено\"){\r\n                                        Div(list-group-item text-center){\r\n                                            If(#lot_status#==1){\r\n                                                If(#track_id#>0){\r\n                                                    Button(Body: $lots_unsubscribe$, Class: btn btn-default btn-block, Page: lots_view, PageParams: \"Id=#Id#\", Contract: lots_BuyerAction, Params: \"Action=track_reject,Id=#Id#\")\r\n                                                }.Else{\r\n                                                    Button(Body: $lots_subscribe$, Class: btn btn-primary btn-block, Page: lots_view,PageParams: \"Id=#Id#\", Contract: lots_BuyerAction, Params: \"Action=track_accept,Id=#Id#\")\r\n                                                }\r\n                                            }.ElseIf(#lot_status#>1){\r\n                                                Button(Class: btn btn-primary btn-block, Body: $lots_bid$, Page: lots_list)\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }.ElseIf(#r_role_name#==\"Seller\"){\r\n                                    If(And(#lot_seller#==#key_id#,#lot_status#==0)){\r\n                                        Div(list-group-item text-center){\r\n                                            Button(Class: btn btn-default btn-block, Body: LangRes(lot_edit), Page: lots_edit, PageParams: \"Id=#Id#\")\r\n                                        }\r\n                                        Div(list-group-item text-center){\r\n                                            Button(Class: btn btn-danger btn-block, Body: LangRes(lots_delete), Page: lots_list, Contract: lots_Delete, Params: \"Id=#Id#\").Alert($lots_delete_auction$, $lots_yes$, $lots_no$)\r\n                                        }\r\n                                    }\r\n                                }.ElseIf(And(#role_id#==1,#lot_status#==1)){\r\n                                    Div(list-group-item text-center){\r\n                                        Button(Class: btn btn-success btn-block, Body: \"Начать торги\", Page: lots_list,Contract: AuctionProccessEdit,Params: \"lot_id=#Id#\")\r\n                                    }\r\n                                }.ElseIf(And(#role_id#==1,#lot_status#==2)){\r\n                                    Div(list-group-item text-center){\r\n                                        Button(Class: btn btn-success btn-block, Body: \"Закончить торги\", Page: lots_list,Contract: AuctionProccessEdit,Params: \"lot_id=#Id#\")\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}.Style(\r\n    th,td {text-align:center;}\r\n    .t4 {font-size:18px;}\r\n    .img-circle {height: 30px;width: 30px; border: 1px solid #5A5D63;}\r\n    .center {display:flex; align-items:center;}\r\n    .big_photo {height: 300px; width: 300px;}\r\n)",
            "Name": "lots_view",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "DBFind(applications).Columns(\"id\").Where(\"name='Trading Platform' AND deleted=0\").Vars(application)\r\nDiv(content-wrapper){\r\n    If(GetVar(Id)){\r\n        DBFind(lots,lot).Where(\"id=#Id#\").Vars(lot)\r\n        DBFind(lots_types,src_type).Where(\"deleted=0 and id=#lot_lots_type_id#\").Vars(type)\r\n\r\n        Div(form-group){\r\n            Div(row mt-sm){\r\n                Div(col-md-4 mt-sm text-right){\r\n                    Strong(LangRes(lots_cat))\r\n                }\r\n                Div(col-md-8 text-left mt-sm){\r\n                    AppParam(App: #application_id#, Name: lots_categories, Index: #type_category#)\r\n                }\r\n            }\r\n            Div(row mt-sm){\r\n                Div(col-md-4 mt-sm text-right){\r\n                    Strong(LangRes(lots_type))\r\n                }\r\n                Div(col-md-8 text-left mt-sm){\r\n                    ForList(src_type){\r\n                        LangRes(#resource_name#)\r\n                    }\r\n                }\r\n            }\r\n            Div(row mt-sm){\r\n                Div(col-md-4 mt-sm text-right){\r\n                    Strong(LangRes(lots_location))\r\n                }\r\n                Div(col-md-8 text-left mt-sm){\r\n                    #lot_location#\r\n                }\r\n            }\r\n            Div(row mt-sm){\r\n                Div(col-md-4 mt-sm text-right){\r\n                    Strong(LangRes(lots_condition))\r\n                }\r\n                Div(col-md-8 text-left mt-sm){\r\n                    AppParam(App:#application_id#, Name:lots_condition, Index:#lot_condition#)\r\n                }\r\n            }\r\n            ArrayToSource(type_blocks, [#type_lots_params#])\r\n            ForList(type_blocks){\r\n                Div(row mt-sm){\r\n                    SetVar(block,AppParam(App:#application_id#, Name:lots_params, Index:#value#))\r\n                    Include(#block#)\r\n                }\r\n            }\r\n        }\r\n        Div(text-right){\r\n            Button(Class: btn btn-primary, Page: lots_view, PageParams: \"notific_id=#notific_id#,Id=#Id#\", Body: \"Закрыть\")\r\n        }\r\n    }\r\n}",
            "Name": "lots_view_info",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Conditions": "true",
            "Value": "Div(content-wrapper){\r\n    SetTitle($platform_requests$)\r\n    DBFind(Name: platform_requests, Source: platform_requests).Where(\"status = 0\").Custom(button){Button(Body: Принять, Class: btn btn-success, Contract: platform_Acceptance, Params:\"member_id=#member_id#, rname=#role#, requestID=#id#\")Button(Body: Отклонить, Class: btn btn-danger, Contract: platform_Decline, Params:\"id=#id#\")}\r\n    Form(panel panel-primary){\r\n        Div(panel-body){\r\n            Div(row){\r\n                Div(col-md-12){\r\n                    Table(Source: platform_requests, Columns: \"Имя=name_first,Фамилия=name_middle,Отчество=name_last,Профиль=member_name,ID=member_id,Компания=company_name,Должность=company_position,Роль=role,Решение=button\")\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Name": "platform_requests",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Conditions": "true",
            "Value": "Div(content-wrapper){\r\n    SetTitle(Membership Request)\r\n\t\r\n\tDBFind(Name: notifications, Source: src_notific).Columns(\"page_params->request_id,sender->image_id,sender->member_id,sender->member_name,page_params->role\").Where(\"id = #notific_id#\").Vars(notific)\r\n    \r\n    If(#prefix_image_id#>0){\r\n        DBFind(Name: binaries, Source: src_binaries).Columns(\"id,data\").Where(\"id=#notific_sender_image_id#\").Vars(img)\r\n    }\r\n    \r\n    Div(row){\r\n        Div(col-sm-8 col-sm-offset-2 col-lg-6 col-lg-offset-3){\r\n            Form(panel panel-default){\r\n                Div(panel-heading text-center){\r\n                    Span(Class: h3, Body: Membership Request)\r\n                }\r\n                Div(panel-body){\r\n                    Div(form-group){\r\n                        Div(row){\r\n                            Div(col-md-12 mt-sm text-center){\r\n\t\t\t\t\t\t\t\tIf(#img_id#>0){\r\n\t\t\t\t\t\t\t\t\tImage(Src: \"#img_data#\", Class: img-circle).Style(width: 80px; border: 1px solid #5A5D63;)\r\n\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\tSpan(Class: fa icon-user fa-5x)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tDiv(m0 h3 text-bold){#notific_sender_member_name#}\r\n\t\t\t\t\t\t\t\r\n                            }\r\n                        }\r\n                    }\r\n                    Div(list-group-item text-center){\r\n                        Div(text-muted m0 h5, Body: \"Request approvale for role\")\r\n                        Span(Class: h5 text-bold, Body: #notific_page_params_role#)\r\n                    }\r\n\t\t\t\t\tDiv(list-group-item text-center){\r\n                        Button(Class: btn btn-success, Body: Accept, Contract: platform_Acceptance, Page: profile_view, Params: \"rname=#notific_page_params_role#, member_id=#notific_sender_member_id#, notific_id=#notific_id#\")\r\n                        Button(Class: btn btn-danger, Body: Reject, Contract: platform_Decline, Page: profile_view, Params: \"rname=#notific_page_params_role#, member_id=#notific_sender_member_id#, notific_id=#notific_id#\")\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Name": "platform_role_acceptance",
            "Menu": "admin_menu",
            "Type": "pages"
        },
        {
            "Conditions": "true",
            "Value": "Div(content-wrapper){\r\n    Div(row){\r\n        Div(col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3){\r\n            Div(panel-heading){\r\n                Div(panel-body text-center){\r\n                    Span(Class: icon-flag fa-5x text-danger)\r\n                }\r\n                Div(panel-body text-center){\r\n                    Button(Class: btn btn-danger, Body: Close, Contract: notifications_Close, Page: profile_view, Params: \"notific_id=#notific_id#\")\r\n                }\r\n            }    \r\n        }\r\n    }\r\n}",
            "Name": "platform_role_fail",
            "Menu": "admin_menu",
            "Type": "pages"
        },
        {
            "Conditions": "true",
            "Value": "Div(content-wrapper){\r\n    Div(col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3){\r\n        Div(row){\r\n            Form(){\r\n                Div(col-md-3 mt-sm text-right){\r\n                    Label(For: role){\r\n                        Span(Body: \"Роль\")\r\n                        Span(Class: text-danger, Body:*)\r\n                    }\r\n                }\r\n                Div(col-md-9 mc-sm text-left){\r\n                    Div(form-group){\r\n                        Data(roles,\"id,Roles\"){\r\n                        3,Buyer\r\n                        4,Seller\r\n                        }\r\n                    Select(role, roles, Roles)\r\n                    }\r\n                }\r\n                Div(col-md-12 mc-sm text-center){\r\n                    Button(Body: Close, Class: btn btn-danger, Page: profile_view)\r\n                    Button(Body: Request, Class: btn btn-success, Contract: PlatformSingup, Page: profile_view)\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Name": "platform_role_selection",
            "Menu": "admin_menu",
            "Type": "pages"
        },
        {
            "Conditions": "true",
            "Value": "Div(content-wrapper){\r\n    Div(row){\r\n        Div(col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3){\r\n            Div(panel-heading){\r\n                Div(panel-body text-center){\r\n                    Span(Class: icon-check fa-5x text-success)\r\n                }\r\n                Div(panel-body text-center){\r\n                    Button(Class: btn btn-success, Body: Success, Contract: notifications_Close, Page: profile_view, Params: \"notific_id=#notific_id#\")\r\n                }\r\n            }    \r\n        }\r\n    }\r\n}",
            "Name": "platform_role_success",
            "Menu": "admin_menu",
            "Type": "pages"
        },
        {
            "Conditions": "true",
            "Value": "Div(content-wrapper){\r\n    SetTitle($platform_singup$)\r\n    Div(breadcrumb){\r\n        LinkPage(\"Профиль\", profile_view)\r\n        Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n        Span(Class: text-muted, Body: $platform_singup$)\r\n    }\r\n    Div(row){\r\n        Div(col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3){\r\n            Form(panel panel-primary){\r\n                Div(panel-heading, Body: \"Регистрация\")\r\n                Div(panel-body){\r\n                If(And(#role_id#==4,#role_id#==3)){\r\n                        P(Body: \"Вам не требуется регистрация, поскольку вам доступны обе роли!\")\r\n                    }.Else{\r\n                    Div(list-group-item){\r\n                        Div(row){\r\n                            Div(col-md-3 mt-sm text-right){\r\n                                Label(For: name_first){\r\n                                    Span(Body: \"Имя\")\r\n                                    Span(Class: text-danger, Body:*)\r\n                                }\r\n                            }\r\n                            Div(col-md-9 mc-sm text-left){\r\n                                Input(Name: name_first).Validate(minLength:3, maxLength:60)\r\n                                InputErr(Name: name_first, minLength: $validate_name_first$, maxLength: $validate_name_first$)\r\n                            }\r\n                        }\r\n                    }\r\n                    Div(list-group-item){\r\n                        Div(row){\r\n                            Div(col-md-3 mt-sm text-right){\r\n                                Label(For: name_middle){\r\n                                    Span(Body: \"Фамилия\")\r\n                                    Span(Class: text-danger, Body:*)\r\n                                }\r\n                            }\r\n                            Div(col-md-9 mc-sm text-left){\r\n                                Input(Name: name_middle).Validate(minLength:3, maxLength:60)\r\n                                InputErr(Name: name_middle, minLength: $validate_name_middle$, maxLength: $validate_name_middle$)\r\n                            }\r\n                        }\r\n                    }\r\n                    Div(list-group-item){\r\n                        Div(row){\r\n                            Div(col-md-3 mt-sm text-right){\r\n                                Label(For: name_last){\r\n                                    Span(Body: \"Отчество\")\r\n                                    Span(Class: text-danger, Body:*)\r\n                                }\r\n                            }\r\n                            Div(col-md-9 mc-sm text-left){\r\n                                Input(Name: name_last).Validate(minLength:3, maxLength:60)\r\n                                InputErr(Name: name_last, minLength: $validate_name_last$, maxLength: $validate_name_last$)\r\n                            }\r\n                        }\r\n                    }\r\n                    Div(list-group-item){\r\n                        Div(row){\r\n                            Div(col-md-3 mt-sm text-right){\r\n                                Label(For: company_name){\r\n                                    Span(Body: \"Компания\")\r\n                                    Span(Class: text-danger, Body:*)\r\n                                }\r\n                            }\r\n                            Div(col-md-9 mc-sm text-left){\r\n                                Input(Name: company_name).Validate(minLength:3, maxLength:60)\r\n                                InputErr(Name: company_name, minLength: $validate_company_name$, maxLength: $validate_company_name$)\r\n                            }\r\n                        }\r\n                    }\r\n                    Div(list-group-item){\r\n                        Div(row){\r\n                            Div(col-md-3 mt-sm text-right){\r\n                                Label(For: company_position){\r\n                                    Span(Body: \"Должность\")\r\n                                    Span(Class: text-danger, Body:*)\r\n                                }\r\n                            }\r\n                            Div(col-md-9 mc-sm text-left){\r\n                                Input(Name: company_position).Validate(minLength:3, maxLength:60)\r\n                                InputErr(Name: company_position, minLength: $validate_company_position$, maxLength: $validate_company_position$)\r\n                            }\r\n                        }\r\n                    }\r\n                    Div(list-group-item){\r\n                        Div(row){\r\n                            Div(col-md-3 mt-sm text-right){\r\n                                Label(For: member_name){\r\n                                    Span(Body: \"Профиль\")\r\n                                    Span(Class: text-danger, Body:*)\r\n                                }\r\n                            }\r\n                            Div(col-md-9 mc-sm text-left){\r\n                                DBFind(Name: members, Source: src_member).Columns(\"id,member_name,image_id,member_info->information\").Where(\"id=#key_id#\").Vars(prefix)\r\n                                   If(Or(#prefix_id#>0,#prefix_id#<0)){\r\n                                    Input(Name: member_name, Value: #prefix_member_name#, Disabled: true)\r\n                                }\r\n                            }\r\n                        }\r\n                    }  \r\n                    Div(list-group-item){\r\n                        Div(row){\r\n                            Div(col-md-3 mt-sm text-right){\r\n                                Label(For: role){\r\n                                    Span(Body: \"Роль\")\r\n                                    Span(Class: text-danger, Body:*)\r\n                                }\r\n                            }\r\n                            Div(col-md-9 mc-sm text-left){\r\n                                Div(form-group){\r\n                                    Data(roles,\"id,Roles\"){\r\n                                    8,Buyer\r\n                                    9,Seller\r\n                                    }\r\n                                    Select(role, roles, Roles)\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                Div(panel-footer text-right){\r\n                    Button(Body: \"Регистрация\", Class: btn btn-primary, Contract: platform_Singup, Params: \"member_id=#key_id#\")\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Name": "platform_singup",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Conditions": "true",
            "Value": "Div(Class: content-wrapper){\r\n    Form(panel panel-primary){\r\n        Div(panel-heading text-center){\r\n            DBFind(\"notifications\").Columns(\"id,page_params->lot_id\").WhereId(#notific_id#).Vars(src)\r\n            DBFind(\"lots\").WhereId(#src_page_params_lot_id#).Vars(lot_)\r\n            DBFind(roles).Columns(\"id,role_name\").Where(\"id=#role_id#\").Vars(r)\r\n            If(#r_role_name# == \"Seller\"){\r\n                Span(Class:h4 text-bold,Body:Аукцион закончен)\r\n            }.Else{\r\n                Span(Class:h4 text-bold,Body:Объявление о начале аукциона)\r\n            }\r\n        }\r\n        Div(panel-body){\r\n            Div(row){\r\n                Div(form-group){\r\n                    Div(list-group-item text-center){\r\n                        Div(row mt-sm t4){\r\n                            Div(col-md-6 text-right){\r\n                                Span(\"Лот ID\")\r\n                            }\r\n                            Div(col-md-6 text-left){\r\n                                #lot__id#\r\n                            }\r\n                        }\r\n                        Div(row mt-sm t4){\r\n                            Div(col-md-6 text-right){\r\n                                Span(\"Название\")\r\n                            }\r\n                            Div(col-md-6 text-left){\r\n                                #lot__name#\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            Div(panel-footer text-center){    \r\n                Button(Class:btn btn-default btn-block,Body:\"Перейти к аукциону\",Contract:notifications_Close,Params:\"notific_id=#notific_id#\",Page:lots_view,PageParams:\"Id=#src_page_params_lot_id#\") \r\n            }\r\n        }\r\n    }\r\n}",
            "Name": "view_lots_start_auction",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Conditions": "true",
            "Value": "contract AuctionProccessEdit {\r\n    data {\r\n        lot_id int\r\n    }\r\n    conditions {\r\n        \r\n    }\r\n    action {\r\n        $lot_map = DBFind(\"lots\").Where(\"id=$\", $lot_id).Row()\r\n        if($lot_map[\"status\"] == 1){\r\n            DBUpdate(\"lots\",$lot_id,\"status\",2)\r\n            var buers array\r\n            buers = DBFind(\"lots_tracks\").Where(\"lot_id=? and deleted=0\", $lot_id)\r\n            var i int\r\n            while i < Len(buers) {\r\n                var p map\r\n                p = buers[i]\r\n                $member_id = Int(p[\"key_id\"])\r\n\r\n                var notific_params map\r\n                notific_params[\"lot_id\"] = $lot_id\r\n\r\n                notifications_Send(\"member_id,sender,icon_name,text_header,text_body,page_name,params_map\", $member_id, 1, \"icon icon-envelope\", \"Аукцион начался\", \"Подробнее\", \"view_lots_start_auction\", notific_params)\r\n                i=i+1\r\n            }\r\n        }\r\n        if($lot_map[\"status\"] == 2){\r\n            DBUpdate(\"lots\",$lot_id,\"status\",3)\r\n\r\n            var notific_params map\r\n            notific_params[\"lot_id\"] = $lot_id\r\n\r\n            $member_id = Int($lot_map[\"seller\"])\r\n\r\n            notifications_Send(\"member_id,sender,icon_name,text_header,text_body,page_name,params_map\", $member_id, 1, \"icon icon-envelope\", \"Аукцион закончен\", \"Подробнее\", \"view_lots_start_auction\", notific_params)\r\n            lots_Close (\"id\",$lot_id) \r\n        }\r\n    }\r\n}",
            "Name": "AuctionProccessEdit",
            "Type": "contracts"
        },
        {
            "Conditions": "true",
            "Value": "contract AuctionProcess {\r\n    data {\r\n        step_rate money\r\n        lot_id int\r\n    }\r\n    conditions {\r\n        $lot_map = DBFind(\"lots\").Where(\"id=$\", $lot_id).Row()\r\n        if ($lot_map[\"type_bargain\"] == 1){\r\n            if ($step_rate < $lot_map[\"order_min\"]){\r\n                info(\"Ставка не может быть меньше минимальной\")\r\n            }\r\n            if ($step_rate > $lot_map[\"order_max\"]){\r\n                info(\"Ставка не может быть больше максимальной\")\r\n            }\r\n        }\r\n\r\n        if ($lot_map[\"type_bargain\"] == 2){\r\n            $step_rate = Money($lot_map[\"amount_starting\"])\r\n        }\r\n\r\n        var percentrate money\r\n        percentrate = $step_rate / Money(100)\r\n    \r\n        var checkamount money\r\n        checkamount = DBFind(\"keys\").Where(\"id = ?\",$key_id).One(\"amount\")\r\n        \r\n        if ($lot_map[\"type_bargain\"] == 2){\r\n            if(percentrate + $step_rate > checkamount){\r\n                info(\"На счету недостаточно средств\")\r\n            }\r\n        }\r\n\r\n        if ($lot_map[\"type_bargain\"] == 1){\r\n            if ($lot_map[\"amount_max\"] == 0){\r\n                if(percentrate + $step_rate + Money($lot_map[\"amount_starting\"]) > checkamount){\r\n                    info(\"На счету недостаточно средств\")\r\n                }\r\n            }\r\n            if (Money($lot_map[\"amount_max\"]) > 0){\r\n                if(percentrate + $step_rate + Money($lot_map[\"amount_max\"]) > checkamount){\r\n                    info(\"На счету недостаточно средств\")\r\n                }\r\n            }\r\n        }\r\n    }\r\n    action {\r\n        var percentrate money\r\n        percentrate = $step_rate / Money(100)\r\n\r\n        if ($lot_map[\"type_bargain\"] == 1){\r\n            if (Money($lot_map[\"amount_max\"]) == Money(0)){\r\n                var firstrate money\r\n                firstrate = $step_rate + Money($lot_map[\"amount_starting\"])\r\n                DBUpdate(\"keys\",$key_id,\"-amount,+deposit\",firstrate,firstrate)\r\n                DBUpdate(\"lots\",$lot_id,\"amount_max\",firstrate)\r\n                DBInsert(\"buyers\",\"amount,lot_id,buyer_id\",firstrate,$lot_id,$key_id)\r\n            }\r\n            if (Money($lot_map[\"amount_max\"]) > Money(0)){\r\n                var secondrate money\r\n                secondrate = $step_rate + Money($lot_map[\"amount_max\"])\r\n\r\n               /* $send_notif_rate_broken = DBFind(\"buyers\").Where(\"lot_id=$\",$lot_id).Order(\"id ASC\").One(\"buyer_id\")\r\n                info($send_notif_rate_broken)*/\r\n\r\n                $user_map = DBFind(\"buyers\").Where(\"buyer_id=$ and lot_id=$\",$key_id,$lot_id).Row()\r\n                \r\n                DBUpdate(\"keys\",$key_id,\"-amount,+deposit\",secondrate,secondrate)\r\n                DBUpdate(\"lots\",$lot_id,\"amount_max\",secondrate)\r\n\r\n                if(Int($user_map[\"buyer_id\"]) > 0){\r\n                    DBUpdate(\"buyers\",$user_map[\"id\"],\"amount\",secondrate)\r\n                }\r\n                if(Int($user_map[\"buyer_id\"]) <= 0){\r\n                    DBInsert(\"buyers\",\"amount,lot_id,buyer_id\",secondrate,$lot_id,$key_id)\r\n                }\r\n            }\r\n            DBUpdate(\"keys\",$key_id,\"-amount\", percentrate)\r\n            DBUpdate(\"keys\",8688112858732142464,\"+amount\", percentrate)\r\n        }\r\n\r\n        if ($lot_map[\"type_bargain\"] == 2){\r\n            DBUpdate(\"keys\",$key_id,\"-amount\", percentrate)\r\n            DBUpdate(\"keys\",8688112858732142464,\"+amount\", percentrate)\r\n            DBUpdate(\"keys\",$key_id,\"-amount,+deposit\",$step_rate,$step_rate)\r\n            DBInsert(\"buyers\",\"amount,lot_id,buyer_id\",$step_rate,$lot_id,$key_id)\r\n        }\r\n    }\r\n}",
            "Name": "AuctionProcess",
            "Type": "contracts"
        },
        {
            "Conditions": "true",
            "Value": "//This is a test sandbox contact allows you to test the _platform enviroment\r\ncontract PlatformSingup {\r\n    data {\r\n        role string\r\n    }\r\n    conditions {\r\n    }\r\n    action {\r\n        var notific_params map\r\n        notific_params[\"role\"] = $role\r\n        //member_id - is default for second function\r\n        //notifications_Send(\"rid,closure_type,sender,text_header,page_name,params_map\", 1, 0, $sender, \"New request for membership\", \"platform_role_acceptance\", notific_params)\r\n        notifications_Send(\"rid,sender,icon_name,text_header,text_body,page_name,params_map\", 1, 1, \"icon icon-user-follow\", \"Новый запрос для присвоения роли\", \"Подробнее\", \"platform_role_acceptance\", notific_params)\r\n    }\r\n}",
            "Name": "PlatformSingup",
            "Type": "contracts"
        },
        {
            "Conditions": "true",
            "Value": "contract lots_AdminAction {\r\n    data {\r\n        Action string\r\n        NotificId int\r\n        Id int\r\n        Comment string \"optional\"\r\n    }\r\n    func notifyBuyers(lotId int, lotName string){\r\n        var rid closureType sender int textHeader pageName string params map\r\n        closureType = 2\r\n        sender = 1\r\n        textHeader = \"Появился новый лот: \" + lotName\r\n        pageName = \"lots_view\"\r\n        params[\"lot_id\"] = lotId\r\n        params[\"note_for\"] = \"buyers\"\r\n        params = JSONEncode(params)\r\n        rid = $buyerRoleId\r\n        notifications_Send(\"rid,closure_type,sender,text_header,page_name,params_map\", rid, closureType, sender, textHeader, pageName, params)\r\n    }\r\n    conditions {\r\n        if $role_id != 1{\r\n            warning \"Access denied\"\r\n        }\r\n        $buyerRoleId = Int(DBFind(\"roles\").Where(\"role_name='Buyer'\").One(\"id\"))\r\n        if $buyerRoleId == 0{\r\n            warning \"'Buyer' role not found\"\r\n        }\r\n        $lot = DBFind(\"lots\").Where(\"id=? and deleted=0\", $Id).Row()\r\n        if !$lot {\r\n            warning \"Lot not found\"\r\n        }\r\n        if $lot[\"status\"] > 1 {\r\n            warning \"Bidding has already begun\"\r\n        }\r\n        if $Action == \"reject\" && Size($Comment) < 1 {\r\n            warning \"Пожалуйста укажите причину отказа\"\r\n        }\r\n    }\r\n\r\n    action {\r\n        if $Action == \"accept\" {\r\n            DBUpdate(\"lots\", $Id, \"status\", 1)\r\n            notifyBuyers($Id, $lot[\"name\"])\r\n        }\r\n        if $Action == \"reject\" {\r\n            DBUpdate(\"lots\", $Id, \"status,comment\", 5, $Comment)\r\n        }\r\n        notifications_Close(\"notific_id\", $NotificId)\r\n    }\r\n}",
            "Name": "lots_AdminAction",
            "Type": "contracts"
        },
        {
            "Conditions": "true",
            "Value": "contract lots_BuyerAction {\r\n    data {\r\n        Action string\r\n        NotificId string \"optional\"\r\n        Id int\r\n    }\r\n    conditions {\r\n        $NotificId = Int($NotificId)\r\n        if !DBFind(\"roles\").Where(\"role_name='Buyer' and id=?\", $role_id).One(\"id\") {\r\n            warning \"Access denied\"\r\n        }\r\n        $lot = DBFind(\"lots\").Where(\"id=?\", $Id).Row()\r\n        if !$lot {\r\n            warning \"Lot not found\"\r\n        }\r\n        $track = DBFind(\"lots_tracks\").Where(\"key_id=? and lot_id=?\", $key_id, $Id).Row()\r\n    }\r\n\r\n    action {\r\n        if $Action == \"track_accept\" {\r\n            if !$track {\r\n                DBInsert(\"lots_tracks\", \"key_id,lot_id\", $key_id, $Id)\r\n            }else{\r\n                DBUpdate(\"lots_tracks\", Int($track[\"id\"]), \"deleted\", 0)\r\n            }\r\n        }\r\n        if $Action == \"track_reject\" {\r\n            if $track {\r\n                DBUpdate(\"lots_tracks\", Int($track[\"id\"]), \"deleted\", 1)\r\n            }\r\n        }\r\n        if $NotificId>0{\r\n            notifications_Close(\"notific_id\", $NotificId)\r\n        }\r\n    }\r\n}",
            "Name": "lots_BuyerAction",
            "Type": "contracts"
        },
        {
            "Conditions": "true",
            "Value": "contract lots_Close {\r\n    data {\r\n        id int\r\n    }\r\n    conditions {\r\n        $lot = DBFind(\"lots\").Columns(\"id,seller,deleted,type_bargain\").WhereId($id).Row()\r\n        if !$lot {\r\n            warning \"Не удается закрыть лот: лот не найден\"\r\n        }\r\n        if $lot[\"deleted\"] == 1 {\r\n            warning \"Не удается закрыть лот: лот удален\"\r\n        }\r\n    }\r\n    action {\r\n        var buyer, params map\r\n        if $lot[\"type_bargain\"] == 2 {\r\n            buyer = DBFind(\"buyers\").Columns(\"id,buyer_id,amount\").Where(\"lot_id = ? and status = 0\", $id).Order(\"id ASC\").Row()\r\n        }else{\r\n            buyer = DBFind(\"buyers\").Columns(\"id,buyer_id,amount\").Where(\"lot_id = ? and status = 0\", $id).Order(\"amount DESC, id ASC\").Row()\r\n        }\r\n        params[\"lot_id\"] = $id\r\n        if !buyer {\r\n            DBUpdate(\"lots\", $id, \"status\", 5)\r\n            notifications_Send(\"member_id,sender,text_header,page_name,params_map\", $lot[\"seller\"], 1, \"Лот не продан: нет покупателей\", \"lots_view\", JSONEncode(params))\r\n        }else{\r\n            DBUpdate(\"lots\", $id, \"status,amount_final,buyer\", 3, buyer[\"amount\"], buyer[\"buyer_id\"])\r\n            notifications_Send(\"member_id,sender,text_header,page_name,params_map\", buyer[\"buyer_id\"], 1, \"Ваша ставка победила: необходимо подтверждение\", \"lots_view\", JSONEncode(params))\r\n        }\r\n    }\r\n}",
            "Name": "lots_Close",
            "Type": "contracts"
        },
        {
            "Conditions": "true",
            "Value": "contract lots_Delete {\r\n    data {\r\n        Id int\r\n    }\r\n    func closeNotes(){\r\n        var notes array i lenNotes int note map\r\n        notes = DBFind(\"notifications\").Where(\"page_params->lot_id=?\", $Id).Columns(\"id\")\r\n        lenNotes = Len(notes)\r\n        while i<lenNotes{\r\n            note = notes[i]\r\n            notifications_Close(\"notific_id\", Int(note[\"id\"]))\r\n            i=i+1\r\n        }\r\n    }\r\n    func removeTracks(){\r\n        var tracks array i lenTracks int track map\r\n        tracks = DBFind(\"lots_tracks\").Where(\"lot_id=?\", $Id).Columns(\"id\")\r\n        lenTracks = Len(tracks)\r\n        while i<lenTracks{\r\n            track = tracks[i]\r\n            DBUpdate(\"lots_tracks\", Int(track[\"id\"]), \"deleted\", 1)\r\n            i=i+1\r\n        }\r\n    }\r\n    conditions {\r\n        var lot map\r\n        lot = DBFind(\"lots\").Where(\"id=? and deleted=0\", $Id).Row()\r\n        if !lot {\r\n            warning \"Lot not found\"\r\n        }\r\n        if lot[\"status\"] > 0 && lot[\"status\"] != 5 {\r\n            warning \"You cannot delete a confirmed lot\"\r\n        }\r\n        if lot[\"seller\"] != $key_id {\r\n            warning \"You are not owner of the lot\"\r\n        }\r\n    }\r\n\r\n    action {\r\n        DBUpdate(\"lots\", $Id, \"deleted\", 1)\r\n        closeNotes()\r\n        removeTracks()\r\n    }\r\n}",
            "Name": "lots_Delete",
            "Type": "contracts"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract lots_InstallTypes {\r\n    data {}\r\n    func insertType(res,cat,params string){\r\n        if !DBFind(\"lots_types\").Where(\"deleted=0 and resource_name=?\", res).Row(){\r\n            DBInsert(\"lots_types\", \"resource_name,category,lots_params\", res, cat, params)\r\n        }\r\n    }\r\n    action {\r\n        // App Param \"lots_params\"\r\n        // 1. lots_dimensions: габариты (длинна / высота / ширина)\r\n        // 2. lots_weight: вес (кг/тонн)\r\n        // 3. lots_weight2: вес (кг/тонн/литры)\r\n        // 4. lots_counts: количество (шт.)\r\n\r\n        insertType(\"lots_type01\",\"1\", \"1,2,4\")\r\n        insertType(\"lots_type02\",\"2\", \"1,2,4\")\r\n        insertType(\"lots_type03\",\"2\", \"1,2,4\")\r\n        insertType(\"lots_type04\",\"3\", \"1,2,4\")\r\n        insertType(\"lots_type05\",\"3\", \"1,2,4\")\r\n        insertType(\"lots_type06\",\"3\", \"1,2,4\")\r\n        insertType(\"lots_type07\",\"4\", \"1,2,4\")\r\n        insertType(\"lots_type08\",\"4\", \"1,2,4\")\r\n        insertType(\"lots_type09\",\"4\", \"1,2,4\")\r\n        insertType(\"lots_type10\",\"4\", \"1,2,4\")\r\n        insertType(\"lots_type11\",\"4\", \"1,2,4\")\r\n        insertType(\"lots_type12\",\"4\", \"1,2,4\")\r\n        insertType(\"lots_type13\",\"5\", \"1,2,4\")\r\n        insertType(\"lots_type14\",\"5\", \"1,2,4\")\r\n        insertType(\"lots_type15\",\"5\", \"1,2,4\")\r\n        insertType(\"lots_type16\",\"5\", \"1,2,4\")\r\n        insertType(\"lots_type17\",\"6\", \"4\")\r\n        insertType(\"lots_type18\",\"6\", \"4\")\r\n        insertType(\"lots_type19\",\"6\", \"4\")\r\n        insertType(\"lots_type20\",\"6\", \"4\")\r\n        insertType(\"lots_type21\",\"6\", \"4\")\r\n        insertType(\"lots_type22\",\"7\", \"1,3,4\")\r\n        insertType(\"lots_type23\",\"7\", \"1,3,4\")\r\n        insertType(\"lots_type24\",\"7\", \"1,3,4\")\r\n        insertType(\"lots_type25\",\"7\", \"1,3,4\")\r\n        insertType(\"lots_type26\",\"7\", \"1,3,4\")\r\n        insertType(\"lots_type27\",\"8\", \"1,2,4\")\r\n        insertType(\"lots_type28\",\"9\", \"1,2,4\")\r\n        insertType(\"lots_type29\",\"10\", \"1,2,4\")\r\n        insertType(\"lots_type30\",\"10\", \"1,2,4\")\r\n        insertType(\"lots_type31\",\"10\", \"1,2,4\")\r\n        insertType(\"lots_type32\",\"10\", \"1,2,4\")\r\n        insertType(\"lots_type33\",\"11\", \"1,2,4\")\r\n        insertType(\"lots_type34\",\"11\", \"1,2,4\")\r\n        insertType(\"lots_type35\",\"11\", \"1,2,4\")\r\n        insertType(\"lots_type36\",\"12\", \"1,2,4\")\r\n        insertType(\"lots_type37\",\"12\", \"1,2,4\")\r\n        insertType(\"lots_type38\",\"12\", \"1,2,4\")\r\n        insertType(\"lots_type39\",\"13\", \"1,2,4\")\r\n        insertType(\"lots_type40\",\"13\", \"1,2,4\")\r\n        insertType(\"lots_type41\",\"13\", \"1,2,4\")\r\n        insertType(\"lots_type42\",\"13\", \"1,2,4\")\r\n        insertType(\"lots_type43\",\"13\", \"1,2,4\")\r\n        insertType(\"lots_type44\",\"13\", \"1,2,4\")\r\n        insertType(\"lots_type45\",\"13\", \"1,2,4\")\r\n\r\n    }\r\n}",
            "Name": "lots_InstallTypes",
            "Type": "contracts"
        },
        {
            "Conditions": "true",
            "Value": "contract lots_SellerAction {\r\n    data {\r\n        Action string\r\n        Id string \"optional\"\r\n        TypeId int\r\n        Name string\r\n        Description string\r\n        Photo bytes \"file\"\r\n        DateStart string \"date\"\r\n        TimeStart string \"date\"\r\n        DateEnd string \"date\"\r\n        TimeEnd string \"date\"\r\n        TypeBargain int\r\n        AmountStarting money\r\n        OrderMin money\r\n        OrderMax money\r\n\r\n        Location string\r\n        Condition int\r\n\r\n        Count int\r\n        Weight string \"optional\"\r\n        WeightType string \"optional\"\r\n        Length string \"optional\"\r\n        Width string \"optional\"\r\n        Height string \"optional\"\r\n    }\r\n    func trimZeroTime(s string) string{\r\n        if Contains(s, \"T00:00:00Z\"){\r\n            s = s Replace(s, \"T00:00:00Z\", \"\")\r\n        }\r\n        return s\r\n    }\r\n    func appendAll(items ...)array{\r\n        return items\r\n    }\r\n    func notifyAdmin(lotId int){\r\n        var rid closureType sender int textHeader pageName string params map\r\n        closureType = 2\r\n        sender = 1\r\n        textHeader = \"Новый лот: требуется подтверждение\"\r\n        pageName = \"lots_view\"\r\n        params[\"lot_id\"] = lotId\r\n        params[\"lot_status\"] = 0\r\n        params = JSONEncode(params)\r\n        rid = 1\r\n        notifications_Send(\"rid,closure_type,sender,text_header,page_name,params_map\", rid, closureType, sender, textHeader, pageName, params)\r\n    }\r\n    conditions {\r\n        $Id = Int($Id)\r\n        if !($Action == \"create\" || $Action == \"edit\") {\r\n            warning \"Lot: unknown action\"\r\n        }\r\n        if $Action == \"create\" {\r\n            RoleConditions(\"role\", \"Seller\")\r\n        }else{\r\n            $lot = DBFind(\"lots\").Where(\"id=? and deleted=0\", $Id).Row()\r\n\r\n            if !$lot {\r\n                warning \"Lot not found\"\r\n            }\r\n            if $lot[\"status\"] > 0 {\r\n                warning \"You cannot edit a confirmed lot\"\r\n            }\r\n            if $lot[\"seller\"] != $key_id {\r\n                warning \"You are not owner of the lot\"\r\n            }\r\n\r\n        }\r\n        $Weight = Int($Weight)\r\n        $WeightType = Int($WeightType)\r\n        $Length = Int($Length)\r\n        $Width = Int($Width)\r\n        $Height = Int($Height)\r\n\r\n        if $OrderMin > $OrderMax {\r\n            warning \"Minimum order bigger than maximum order\"\r\n        }\r\n        $dateStart = Sprintf(\"%v %v\", trimZeroTime($DateStart), $TimeStart)\r\n        $dateEnd = Sprintf(\"%v %v\", trimZeroTime($DateEnd), $TimeEnd)\r\n        $catId = Int(DBFind(\"lots_types\").Where(\"id=?\", $TypeId).One(\"category\"))\r\n    }\r\n\r\n    action {\r\n        var appId imageId contractFileId int imageName string\r\n        appId = Int(DBFind(\"applications\").Where(\"name = $ AND deleted = 0\", \"Trading Platform\").One(\"id\"))\r\n        imageName = Sprintf(\"%v_%v\", $key_id, $time)\r\n        if $Id > 0 {\r\n            imageName = DBFind(\"binaries\").Where(\"id=?\", $lot[\"photo\"]).One(\"name\")\r\n        }\r\n        imageId = @1UploadBinary(\"ApplicationId,Name,Data\", appId, imageName, $Photo)\r\n        // TODO: contractFileId генерировать внутри\r\n        // contractFileId = @1UploadBinary(\"ApplicationId,Name,Data,DataMimeType\", appId, \"lot_contract\", \"application/pdf\")\r\n\r\n        var fields string args array id int\r\n        args = appendAll($Name, $Description, imageId, $dateStart, $dateEnd, $AmountStarting, $OrderMin, $OrderMax, contractFileId, $Count, $Weight, $WeightType, $Length, $Width, $Height, $TypeId, $catId, $Location, $Condition, $TypeBargain)\r\n        fields = \"name,description,photo,date_start,date_end,amount_starting,order_min,order_max,contract_id,unit_count,weight,weight_type,length,width,height,lots_type_id,category,location,condition,type_bargain\"\r\n        if $Action == \"create\"{\r\n            fields = Sprintf(\"%v,timestamp date_creation,seller\", fields)\r\n            args = Append(args,$block_time)\r\n            args = Append(args,$key_id)\r\n            id = DBInsert(\"lots\", fields, args...)\r\n            notifyAdmin(id)\r\n            return\r\n        }\r\n        if $Action == \"edit\"{\r\n            DBUpdate(\"lots\", $Id, fields, args...)\r\n            return\r\n        }\r\n    }\r\n}",
            "Name": "lots_SellerAction",
            "Type": "contracts"
        },
        {
            "Conditions": "true",
            "Value": "contract lots_Sign {\r\n    data {\r\n        lot_id int\r\n        actions string\r\n        notific_id string \"optional\"\r\n    }\r\n    conditions {\r\n        $notific_id = Int($notific_id)\r\n        $lot = DBFind(\"lots\").Where(\"id=?\", $lot_id).Row()\r\n        if !$lot {\r\n            warning \"Не удается подписать контракт: лот не найден\"\r\n        }\r\n        if $lot[\"status\"] != 3 {\r\n            warning \"Не удается подписать контракт: контракт уже подписан\"\r\n        }\r\n    }\r\n    action {\r\n        var params map\r\n        params[\"lot_id\"] = $lot_id\r\n        if $actions == \"buyer_accept\" {\r\n            if $lot[\"buyer\"] == $key_id {\r\n                notifications_Send(\"member_id,sender,text_header,page_name,params_map\", $lot[\"seller\"], 1, \"Покупатель подписал контракт\", \"lots_view\", JSONEncode(params))\r\n                var buyer map\r\n                buyer = DBFind(\"buyers\").Columns(\"id,amount,buyer_id\").Where(\"lot_id=? and buyer_id=?\", $lot_id, $lot[\"buyer\"]).Row()\r\n                DBUpdate(\"buyers\", Int(buyer[\"id\"]), \"status\", 1)\r\n\r\n                DBUpdate(\"keys\", Int(buyer[\"buyer_id\"]), \"-deposit\", buyer[\"amount\"])\r\n                DBUpdate(\"keys\", Int($lot[\"seller\"]), \"+amount\", buyer[\"amount\"])\r\n                \r\n                var buyers array i int\r\n                buyers = DBFind(\"buyers\").Columns(\"id,amount,buyer_id\").Where(\"lot_id=?\", $lot_id)\r\n                while i < Len(buyers) {\r\n                    buyer = buyers[i]\r\n                    DBUpdate(\"keys\", Int(buyer[\"buyer_id\"]), \"+amount,-deposit\", buyer[\"amount\"], buyer[\"amount\"])\r\n                    i = i + 1\r\n                }\r\n                DBUpdate(\"lots\", $lot_id, \"status\", 4)\r\n            }\r\n        }\r\n        if $actions == \"buyer_reject\" {\r\n            if $lot[\"buyer\"] == $key_id {\r\n                var buyer map\r\n                buyer = DBFind(\"buyers\").Columns(\"id,amount,buyer_id\").Where(\"lot_id=? and buyer_id=?\", $lot_id, $lot[\"buyer\"]).Row()\r\n                DBUpdate(\"buyers\", Int(buyer[\"id\"]), \"status\", -1)\r\n                lots_Close(\"id\", $lot_id)\r\n            }\r\n        }\r\n        if $notific_id > 0{\r\n            notifications_Close(\"notific_id\", $notific_id)\r\n        }\r\n    }\r\n}",
            "Name": "lots_Sign",
            "Type": "contracts"
        },
        {
            "Conditions": "true",
            "Value": "contract platform_Acceptance {\r\n    data {\r\n        rname string\r\n        member_id int\r\n        notific_id int\r\n    }\r\n    func getMemberInfo(kid int) map {\r\n            var res member map\r\n            member = DBFind(\"members\").Where(\"id=?\", kid).Row()\r\n            if member {\r\n                res[\"member_id\"] = member[\"id\"]\r\n                res[\"member_name\"] = member[\"member_name\"]\r\n                res[\"image_id\"] = member[\"image_id\"]\r\n            }else{\r\n                member = DBFind(\"keys\").Where(\"id=?\", kid).Row()\r\n                if member {\r\n                    res[\"member_id\"] = member[\"id\"]\r\n                    res[\"member_name\"] = IdToAddress(Int(member[\"id\"]))\r\n                    res[\"image_id\"] = 0\r\n                }\r\n            }\r\n            return res\r\n        }\r\n    conditions {\r\n        //actually we should find role from \"string\" and check it's RoleID and then transfer string data to RoleID \"int\"\r\n        $rid = DBFind(\"roles\").Columns(\"id,role_name\").Where(\"role_name=?\", $rname).One(\"id\")\r\n        if $rid != nil {\r\n            Println($rname)\r\n        }\r\n        //check role exist\r\n        $role = DBFind(\"roles\").Columns(\"id,deleted,role_type,role_name,image_id,creator->member_id\").Where(\"id=?\", $rid).Row()\r\n        if !$role {\r\n            warning \"Role not found\"\r\n        }\r\n        //check member_id\r\n        if !DBFind(\"keys\").Where(\"id=?\", $member_id).Row() {\r\n            warning \"Key not found\"\r\n        }\r\n        //check if role not deleted\r\n        if $role[\"deleted\"] == 1 {\r\n            warning \"This role has been deleted. The appointment of members is impossible\"\r\n        }\r\n        //special Rules\r\n        var specialRules map prev_contract string stack array\r\n        stack = JSONDecode(JSONEncode($stack))\r\n        prev_contract = stack[0]\r\n        if Len(stack)>2{\r\n            prev_contract = stack[Len(stack)-2]\r\n        }\r\n        specialRules[\"@1sysparams_AcceptValidator\"] = \"Validator\"\r\n        specialRules[\"@1sysparams_DelegateRefresh\"] = \"Delegate\"\r\n        specialRules[\"@1sysparams_CandidateValidatorRequest\"] = \"Candidate for validators\"\r\n        specialRules[\"@1voting_TemplateRun\"] = \"Investor with voting rights\"\r\n        specialRules[\"@1tokenrefund_Start\"] = \"Investor with voting rights\"\r\n        if specialRules[prev_contract] != $role[\"role_name\"] {\r\n            Roles_CheckAccess(\"rid\", $rid)\r\n        }\r\n    }\r\n    action {\r\n        var role member appointer map\r\n        role[\"id\"] = $role[\"id\"]\r\n        role[\"type\"] = $role[\"role_type\"]\r\n        role[\"name\"] = $role[\"role_name\"]\r\n        role[\"image_id\"] = $role[\"image_id\"]\r\n\r\n        member = getMemberInfo($member_id)\r\n        appointer = getMemberInfo($key_id)\r\n\r\n        DBInsert(\"roles_participants\", \"role,member,appointed,timestamp date_created\", role, member, appointer, $block_time)\r\n        DBUpdate(\"notifications\", $notific_id, \"timestamp date_closed,closed\", $block_time, 1)\r\n        \r\n        var notific_params map\r\n        notific_params[\"role\"] = $rname\r\n        notifications_Send(\"member_id,sender,icon_name,text_header,text_body,page_name,params_map\", $member_id, 1, \"icon icon-user-follow\", \"Ваша заявка на роль была успешно одобрена\", \"Подробнее\", \"platform_role_success\", notific_params)\r\n    }\r\n}",
            "Name": "platform_Acceptance",
            "Type": "contracts"
        },
        {
            "Conditions": "true",
            "Value": "contract platform_Decline {\r\n    data {\r\n        rname string\r\n        member_id int\r\n        notific_id int\r\n    }\r\n    conditions {\r\n    }\r\n    action {\r\n        var notific_params map\r\n        notific_params[\"role\"] = $rname\r\n        notifications_Send(\"member_id,sender,icon_name,text_header,text_body,page_name,params_map\", $member_id, 1, \"icon icon-user-follow\", \"Ваша заявка на роль была отклонена\", \"Подробнее\", \"platform_role_fail\", notific_params)\r\n        notifications_Close(\"notific_id\", $notific_id)\r\n    }\r\n}",
            "Name": "platform_Decline",
            "Type": "contracts"
        },
        {
            "Conditions": "true",
            "Value": "contract platform_Singup {\r\n    data {\r\n        member_id int\r\n        name_first string\r\n        name_middle string\r\n        name_last string\r\n        company_name string\r\n        company_position string\r\n        member_name string\r\n        role string\r\n    }\r\n    conditions {\r\n        //if member_name & company & company_position, but not id\r\n        //if DBFind(\"platform_requests\").Columns(\"id\").Where(\"member_name = ? and company_name = ? and company_position = ?\", $member_name, $company_name, $company_position).One(\"id\"){\r\n            //warning Sprintf(\"Request from  %v already exists\", $member_name)\r\n        //}\r\n        //?????\r\n    }\r\n    action {\r\n        DBInsert(\"platform_requests\", \"member_id,name_first,name_middle,name_last,company_name,company_position,member_name,role,status\", $member_id, $name_first, $name_middle, $name_last, $company_name, $company_position, $member_name, $role, 0)\r\n    }\r\n}",
            "Name": "platform_Singup",
            "Type": "contracts"
        }
    ]
}