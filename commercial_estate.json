{
    "blocks": [],
    "contracts": [
        {
            "Name": "land_registry_Add",
            "Value": "contract land_registry_Add{\n    data{\n        OwnerId int\n        Coords string\n        BuildingsUseClass int\n        LeasingPrice int\n    }\n    \n    func conditions{\n        var member map\n        member = DBFind(\"members\").Where(\"id = ?\", $OwnerId).Row()\n        if !member {\n            warning \"Member account for Owner not found\"\n        }\n    }\n    func action{\n        var coords map\n        coords = JSONToMap($Coords)\n        $coordsAddress = coords[\"address\"]\n        $area = Sprintf(\"%.0f\", coords[\"area\"])\n        \n        DBInsert(\"land_registry\", \"owner_id,address,area,buildings_use_class,map_coords,timestamp date_create,leasing_price,delete\", \n            $OwnerId, $coordsAddress, $area, $BuildingsUseClass, $Coords, $block_time, $LeasingPrice, 0)\n    }\n}",
            "Conditions": "ContractConditions(`MainCondition`)"
        },
        {
            "Name": "land_registry_CheckDate",
            "Value": "contract land_registry_CheckDate {\n    data {\n        now_time_d int\n        now_time_m int\n        now_time_y int\n    }\n\n    conditions {\n\n        var v_now_time_d string\n        var v_now_time_m_minus string\n        var v_now_time_m_real string\n        var v_now_time_y string\n\n        if ($now_time_d < 10){\n            v_now_time_d = \"0\" + Str($now_time_d)\n        } else {\n            v_now_time_d = Str($now_time_d)\n        }\n\n        if ($now_time_m < 10){\n            v_now_time_m_minus = \"0\" + Str($now_time_m - 1)\n            v_now_time_m_real = \"0\" + Str($now_time_m)\n        } else {\n            v_now_time_m_minus = Str($now_time_m-1)\n            v_now_time_m_real =  Str($now_time_m)\n        }\n\n        v_now_time_y = Str($now_time_y)\n\n\n        $now_time_minus = Sprintf(\"%v-%v-%v\", v_now_time_y, v_now_time_m_minus, v_now_time_d)\n        $now_time_real = Sprintf(\"%v-%v-%v\", v_now_time_y, v_now_time_m_real, v_now_time_d)\n\n        //warning  $now_time_minus\n    }\n\n    action {\n\n        //обнуляем request_status у всех записей\n        $i = 0\n        $ret_land = DBFind(\"land_registry\").Where(\"id > 0\").Order(\"id\")\n\n        while ($i < Len($ret_land)) {\n            var vals_land map\n            vals_land = $ret_land[$i]\n\n            var land_id int\n            land_id = Int(vals_land[\"id\"])\n\n            DBUpdate(\"land_registry\", land_id, \"request_status\", 0)\n\n            $i = $i + 1\n        }\n\n        // аренда кончилась - залог возвращен\n        $i = 0\n        $ret_land = DBFind(\"land_registry\").Where(\"isleasing > $\", 0).Order(\"id\")\n\n        while ($i < Len($ret_land)) {\n            var vals_land map\n            vals_land = $ret_land[$i]\n\n            var land_id int\n            land_id = Int(vals_land[\"id\"])\n\n            $leasing_map = DBFind(\"land_registry_leasing\").Where(\"date_finish <= $ and land_id=$ and status > 0\", $now_time_real, land_id).Row()\n            if $leasing_map {\n\n                $sender_map = DBFind(\"accounts\").Where(\"onhold=$ and member_id=$\", 0, Str(vals_land[\"owner_id\"])).Row()\n                $recipient_map = DBFind(\"accounts\").Where(\"onhold=$ and member_id=$\", 0, Str($leasing_map[\"member_id\"])).Row()\n                $sender_amount = DBFind(\"accounts\").Where(\"id=$\", Int($sender_map[\"id\"])).One(\"amount\")\n\n                if (  Money($sender_amount) >= Money(Int(vals_land[\"leasing_price\"]))  ){\n                    Tokens_Transfer(\"sender_id,recipient_id,amount\", Int($sender_map[\"id\"]), Int($recipient_map[\"id\"]), Money(Int(vals_land[\"leasing_price\"])))\n\n                    DBInsert(\"land_registry_history\", \"sender,recipient,amount,comment,date_create\", \n                        Int(vals_land[\"owner_id\"]), Int($leasing_map[\"member_id\"]), Int(vals_land[\"leasing_price\"]), \"leasing_return_deposit\", Str($now_time_real) + (\" 00:00\"))\n                }\n\n                // статус - аренда кончилась - залог возвращен\n                // статус земли - свободна для аренды\n                DBUpdate(\"land_registry\", land_id, \"isleasing,request_status\", 0, 1)\n\n                //статус договора - расторгнут\n                DBUpdate(\"land_registry_leasing\", Int($leasing_map[\"id\"]), \"status\", -1)\n            }\n\n            $i = $i + 1\n        }\n\n\n        // списание аренданой платы за месяц для уже работающих договоров\n        $i = 0\n        $ret_land = DBFind(\"land_registry\").Where(\"isleasing > $\", 0).Order(\"id\")\n\n        while ($i < Len($ret_land)) {\n            var vals_land map\n            vals_land = $ret_land[$i]\n\n            var land_id int\n            land_id = Int(vals_land[\"id\"])\n\n            $leasing_map = DBFind(\"land_registry_leasing\").Where(\"date_payment <= $ and land_id=$ and status > 0\", $now_time_minus, land_id).Row()\n            if $leasing_map {\n\n                $sender_map = DBFind(\"accounts\").Where(\"onhold=$ and member_id=$\", 0, Str($leasing_map[\"member_id\"])).Row()\n                $recipient_map = DBFind(\"accounts\").Where(\"onhold=$ and member_id=$\", 0, Str(vals_land[\"owner_id\"])).Row()\n                $sender_amount = DBFind(\"accounts\").Where(\"id=$\", Int($sender_map[\"id\"])).One(\"amount\")\n\n                if (  Money($sender_amount) >= Money(Int(vals_land[\"leasing_price\"]))  ){\n                    Tokens_Transfer(\"sender_id,recipient_id,amount\", Int($sender_map[\"id\"]), Int($recipient_map[\"id\"]), Money(Int(vals_land[\"leasing_price\"])))\n\n                    DBInsert(\"land_registry_history\", \"sender,recipient,amount,comment,date_create\", \n                        Int($leasing_map[\"member_id\"]), Int(vals_land[\"owner_id\"]), Int(vals_land[\"leasing_price\"]), \"leasing_payment\", Str($now_time_real) + (\" 00:00\"))\n\n                    // статус - списана аренданая плата за месяц\n                    DBUpdate(\"land_registry\", land_id, \"request_status\", 2)\n\n                    // записываем новую дату последнего платежа  \n                    DBUpdate(\"land_registry_leasing\", Int($leasing_map[\"id\"]), \"date_payment\", $now_time_real)\n                } else {\n\n                    // статус - не хватило баланса, договор расторгнут\n                    // статус земли - свободна для аренды\n                    DBUpdate(\"land_registry\", land_id, \"isleasing,request_status\", Int($leasing_map[\"id\"]), 3)\n\n                    //статус договора - расторгнут\n                    DBUpdate(\"land_registry_leasing\", Int($leasing_map[\"id\"]), \"status\", -1)\n                }\n\n            }\n\n            $i = $i + 1\n        }\n\n\n\n        // первое списание арендной платы и старт договора\n        $i = 0\n        $ret_land = DBFind(\"land_registry\").Where(\"isleasing = $\", 0).Order(\"id\")\n\n        while ($i < Len($ret_land)) {\n            var vals_land map\n            vals_land = $ret_land[$i]\n\n            var land_id int\n            land_id = Int(vals_land[\"id\"])\n\n            $leasing_map = DBFind(\"land_registry_leasing\").Where(\"date_start <= $ and land_id=$ and status > 0\", $now_time_real, land_id).Row()\n            if $leasing_map {\n\n                $sender_map = DBFind(\"accounts\").Where(\"onhold=$ and member_id=$\", 0, Str($leasing_map[\"member_id\"])).Row()\n                $recipient_map = DBFind(\"accounts\").Where(\"onhold=$ and member_id=$\", 0, Str(vals_land[\"owner_id\"])).Row()\n                $sender_amount = DBFind(\"accounts\").Where(\"id=$\", Int($sender_map[\"id\"])).One(\"amount\")\n\n                if (  Money($sender_amount) >= Money(Int(vals_land[\"leasing_price\"]))  ){\n                    Tokens_Transfer(\"sender_id,recipient_id,amount\", Int($sender_map[\"id\"]), Int($recipient_map[\"id\"]), Money(Int(vals_land[\"leasing_price\"])))\n\n                    DBInsert(\"land_registry_history\", \"sender,recipient,amount,comment,date_create\", \n                        Int($leasing_map[\"member_id\"]), Int(vals_land[\"owner_id\"]), Int(vals_land[\"leasing_price\"]), \"leasing_payment\", Str($now_time_real) + (\" 00:00\"))\n\n                    // статус - списана аренданая плата за месяц\n                    // статус земли - в аренде \n                    DBUpdate(\"land_registry\", land_id, \"request_status,isleasing\", 2, Int($leasing_map[\"id\"]))\n\n                    // записываем новую дату последнего платежа\n                    DBUpdate(\"land_registry_leasing\", Int($leasing_map[\"id\"]), \"date_payment\", $now_time_real)\n                } else {\n\n                    // статус - не хватило баланса, договор расторгнут\n                    // статус земли - свободна для аренды\n                    DBUpdate(\"land_registry\", land_id, \"isleasing,request_status\", 0, 3)\n\n                    //статус договора - расторгнут\n                    DBUpdate(\"land_registry_leasing\", Int($leasing_map[\"id\"]), \"status\", -1)\n                }\n\n            }\n\n            $i = $i + 1\n        }\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "land_registry_Delete",
            "Value": "contract land_registry_Delete{\n    data{\n        LandId int\n    }\n    \n    func conditions{}\n    \n    func action{\n        DBUpdate(\"land_registry\", $LandId, \"delete\", \"1\")\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "land_registry_Leasing_Accept",
            "Value": "contract land_registry_Leasing_Accept {\n    data {\n        LandId int\n        leasing_id int\n        notific_id int\n    }\n\n    conditions {\n        $land_map = DBFind(\"land_registry\").Where(\"id = ?\", $LandId).Row()\n        if !$land_map {\n            warning \"Land not found\"\n        }\n\n        $leasing_map = DBFind(\"land_registry_leasing\").Where(\"id = ?\", $leasing_id).Row()\n        if !$leasing_map {\n            warning \"Leasing not found\"\n        }\n    }\n\n    action {\n        DBUpdate(\"land_registry_leasing\", $leasing_id, \"status\", 1)\n\n        var icon, header, body, page, params string\n        icon = \"fa-bell\"\n        header = \"$leasing_request$\"\n        body = \"$need_your_processing$\"\n        page = \"land_registry_view\"\n\n        var params string\n        params = \"leasing_id=\" + Str($leasing_id) + \",\"\n        params = params + \"LandId=\" + Str($LandId)\n\n        Notifications_Single_Send(\"member_id,icon_name,text_header,text_body,page_name,params_val\", Int($leasing_map[\"member_id\"]), icon, header, body, page, params)\n        Notifications_Single_Close(\"notific_id\", $notific_id)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "land_registry_Leasing_Add",
            "Value": "contract land_registry_Leasing_Add {\n    data {\n        LandId int\n        date_start string \"date\"\n        date_finish string \"date\"\n    }\n\n    conditions {\n        $land_map = DBFind(\"land_registry\").Where(\"id = ?\", $LandId).Row()\n        if !$land_map {\n            warning \"Land not found\"\n        }\n    }\n\n    action {\n        $leasing_id = DBInsert(\"land_registry_leasing\", \"land_id,member_id,date_start,date_finish,leasing_price,status\", \n            Int($land_map[\"id\"]), $key_id, $date_start, $date_finish, Int($land_map[\"leasing_price\"]), 0 )\n\n        var icon, header, body, page, params string\n        icon = \"fa-bell\"\n        header = \"$leasing_request$\"\n        body = \"$need_your_processing$\"\n        page = \"land_registry_view\"\n\n        var params string\n        params = \"leasing_id=\" + Str($leasing_id) + \",\"\n        params = params + \"LandId=\" + Str($land_map[\"id\"])\n\n        Notifications_Single_Send(\"member_id,icon_name,text_header,text_body,page_name,params_val\", Int($land_map[\"owner_id\"]), icon, header, body, page, params)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "land_registry_Leasing_Reject",
            "Value": "contract land_registry_Leasing_Reject {\n    data {\n        LandId int\n        leasing_id int\n        notific_id int\n    }\n\n    conditions {\n        $land_map = DBFind(\"land_registry\").Where(\"id = ?\", $LandId).Row()\n        if !$land_map {\n            warning \"Land not found\"\n        }\n\n        $leasing_map = DBFind(\"land_registry_leasing\").Where(\"id = ?\", $leasing_id).Row()\n        if !$leasing_map {\n            warning \"Leasing not found\"\n        }\n    }\n\n    action {\n        DBUpdate(\"land_registry_leasing\", $leasing_id, \"status\", -1)\n        Notifications_Single_Close(\"notific_id\", $notific_id)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "land_registry_Leasing_SendToken",
            "Value": "contract land_registry_Leasing_SendToken {\n    data {\n        LandId int\n        leasing_id int\n        notific_id int\n        now_time string \"date\"\n    }\n\n    conditions {\n        $land_map = DBFind(\"land_registry\").Where(\"id = ?\", $LandId).Row()\n        if !$land_map {\n            warning \"Land not found\"\n        }\n\n        $leasing_map = DBFind(\"land_registry_leasing\").Where(\"id = ?\", $leasing_id).Row()\n        if !$leasing_map {\n            warning \"Leasing not found\"\n        }\n    }\n\n    action {\n\n        $sender_map = DBFind(\"accounts\").Where(\"onhold=$ and member_id=$\", 0, Str($leasing_map[\"member_id\"])).Row()\n        $recipient_map = DBFind(\"accounts\").Where(\"onhold=$ and member_id=$\", 0, Str($land_map[\"owner_id\"])).Row()\n        $sender_amount = DBFind(\"accounts\").Where(\"id=$\", Int($sender_map[\"id\"])).One(\"amount\")\n\n        // переводим залог\n        if (  Int($sender_amount) >= Int($land_map[\"leasing_price\"])  ){\n            Tokens_Transfer(\"sender_id,recipient_id,amount\", Int($sender_map[\"id\"]), Int($recipient_map[\"id\"]), Money(Int($land_map[\"leasing_price\"])))\n            DBInsert(\"land_registry_history\", \"sender,recipient,amount,comment,date_create\", \n                Int($leasing_map[\"member_id\"]), Int($land_map[\"owner_id\"]), Int($land_map[\"leasing_price\"]), \"leasing_sending_deposit\", Str($now_time) + (\" 00:00\"))\n        } else {\n            warning \"Not enough funds on balance\"\n        }\n\n        // статус договора - заключен. ждем дату начала аренды\n        DBUpdate(\"land_registry_leasing\", $leasing_id, \"status\", 2)\n\n        // проверяем, не настала ли дата арены\n        $leasing_map = DBFind(\"land_registry_leasing\").Where(\"date_start::date <= $ and id=$\", $now_time, $leasing_id).Row()\n        if $leasing_map {\n\n            $sender_amount2 = DBFind(\"accounts\").Where(\"id=$\", Int($sender_map[\"id\"])).One(\"amount\")\n            if (  Int($sender_amount2) >= Int($land_map[\"leasing_price\"])  ){\n                Tokens_Transfer(\"sender_id,recipient_id,amount\", Int($sender_map[\"id\"]), Int($recipient_map[\"id\"]), Money(Int($land_map[\"leasing_price\"])))\n\n                DBInsert(\"land_registry_history\", \"sender,recipient,amount,comment,date_create\", \n                    Int($leasing_map[\"member_id\"]), Int($land_map[\"owner_id\"]), Int($land_map[\"leasing_price\"]), \"leasing_payment\", Str($now_time) + (\" 00:00\"))\n\n                //записываем новую дату платежа\n                DBUpdate(\"land_registry_leasing\", $leasing_id, \"date_payment\", $now_time)\n                // статус земли - в аренде\n                DBUpdate(\"land_registry\", $LandId, \"isleasing\", $leasing_id)\n            } else {\n                warning \"Not enough funds on balance\"\n            }\n        }\n\n        Notifications_Single_Close(\"notific_id\", $notific_id)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "land_registry_history_del",
            "Value": "contract land_registry_history_del {\n    data {\n\n    }\n\n    conditions {\n\n    }\n\n    action {\n        DBUpdateExt(\"land_registry_history\", \"deleted\", \"0\", \"deleted\", 1) \n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        }
    ],
    "data": [],
    "languages": [
        {
            "Name": "area_size",
            "Conditions": "",
            "Trans": "{\"en\":\"Area size\",\"ru\":\"Размер\"}"
        },
        {
            "Name": "check",
            "Conditions": "",
            "Trans": "{\"en\":\"Check\",\"ru\":\"Проверить\"}"
        },
        {
            "Name": "class",
            "Conditions": "",
            "Trans": "{\"en\":\"Class\",\"ru\":\"Класс\"}"
        },
        {
            "Name": "clear",
            "Conditions": "",
            "Trans": "{\"en\":\"Clear\",\"ru\":\"Очистить\"}"
        },
        {
            "Name": "date",
            "Conditions": "",
            "Trans": "{\"en\":\"Date\",\"ru\":\"Дата\"}"
        },
        {
            "Name": "day",
            "Conditions": "",
            "Trans": "{\"en\":\"Day\",\"ru\":\"День\"}"
        },
        {
            "Name": "department_of_land_resources",
            "Conditions": "",
            "Trans": "{\"en\":\"Department of Property Registry\",\"ru\":\"Отдел недвижимости\"}"
        },
        {
            "Name": "land_record",
            "Conditions": "",
            "Trans": "{\"en\":\"Property Records \",\"ru\":\"Недвижимость\"}"
        },
        {
            "Name": "land_records",
            "Conditions": "",
            "Trans": "{\"en\":\"Property Registry\",\"ru\":\"Реестр недвижимости\"}"
        },
        {
            "Name": "land_records_add",
            "Conditions": "",
            "Trans": "{\"en\":\"Add property\",\"ru\":\"Добавить недвижимость\"}"
        },
        {
            "Name": "leasing",
            "Conditions": "",
            "Trans": "{\"en\":\"Leasing\",\"ru\":\"Аренда\"}"
        },
        {
            "Name": "leasing_contract_signed",
            "Conditions": "",
            "Trans": "{\"en\":\"Contract is signed\",\"ru\":\"Контракт подписан\"}"
        },
        {
            "Name": "leasing_contract_terminated",
            "Conditions": "",
            "Trans": "{\"en\":\"Contract is terminated\",\"ru\":\"Контракт расторгнут\"}"
        },
        {
            "Name": "leasing_contract_waiting_payment",
            "Conditions": "",
            "Trans": "{\"en\":\"Waiting for payment\",\"ru\":\"Ожидание платежа\"}"
        },
        {
            "Name": "leasing_contract_waiting_response",
            "Conditions": "",
            "Trans": "{\"en\":\"Waiting for a response\",\"ru\":\"Ожидание ответа\"}"
        },
        {
            "Name": "leasing_contracts",
            "Conditions": "",
            "Trans": "{\"en\":\"Leasing contracts\",\"ru\":\"Контракты аренды\"}"
        },
        {
            "Name": "leasing_end_date",
            "Conditions": "",
            "Trans": "{\"en\":\"End date\",\"ru\":\"Дата завершения\"}"
        },
        {
            "Name": "leasing_payment",
            "Conditions": "",
            "Trans": "{\"en\":\"Payment\",\"ru\":\"Платеж\"}"
        },
        {
            "Name": "leasing_payment_date",
            "Conditions": "",
            "Trans": "{\"en\":\"Payment date\",\"ru\":\"Дата платежа\"}"
        },
        {
            "Name": "leasing_price",
            "Conditions": "",
            "Trans": "{\"en\":\"Leasing price\",\"ru\":\"Цена аренды\"}"
        },
        {
            "Name": "leasing_return_deposit",
            "Conditions": "",
            "Trans": "{\"en\":\"Return of deposit\",\"ru\":\"Возврат депозита\"}"
        },
        {
            "Name": "leasing_sending_deposit",
            "Conditions": "",
            "Trans": "{\"en\":\"Sending deposit\",\"ru\":\"Отправка депозита\"}"
        },
        {
            "Name": "leasing_start_date",
            "Conditions": "",
            "Trans": "{\"en\":\"Start date\",\"ru\":\"Дата начала\"}"
        },
        {
            "Name": "map",
            "Conditions": "",
            "Trans": "{\"en\":\"Map\",\"ru\":\"Карта\"}"
        },
        {
            "Name": "month",
            "Conditions": "",
            "Trans": "{\"en\":\"Month\",\"ru\":\"Месяц\"}"
        },
        {
            "Name": "owner",
            "Conditions": "",
            "Trans": "{\"en\":\"Owner\",\"ru\":\"Владелец\"}"
        },
        {
            "Name": "price",
            "Conditions": "",
            "Trans": "{\"en\":\"Price\",\"ru\":\"Цена\"}"
        },
        {
            "Name": "request_date",
            "Conditions": "",
            "Trans": "{\"en\":\"Request date\",\"ru\":\"Дата запроса\"}"
        },
        {
            "Name": "send_request",
            "Conditions": "",
            "Trans": "{\"en\":\"Send request\",\"ru\":\"Послать запрос\"}"
        },
        {
            "Name": "sender",
            "Conditions": "",
            "Trans": "{\"en\":\"Sender\",\"ru\":\"Отправитель\"}"
        },
        {
            "Name": "year",
            "Conditions": "",
            "Trans": "{\"en\":\"Year\",\"ru\":\"Год\"}"
        }
    ],
    "menus": [
        {
            "Name": "default_menu",
            "Value": "MenuItem(Title:$land_records$, Page: land_registry_records,Icon: \"fa icon-home\")",
            "Conditions": "ContractConditions(\"MainCondition\")"
        }
    ],
    "pages": [
        {
            "Name": "land_registry_add",
            "Value": "Div(content-wrapper){\n    Div(breadcrumb){\n        Div(){\n            LinkPage(LangRes(land_records), land_registry_records)\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\n            Span(LangRes(land_records_add), text-muted)\n        }\n    }\n    SetTitle($department_of_land_resources$)\n    \n    Div(row df f-valign){\n        Div(col-sm-8 col-sm-offset-2 text-left){\n            Div(Class: panel panel-primary){\n                Div(Class: panel-heading, Body: LangRes(land_records_add))\n                Form(){\n                    Div(list-group-item){\n                        Div(row df f-valign){\n                            Div(col-md-3 mt-sm text-right){\n                                Strong(LangRes(address))\n                            }\n                            Div(col-md-9 mc-sm text-center){\n                                InputMap(Name: Coords,Type: polygon, MapType: hybrid, Value: `{\"zoom\":8, \"center\":{\"lat\":51.5079382015037,\"lng\":-0.1277212352620154}}`)\n                            }\n                        }\n                    }\n                    Div(list-group-item){\n                        Div(row df f-valign){\n                            Div(col-md-3 mt-sm text-right){\n                                Strong(LangRes(owner))\n                            }\n                            Div(col-md-9 mc-sm text-left){\n                                DBFind(Name: members, Source: src_owners)\n                                Select(Name: OwnerId, Source: src_owners, ValueColumn: id, NameColumn: member_name, Class: form-control m-b)\n                            }\n                        }\n                    }\n                    Div(list-group-item){\n                        Div(row df f-valign){\n                            Div(col-md-3 mt-sm text-right){\n                                Strong(LangRes(class))\n                            }\n                            Div(col-md-9 mc-sm text-left){\n                                EcosysParam(Name: land_buildings_use_class, Source: src_buildings_use_class)\n                                Select(Name: BuildingsUseClass, Source: src_buildings_use_class, Class: form-control, ValueColumn: id, NameColumn: name)\n                            }\n                        }\n                    }\n                    Div(Class: list-group-item){\n                        Div(Class: row df f-valign){\n                \t\t\tDiv(Class: col-md-3 mt-sm text-right){\n                                Label(For: volume){\n                                    Span(Body: LangRes(leasing_price))\n                                }\n                            }\n                \t\t\tDiv(Class: col-md-9 mc-sm text-left){\n                                Input(Name: LeasingPrice, Class: form-control, Type: number, Value: 0)\n                            }\n                        }                       \n                    }\n                    \n                    Div(panel-footer){\n                        Div(clearfix){\n                            Div(pull-right){\n                                Div(btn-group){\n                                    Button(Page: land_registry_records, Body: LangRes(back), Class: btn btn-default btn-pill-left)\n                                    Button(Body: LangRes(add), Class: btn btn-primary btn-pill-right, Contract: land_registry_Add, Page: land_registry_records)\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Menu": "default_menu"
        },
        {
            "Name": "land_registry_check",
            "Value": "Div(content-wrapper){\r\n\r\n    SetTitle($leasing$)\r\n    Div(breadcrumb){\r\n        Div(){\r\n            LinkPage(LangRes(land_records), land_registry_records)\r\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n            Span(LangRes(leasing), text-muted)\r\n        }\r\n    }\r\n    \r\n    Div(row df f-valign){\r\n        Div(col-sm-6 col-sm-offset-3 text-left){\r\n            Div(Class: panel panel-primary){\r\n                Div(Class: panel-heading, Body: LangRes(leasing))\r\n                Form(){\r\n                    Div(Class: list-group-item){\r\n                        Div(Class: row df f-valign){\r\n                \t\t\tDiv(Class: col-md-3 mt-lg text-center){\r\n                                Label(For: volume){\r\n                                    Span(Body: LangRes(request_date))\r\n                                }\r\n                            }\r\n                \t\t\tDiv(Class: col-md-3 mc-sm text-left){\r\n                                Data(src_now_time_d,\"id,name\"){\r\n                                    1,\"1\"\r\n                                    2,\"2\"\r\n                                    3,\"3\"\r\n                                    4,\"4\"\r\n                                    5,\"5\"\r\n                                    6,\"6\"\r\n                                    7,\"7\"\r\n                                    8,\"8\"\r\n                                    9,\"9\"\r\n                                    10,\"10\"\r\n                                    11,\"11\"\r\n                                    12,\"12\"\r\n                                    13,\"13\"\r\n                                    14,\"14\"\r\n                                    15,\"15\"\r\n                                    16,\"16\"\r\n                                    17,\"17\"\r\n                                    18,\"18\"\r\n                                    19,\"19\"\r\n                                    20,\"20\"\r\n                                    21,\"21\"\r\n                                    22,\"22\"\r\n                                    23,\"23\"\r\n                                    24,\"24\"\r\n                                    25,\"25\"\r\n                                    26,\"26\"\r\n                                    27,\"27\"\r\n                                    28,\"28\"\r\n                                    29,\"29\"\r\n                                    30,\"30\"\r\n                                    31,\"31\"\r\n                                }\r\n\t\t\t\t\t\t\t\tSpan(Class: text-muted, Body: $day$)\r\n                                Select(Name: now_time_d, Source: src_now_time_d, NameColumn: name, ValueColumn: id)\r\n                            }\r\n                \t\t\tDiv(Class: col-md-3 mc-sm text-left){\r\n                                Data(src_now_time_m,\"id,name\"){\r\n                                    1,\"1\"\r\n                                    2,\"2\"\r\n                                    3,\"3\"\r\n                                    4,\"4\"\r\n                                    5,\"5\"\r\n                                    6,\"6\"\r\n                                    7,\"7\"\r\n                                    8,\"8\"\r\n                                    9,\"9\"\r\n                                    10,\"10\"\r\n                                    11,\"11\"\r\n                                    12,\"12\"\r\n                                }\r\n\t\t\t\t\t\t\t\tSpan(Class: text-muted, Body: $month$)\r\n                                Select(Name: now_time_m, Source: src_now_time_m, NameColumn: name, ValueColumn: id, Value: \"3\")\r\n                            }\r\n                \t\t\tDiv(Class: col-md-3 mc-sm text-left){\r\n                                Data(src_now_time_y,\"id,name\"){\r\n                                    2015,\"2015\"\r\n                                    2016,\"2016\"\r\n                                    2017,\"2017\"\r\n                                    2018,\"2018\"\r\n                                    2019,\"2019\"\r\n                                    2020,\"2020\"\r\n                                    2021,\"2021\"\r\n                                    2022,\"2022\"\r\n                                }\r\n\t\t\t\t\t\t\t\tSpan(Class: text-muted, Body: $year$)\r\n                                Select(Name: now_time_y, Source: src_now_time_y, NameColumn: name, ValueColumn: id, Value: \"2018\")\r\n                            }\r\n                        }                       \r\n                    }\r\n                    \r\n                    Div(panel-footer){\r\n                        Div(clearfix){\r\n                            Div(pull-right){\r\n                                Div(btn-group){\r\n\t\t\t\t\t\t\t\t\tButton(Page: land_registry_records, Body: LangRes(back), Class: btn btn-default btn-pill-left)\r\n\t\t\t\t\t\t\t\t\tButton(Page: land_registry_check, PageParams: \"v_request_status=1\", Contract: land_registry_CheckDate, Class: btn btn-primary, Body: $check$)\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tDBFind(Name: land_registry_history, Source: src_land_registry_history).Order(\"id desc\").Custom(_id){\r\n\t\t\t\tSpan(#id#)\r\n\t\t\t}.Custom(_amount){\r\n\t\t\t\tSpan(#amount#)\r\n\t\t\t}.Custom(_comment){\r\n\t\t\t\tSpan(LangRes(#comment#))   \r\n\t\t\t}.Custom(_sender){\r\n\t\t\t\tDBFind(Name: members, Source: src_members).Where(\"id=#sender#\").Vars(row)\r\n\t\t\t\tLinkPage(Page: profile_view, PageParams: \"v_member_id=#row_id#\"){\r\n\t\t\t\t\tIf(#row_avatar# != \"\"){\r\n\t\t\t\t\t\tImage(Src: \"#row_avatar#\", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tSpan(Class: h5 text-bold, Body: #row_member_name#)\r\n\t\t\t\t}\r\n\t\t\t}.Custom(_recipient){\r\n\t\t\t\tDBFind(Name: members, Source: src_members).Where(\"id=#recipient#\").Vars(row2)\r\n\t\t\t\tLinkPage(Page: profile_view, PageParams: \"v_member_id=#row2_id#\"){\r\n\t\t\t\t\tIf(#row2_avatar# != \"\"){\r\n\t\t\t\t\t\tImage(Src: \"#row2_avatar#\", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tSpan(Class: h5 text-bold, Body: #row2_member_name#)\r\n\t\t\t\t}\r\n\t\t\t}.Custom(_date){\r\n\t\t\t\tP(Class: m0, Body: DateTime(DateTime: #date_create#, Format: \"DD.MM.YYYY\"))\r\n\t\t\t}.Where(\"deleted = 0\")\r\n\t\t\t\r\n\t\t\tDiv(panel panel-primary data-sweet-alert){\r\n\t\t\t\tDiv(list-group-item){\r\n\t\t\t\t\tDiv(table-responsive){\r\n\t\t\t\t\t\tTable(Source:src_land_registry_history,Columns: \"=_id,$sender$=_sender,$recipient$=_recipient,$amount$=_amount,$date$=_date,=_comment\")\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n                Div(panel-footer){\r\n                    Div(clearfix){\r\n                        Div(pull-left){\r\n                            Div(btn-group){\r\n                                Button(Page: land_registry_check, Contract: land_registry_history_del, Class: btn btn-default, Body: $clear$)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n\t\t\t}\r\n        }\r\n    }\r\n}",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Menu": "default_menu"
        },
        {
            "Name": "land_registry_records",
            "Value": "Div(content-wrapper){\n    SetTitle($land_records$)\n    Div(breadcrumb){\n        Span(Class: text-muted, Body: $land_records$)\n    }\n\n\tIf(#isSearch#==1){\n\t}.Else{\n\t\tSetVar(isSearch, \"0\")\n\t}\n\t\n    Div(panel panel-primary data-sweet-alert){\n\t\tForm(){\n\t\t\tDiv(list-group-item){\n\t\t\t\tDiv(row df f-valign){\n\t\t\t\t\tDiv(col-md-1 mt-sm text-center text-bold){Span($class$)}\n\t\t\t\t\tDiv(col-md-8 mc-sm text-left){\n\t\t\t\t\t\tDiv(Class: input-group){\n\t\t\t\t\t\t\tEcosysParam(Name: land_buildings_use_class, Source: src_buildings_use_class)\n\t\t\t\t\t\t\tSelect(Name: LandUseSelect, Source: src_buildings_use_class, Class: form-control, NameColumn: name, ValueColumn: id, Value: #str_search#)\n\t\t\t\t\t\t\tDiv(input-group-btn){\n\t\t\t\t\t\t\t\tButton(Page: land_registry_records, PageParams: \"str_search=Val(LandUseSelect),isSearch=1,isOrder=#isOrder#\", Class: btn btn-default fa fa-search)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tDiv(col-md-3 mc-sm text-center){\n\t\t\t\t\t\tDiv(btn-group){\n\t\t\t\t\t\t\tSpan(){\n\t\t\t\t\t\t\t\tIf(#isOrder#==1){\n\t\t\t\t\t\t\t\t\tButton(Page: land_registry_records, Class: btn bg-gray, Body: Em(Class:fa fa-1x fa fa-sort-numeric-asc) $price$, PageParams: \"isOrder=3,str_search=Val(LandUseSelect),isSearch=#isSearch#\")\n\t\t\t\t\t\t\t\t}.ElseIf(#isOrder#==3){\n\t\t\t\t\t\t\t\t\tButton(Page: land_registry_records, Class: btn bg-gray, Body: Em(Class:fa fa-1x fa fa-sort-numeric-desc) $price$, PageParams: \"isOrder=1,str_search=Val(LandUseSelect),isSearch=#isSearch#\")\n\t\t\t\t\t\t\t\t}.Else{\n\t\t\t\t\t\t\t\t\tButton(Page: land_registry_records, Class: btn bg-gray-lighter, Body: $price$, PageParams: \"isOrder=1,str_search=Val(LandUseSelect),isSearch=#isSearch#\")\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}.Style(margin-left: 5px; margin-right: 5px;)\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tSpan(){\n\t\t\t\t\t\t\t\tIf(#isOrder#==2){\n\t\t\t\t\t\t\t\t\tButton(Page: land_registry_records, Class: btn bg-gray, Body: Em(Class:fa fa-1x fa fa-sort-numeric-asc) $leasing$, PageParams: \"isOrder=4,str_search=Val(LandUseSelect),isSearch=#isSearch#\")\n\t\t\t\t\t\t\t\t}.ElseIf(#isOrder#==4){\n\t\t\t\t\t\t\t\t\tButton(Page: land_registry_records, Class: btn bg-gray, Body: Em(Class:fa fa-1x fa fa-sort-numeric-desc) $leasing$, PageParams: \"isOrder=2,str_search=Val(LandUseSelect),isSearch=#isSearch#\")\n\t\t\t\t\t\t\t\t}.Else{\n\t\t\t\t\t\t\t\t\tButton(Page: land_registry_records, Class: btn bg-gray-lighter, Body: $leasing$, PageParams: \"isOrder=4,str_search=Val(LandUseSelect),isSearch=#isSearch#\")\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}.Style(margin-left: 5px; margin-right: 5px;)\n\t\t\t\t\t\t}\n\t\t\t\t\t}.Style(display:flex;)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\n\t\t\tIf(#isOrder#==1){\n\t\t\t\tSetVar(v_Order, \"leasing_price asc\")\n\t\t\t}.ElseIf(#isOrder#==3){\n\t\t\t\tSetVar(v_Order, \"leasing_price desc\")\n\t\t\t}.ElseIf(#isOrder#==2){\n\t\t\t\tSetVar(v_Order, \"isleasing desc\")\n\t\t\t}.ElseIf(#isOrder#==4){\n\t\t\t\tSetVar(v_Order, \"isleasing asc\")\n\t\t\t}.Else{\n\t\t\t\tSetVar(v_Order, \"id asc\")\n\t\t\t}\n\t\t\t\n\t\t\tIf(#isSearch#==1){\n\t\t\t\tSetVar(v_Where, \"delete=0 and buildings_use_class='#str_search#'\")\n\t\t\t}.Else{\n\t\t\t\tSetVar(v_Where, \"delete=0\")\n\t\t\t}\n\t\t\n\t\t\tDiv(list-group-item){\n\t\t\t\n\t\t\t\tDBFind(Name: land_registry, Source: src_land_registry).Where(#v_Where#).Order(#v_Order#).Custom(_id){\n\t\t\t\t\tDiv(h5){#id#}\n\t\t\t\t}.Custom(custom_map){\n\t\t\t\t\tDiv(){\n\t\t\t\t\t\tMap(MapType:hybrid, Hmap:80, Value:#map_coords#)\n\t\t\t\t\t}.Style(width: 150px;)\n\t\t\t\t}.Custom(_owner){\n\t\t\t\t\tDBFind(Name: members, Source: src_members).Where(\"id=#owner_id#\").Vars(row)\n\t\t\t\t\tLinkPage(Page: profile_view, PageParams: \"v_member_id=#row_id#\"){\n\t\t\t\t\t\tIf(#row_avatar# != \"\"){\n\t\t\t\t\t\t\tImage(Src: \"#row_avatar#\", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tSpan(Class: h5 text-bold, Body: #row_member_name#)\n\t\t\t\t\t}\n\t\t\t\t}.Custom(_buildings){\n\t\t\t\t\tSpan(EcosysParam(Name: land_buildings_use_class, Index: #buildings_use_class#))\n\t\t\t\t}.Custom(_address){\n\t\t\t\t\tSpan(#address#)\n\t\t\t\t}.Custom(_leasing_price){\n\t\t\t\t\tSpan(Class: h4, Body: Strong(#leasing_price#) EUR)\n\t\t\t\t}.Custom(_leasing){\n\t\t\t\t\tDiv(row){\n\t\t\t\t\t\tDiv(col-md-12){\n\t\t\t\t\t\t\tIf(#isleasing#==0){\n\t\t\t\t\t\t\t\tEm(Class: fa fa-2x text-danger fa-exclamation-circle)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}.Style(width:60px;  margin-left: 30px;)\n\t\t\t\t\t}\n\t\t\t\t\tIf(#isleasing#>0){\n\t\t\t\t\t\tDBFind(Name: land_registry_leasing, Source: src_leasing).Where(\"id=#isleasing#\").Vars(date)\n\t\t\t\t\t\tDBFind(Name: members, Source: src_L).Where(\"id=#date_member_id#\").Vars(lsg2)\n\t\t\t\t\t\tLinkPage(Page: profile_view, PageParams: \"v_member_id=#lsg2_id#\"){\n\t\t\t\t\t\t\tIf(#lsg2_avatar# != \"\"){\n\t\t\t\t\t\t\t\tImage(Src: \"#lsg2_avatar#\", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tSpan(Class: h5 text-bold, Body: #lsg2_member_name#)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}.Custom(_leasing2){\n\t\t\t\t\tIf(#isleasing#>0){\n\t\t\t\t\t\tDBFind(Name: land_registry_leasing, Source: src_leasing).Where(\"id=#isleasing#\").Vars(date)\n\t\t\t\t\t\tDiv(Class: h6 m0 text-normal, Body: DateTime(DateTime: #date_date_start#, Format: \"DD.MM.YYYY\") - Strong($leasing_start_date$))\n\t\t\t\t\t\tDiv(Class: h6 m0 text-normal, Body: DateTime(DateTime: #date_date_payment#, Format: \"DD.MM.YYYY\") - Strong($leasing_payment_date$))\n\t\t\t\t\t\tDiv(Class: h6 m0 text-normal, Body: DateTime(DateTime: #date_date_finish#, Format: \"DD.MM.YYYY\") - Strong($leasing_end_date$))\n\t\t\t\t\t}\n\t\t\t\t}.Custom(_date){\n\t\t\t\t}.Custom(_request_status){\n\t\t\t\t\tIf(#v_request_status#==1){\n\t\t\t\t\t\tIf(#request_status#==0){\n\t\t\t\t\t\t\tDiv(Class: h4 text-normal, Body: \"No changes.\")\n\t\t\t\t\t\t}\n\t\t\t\t\t\tIf(#request_status#==1){\n\t\t\t\t\t\t\tDiv(Class: h4 text-danger, Body: \"Time of leasing is over. Deposit was returned.\")\n\t\t\t\t\t\t}\n\t\t\t\t\t\tIf(#request_status#==2){\n\t\t\t\t\t\t\tDiv(Class: h4 text-success, Body: \"Rent for a month is received.\")\n\t\t\t\t\t\t}\n\t\t\t\t\t\tIf(#request_status#==3){\n\t\t\t\t\t\t\tDiv(Class: h4 text-danger, Body: \"Not enough funds on balance.\")\n\t\t\t\t\t\t\tDiv(Class: h4 text-danger, Body: \"Termination of the lease agreement.\")\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}.Custom(_admin){\n\t\t\t\t\tDiv(Class: pull-right){\n\t\t\t\t\t\tIf(EcosysParam(leasing_admin_mode)==1){\n\t\t\t\t\t\t\tSpan(){\n\t\t\t\t\t\t\t\tButton(Page: land_registry_records, Contract: land_registry_Delete, Params: \"LandId=#id#\", Class: btn btn-danger, Body: Em(Class:fa fa-2x fa-trash))\n\t\t\t\t\t\t\t}.Style(margin-right: 20px;)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tButton(Page: land_registry_view, PageParams: \"LandId=#id#\", Class: btn btn-default, Body: Em(Class:fa fa-2x icon-eye))\n\t\t\t\t\t}\n\t\t\t\t}\t\t\n\t\t\t\n\t\t\t\tDiv(table-responsive){\n\t\t\t\t\tTable(Source:src_land_registry,Columns: \"$id$=_id,$map$=custom_map,$class$=_buildings,$owner$=_owner,$leasing_price$=_leasing_price,$leasing$=_leasing,=_leasing2,=_date,=_request_status,=_admin\")\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tIf(#isSearch#==1){\n\t\t\t\t\tDiv(text-center){\n\t\t\t\t\t\tButton(Page: land_registry_records, PageParams:\"isSearch=0,isOrder=#isOrder#\", Class: btn btn-primary btn-oval){\n\t\t\t\t\t\t\tLangRes(view_all)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tDiv(panel-footer){\n\t\t\t\tDiv(clearfix){\n\t\t\t\t\tDiv(Class: pull-left){\n\t\t\t\t\t\tButton(Page: land_registry_check, Class: btn btn-primary, Body: $leasing$)\n\t\t\t\t\t}\n\t\t\t\t\tDiv(Class: pull-right){\n\t\t\t\t\t\tButton(Page: land_registry_add, Class: btn btn-primary, Body: $add$)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Menu": "default_menu"
        },
        {
            "Name": "land_registry_view",
            "Value": "If(#notific_id#>0){\n}.Else{\n\tSetVar(notific_id, 0)\n}\n\nIf(#LandId#>0){\n\n    If(#LandId#>0){\n        DBFind(Name: land_registry, Source: src_entry).WhereId(#LandId#).Vars(entry)\n        DBFind(Name: members, Source: src_mem1).Where(\"id=#entry_owner_id#\").Vars(owner)\n    }\n\t\n    If(#leasing_id#>0){\n        DBFind(Name: land_registry_leasing, Source: src_leasing).WhereId(#leasing_id#).Vars(leasing)\n\t\tDBFind(Name: members, Source: src_mem2).Where(\"id=#leasing_member_id#\").Vars(member)\n    }\n\t\n    SetTitle($land_record$)\n\tDiv(Class: breadcrumb){\n\t\tLinkPage($land_records$, land_registry_records)\n\t\tSpan(/).Style(margin-right: 10px; margin-left: 10px;)\n\t\tSpan(Class: text-muted, Body: $land_record$)\n\t}\n\n    Div(content-wrapper){\n        If(GetVar(LandId)){\n            Div(row){\n                Div(col-sm-8 col-sm-offset-2 col-lg-6 col-lg-offset-3 mt-sm text-left){\n                    Div(panel panel-default){\n                        Form(){\n\t\t\t\t\t\t\tInput(Name: LandId, Class: form-control hidden, Type: text, Value: #LandId#)\n\t\t\t\t\t\t\tInput(Name: leasing_id, Class: form-control hidden, Type: text, Value: #leasing_id#)\n\t\t\t\t\t\t\n                            Div(list-group-item){\n                                Div(h3){$land_record$ #GetVar(LandId)}\n                            }\n                            Div(list-group-item){\n                                Map(MapType:hybrid, Hmap:300, Value:#entry_map_coords#)\n                            }\n                            \n                            Div(list-group-item){\n                                Div(row){\n                                    Div(col-md-5 mt-lg text-right h5){\n                                        Strong($owner$:)\n                                    }\n                                    Div(col-md-6 mc-sm text-left h5){\n                                        Div(){\n\t\t\t\t\t\t\t\t\t\t\tImage(Src: \"#owner_avatar#\", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)\n                                            Span(#owner_member_name#)\n                                        }\n                                    }\n                                }\n                                Div(row){\n                                    Div(col-md-5 mt-sm text-right h5){\n                                        Strong($area_size$)\n                                        (Span(m).(2).Style(vertical-align: super;font-size:small;)):\n                                    }\n                                    Div(col-md-7 mt-sm text-left h5){#entry_area#}\n                                }\n                                Div(row){\n                                    Div(col-md-5 mt-sm text-right h5){\n                                        Strong($address$:)\n                                    }\n                                    Div(col-md-7 mt-sm text-left h5){#entry_address#}\n                                }\n                                Div(row){\n                                    Div(col-md-5 mt-sm text-right h5){Strong($class$ :)}\n                                    Div(col-md-7 mt-sm text-left h5){\n                                        Span(EcosysParam(Name: land_buildings_use_class, Index: #entry_buildings_use_class#))\n                                    }\n                                }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tDiv(list-group-item){\n                                Div(row){\n                                    Div(col-md-5 mt-sm text-right h4){Strong($leasing_price$ :)}\n                                    Div(col-md-7 mt-sm text-left h4){\n                                        Span(Strong(#entry_leasing_price#) EUR)\n                                    }\n                                }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tIf(Or(#entry_isleasing#>0,#notific_id#>0)){\n\t\t\t\t\t\t\t\tDiv(list-group-item){\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tIf(#leasing_id#>0){\n\t\t\t\t\t\t\t\t\t\tDBFind(Name: land_registry_leasing, Source: src_leasing).Where(\"id=#leasing_id#\").Vars(date)\n\t\t\t\t\t\t\t\t\t}.Else{\n\t\t\t\t\t\t\t\t\t\tDBFind(Name: land_registry_leasing, Source: src_leasing).Where(\"id=#entry_isleasing#\").Vars(date)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tDiv(row){\n\t\t\t\t\t\t\t\t\t\tDiv(col-md-5 mt-sm text-right h4){Strong($leasing_start_date$ :)}\n\t\t\t\t\t\t\t\t\t\tDiv(col-md-7 mt-sm text-left h4){\n\t\t\t\t\t\t\t\t\t\t\tSpan(Class: text-normal, Body: DateTime(DateTime: #date_date_start#, Format: \"DD.MM.YYYY\"))\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tIf(#entry_isleasing#>0){\n\t\t\t\t\t\t\t\t\t\tDiv(row){\n\t\t\t\t\t\t\t\t\t\t\tDiv(col-md-5 mt-sm text-right h4){Strong($leasing_payment_date$: )}\n\t\t\t\t\t\t\t\t\t\t\tDiv(col-md-7 mt-sm text-left h4){\n\t\t\t\t\t\t\t\t\t\t\t\tSpan(Class: text-normal, Body: DateTime(DateTime: #date_date_payment#, Format: \"DD.MM.YYYY\"))\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tDiv(row){\n\t\t\t\t\t\t\t\t\t\tDiv(col-md-5 mt-sm text-right h4){Strong($leasing_end_date$ :)}\n\t\t\t\t\t\t\t\t\t\tDiv(col-md-7 mt-sm text-left h4){\n\t\t\t\t\t\t\t\t\t\t\tSpan(Class: text-normal, Body: DateTime(DateTime: #date_date_finish#, Format: \"DD.MM.YYYY\"))\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tDBFind(Name: members, Source: src_L).Where(\"id=#date_member_id#\").Vars(lsg)\n\t\t\t\t\t\t\t\t\tDiv(row){\n\t\t\t\t\t\t\t\t\t\tDiv(col-md-5 mt-lg text-right h4){\n\t\t\t\t\t\t\t\t\t\t\tStrong($leasing$ :)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tDiv(col-md-6 mc-sm text-left h5){\n\t\t\t\t\t\t\t\t\t\t\tDiv(){\n\t\t\t\t\t\t\t\t\t\t\t\tImage(Src: \"#lsg_avatar#\", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)\n\t\t\t\t\t\t\t\t\t\t\t\tSpan(#lsg_member_name#)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\tIf(And(#leasing_id#>0,#entry_isleasing#>0)){\n\t\t\t\t\t\t\t}.Else{\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tDBFind(Name: land_registry_leasing, Source: src_leasing).Where(\"land_id=#LandId# and member_id=#key_id# and status >= 0\").Vars(check)\n\t\t\t\t\t\t\t\tIf(#check_id# > 0){\n\t\t\t\t\t\t\t\t}.Else{\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tIf(#entry_owner_id# != #key_id#){\n\t\t\t\t\t\t\t\t\t\tDiv(Class: list-group-item){\n\t\t\t\t\t\t\t\t\t\t\tDiv(Class: row df f-valign){\n\t\t\t\t\t\t\t\t\t\t\t\tDiv(Class: col-md-5 mt-sm text-right){\n\t\t\t\t\t\t\t\t\t\t\t\t\tLabel(For: start_date){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(leasing_start_date))\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tDiv(Class: col-md-7 mb-sm text-left){\n\t\t\t\t\t\t\t\t\t\t\t\t\tInput(Name: date_start, Class: form-control, Type: date, Value: Now(\"YYYY-MM-DD\"))\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\t\t\t\tDiv(Class: row df f-valign){\n\t\t\t\t\t\t\t\t\t\t\t\tDiv(Class: col-md-5 mt-sm text-right){\n\t\t\t\t\t\t\t\t\t\t\t\t\tLabel(For: start_date){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(leasing_end_date))\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tDiv(Class: col-md-7 mc-sm text-left){\n\t\t\t\t\t\t\t\t\t\t\t\t\tInput(Name: date_finish, Class: form-control, Type: date, Value: Now(\"YYYY-MM-DD\", +6 month))\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}                   \n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tDiv(Class: panel-footer clearfix){\n\t\t\t\t\t\t\t\t\t\t\tDiv(Class: pull-right){\n\t\t\t\t\t\t\t\t\t\t\t\tButton(Body: LangRes(back), Class: btn btn-default, Page: land_registry_records)\n\t\t\t\t\t\t\t\t\t\t\t\tButton(Body: LangRes(send_request), Class: btn btn-primary, Page: land_registry_view, PageParams: \"LandId=#LandId#\", Contract: land_registry_Leasing_Add)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n                        }\n                    }\n\t\t\t\t\n\n\t\t\t\t\n\t\t\t\t\tIf(#leasing_id#>0){\n\t\t\t\t\t\tDiv(row){\n\t\t\t\t\t\t\tDiv(col-md-6 mt-sm text-center){\n\t\t\t\t\t\t\t\tDiv(panel panel-default){\n\t\t\t\t\t\t\t\t\tForm(){\n\t\t\t\t\t\t\t\t\t\tDiv(list-group-item){\n\t\t\t\t\t\t\t\t\t\t\tSpan(Class: h4 text-bold, Body:$owner$)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tDiv(list-group-item){\n\t\t\t\t\t\t\t\t\t\t\tDiv(){\n\t\t\t\t\t\t\t\t\t\t\t\tImage(Src: \"#owner_avatar#\", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)\n\t\t\t\t\t\t\t\t\t\t\t\tSpan(#owner_member_name#)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tDiv(panel-footer){\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tIf(#leasing_status#==0){\n\t\t\t\t\t\t\t\t\t\t\t\tDiv(clearfix){\n\t\t\t\t\t\t\t\t\t\t\t\t\tDiv(pull-left){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tButton(Contract: land_registry_Leasing_Reject, Body: $reject$, Params: \"LandId=#LandId#,leasing_id=#leasing_id#,notific_id=#notific_id#\", Class: btn btn-danger, Page: land_registry_view, PageParams: \"LandId=#LandId#\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tDiv(pull-right){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tButton(Contract: land_registry_Leasing_Accept, Body: $accept$, Params: \"LandId=#LandId#,leasing_id=#leasing_id#,notific_id=#notific_id#\", Class: btn btn-success, Page: land_registry_view, PageParams: \"LandId=#LandId#\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tIf(#leasing_status#==1){\n\t\t\t\t\t\t\t\t\t\t\t\tSpan(Class: h4, Body:$leasing_contract_waiting_payment$)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t}.Style(height:60px)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tDiv(col-md-6 mt-sm text-center){\n\t\t\t\t\t\t\t\tDiv(panel panel-default){\n\t\t\t\t\t\t\t\t\tForm(){\n\t\t\t\t\t\t\t\t\t\tDiv(list-group-item){\n\t\t\t\t\t\t\t\t\t\t\tSpan(Class: h4 text-bold, Body:$leasing$)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tDiv(list-group-item){\n\t\t\t\t\t\t\t\t\t\t\tDiv(){\n\t\t\t\t\t\t\t\t\t\t\t\tImage(Src: \"#member_avatar#\", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)\n\t\t\t\t\t\t\t\t\t\t\t\tSpan(#member_member_name#)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tDiv(panel-footer){\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tIf(#leasing_status#==0){\n\t\t\t\t\t\t\t\t\t\t\t\tSpan(Class: h4, Body:$leasing_contract_waiting_response$)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tIf(#leasing_status#==1){\n\t\t\t\t\t\t\t\t\t\t\t\tDiv(clearfix){\n\t\t\t\t\t\t\t\t\t\t\t\t\tDiv(pull-left){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tButton(Contract: land_registry_Leasing_Reject, Body: $reject$, Params: \"LandId=#LandId#,leasing_id=#leasing_id#,notific_id=#notific_id#\", Class: btn btn-danger, Page: land_registry_view, PageParams: \"LandId=#LandId#\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tDiv(pull-right){\n                                                        Input(Name: now_time, Class: form-control hidden, Type: date, Value: Now(\"YYYY-MM-DD\"))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tButton(Contract: land_registry_Leasing_SendToken, Body: $send$, Params: \"LandId=#LandId#,leasing_id=#leasing_id#,notific_id=#notific_id#\", Class: btn btn-success, Page: land_registry_view, PageParams: \"LandId=#LandId#\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t}.Style(height:60px)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tIf(#notific_id#==0){\t\n\t\t\t\t\t\tDiv(panel panel-default){\n\t\t\t\t\t\t\tForm(){\n\n\t\t\t\t\t\t\t\tDBFind(Name: land_registry_leasing, Source: src_table).Custom(_id){\n\t\t\t\t\t\t\t\t\tDiv(h5){#id#}\n\t\t\t\t\t\t\t\t}.Custom(_leasing){\n\t\t\t\t\t\t\t\t\tDBFind(Name: members, Source: src_L).Where(\"id=#member_id#\").Vars(lsg3)\n\t\t\t\t\t\t\t\t\tLinkPage(Page: profile_view, PageParams: \"v_member_id=#lsg3_id#\"){\n\t\t\t\t\t\t\t\t\t\tIf(#lsg3_avatar# != \"\"){\n\t\t\t\t\t\t\t\t\t\t\tImage(Src: \"#lsg3_avatar#\", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tSpan(Class: h5 text-bold, Body: #lsg3_member_name#)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}.Custom(_date_start){\t\n\t\t\t\t\t\t\t\t\tDiv(Class: h5 m0 text-normal, Body: DateTime(DateTime: #date_start#, Format: \"DD.MM.YYYY\"))\n\t\t\t\t\t\t\t\t}.Custom(_date_end){\t\n\t\t\t\t\t\t\t\t\tDiv(Class: h5 m0 text-normal, Body: DateTime(DateTime: #date_finish#, Format: \"DD.MM.YYYY\"))\n\t\t\t\t\t\t\t\t}.Custom(_status){\n\t\t\t\t\t\t\t\t\tIf(#status#==-1){\n\t\t\t\t\t\t\t\t\t\tDiv(Class: h5 m0 text-normal, Body: $leasing_contract_terminated$)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tIf(#status#==0){\n\t\t\t\t\t\t\t\t\t\tDiv(Class: h5 m0 text-normal, Body: $leasing_contract_waiting_response$)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tIf(#status#==1){\n\t\t\t\t\t\t\t\t\t\tDiv(Class: h5 m0 text-normal, Body: $leasing_contract_waiting_payment$)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tIf(#status#==2){\n\t\t\t\t\t\t\t\t\t\tDiv(Class: h5 m0 text-normal, Body: $leasing_contract_signed$)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}.Where(\"land_id=#LandId#\").Order(\"id\")\n\t\t\t\t\t\t\t\t\n                                Div(Class: list-group-item text-center){\n                                    Span(Class: h3, Body: $leasing_contracts$)\t\n                                }\n\t\t\t\t\t\t\t\tDiv(list-group-item){\n\t\t\t\t\t\t\t\t\tTable(Source:src_table, Columns: \"=id,$member$=_leasing,$leasing_start_date$=_date_start,$leasing_end_date$=_date_end,=_status\")\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\t\n                }\n            }\n        }\n    }\n}.Else{\n    Div(Class: col-md-12 alert alert-danger text-center){$attention$}\n}",
            "Conditions": "ContractConditions(`MainCondition`)",
            "Menu": "default_menu"
        }
    ],
    "parameters": [
        {
            "Name": "land_buildings_use_class",
            "Value": "Shops,Financial,Restaurants ,Business,Hotels,Dwellinghouses,No",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "leasing_admin_mode",
            "Value": "0",
            "Conditions": "ContractConditions(\"MainCondition\")"
        }
    ],
    "tables": [
        {
            "Name": "land_registry",
            "Columns": "[{\"name\":\"isleasing\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"map_coords\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"request_status\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"buildings_use_class\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"delete\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"address\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"owner_id\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"area\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"date_create\",\"type\":\"datetime\",\"conditions\":\"true\"},{\"name\":\"leasing_price\",\"type\":\"money\",\"conditions\":\"true\"}]",
            "Permissions": "{\"insert\":\"true\",\"update\":\"true\",\"new_column\":\"true\"}"
        },
        {
            "Name": "land_registry_history",
            "Columns": "[{\"name\":\"amount\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"sender\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"comment\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"deleted\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"recipient\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"date_create\",\"type\":\"datetime\",\"conditions\":\"true\"}]",
            "Permissions": "{\"insert\":\"true\",\"update\":\"true\",\"new_column\":\"true\"}"
        },
        {
            "Name": "land_registry_leasing",
            "Columns": "[{\"name\":\"date_start\",\"type\":\"datetime\",\"conditions\":\"true\"},{\"name\":\"date_finish\",\"type\":\"datetime\",\"conditions\":\"true\"},{\"name\":\"date_payment\",\"type\":\"datetime\",\"conditions\":\"true\"},{\"name\":\"leasing_price\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"status\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"land_id\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"member_id\",\"type\":\"number\",\"conditions\":\"true\"}]",
            "Permissions": "{\"insert\":\"true\",\"update\":\"true\",\"new_column\":\"true\"}"
        }
    ]
}