{
    "pages": [],
    "blocks": [],
    "menus": [],
    "parameters": [],
    "languages": [],
    "contracts": [
        {
            "Name": "ImportList,ImportData,Import",
            "Value": "func ImportList(row array, cnt string) {\n\t\tif !row {\n\t\t\treturn\n\t\t}\n\t\tvar i int\n\t\twhile i < Len(row) {\n\t\t\tvar idata map\n\t\t\tidata = row[i]\n\n\t\t\tif(cnt == \"pages\"){\n\t\t\t\t$ret_page = DBFind(`pages`).Columns(`id`).Where(`name=$`, idata[\"Name\"])\n\t\t\t\t$page_id = One($ret_page, \"id\") \n\t\t\t\tif ($page_id != nil){\n\t\t\t\t\tidata[\"Id\"] = Int($page_id) \n\t\t\t\t\tCallContract(\"EditPage\", idata)\n\t\t\t\t} else {\n\t\t\t\t\tCallContract(\"NewPage\", idata)\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(cnt == \"blocks\"){\n\t\t\t\t$ret_block = DBFind(`blocks`).Columns(`id`).Where(`name=$`, idata[\"Name\"])\n\t\t\t\t$block_id = One($ret_block, \"id\") \n\t\t\t\tif ($block_id != nil){\n\t\t\t\t\tidata[\"Id\"] = Int($block_id)\n\t\t\t\t\tCallContract(\"EditBlock\", idata)\n\t\t\t\t} else {\n\t\t\t\t\tCallContract(\"NewBlock\", idata)\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(cnt == \"menus\"){\n\t\t\t\t$ret_menu = DBFind(`menu`).Columns(`id,value`).Where(`name=$`, idata[\"Name\"])\n\t\t\t\t$menu_id = One($ret_menu, \"id\") \n\t\t\t\t$menu_value = One($ret_menu, \"value\") \n\t\t\t\tif ($menu_id != nil){\n\t\t\t\t\tidata[\"Id\"] = Int($menu_id)\n\t\t\t\t\tidata[\"Value\"] = Str($menu_value) + \"\\n\" + Str(idata[\"Value\"])\n\t\t\t\t\tCallContract(\"EditMenu\", idata)\n\t\t\t\t} else {\n\t\t\t\t\tCallContract(\"NewMenu\", idata)\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(cnt == \"parameters\"){\n\t\t\t\t$ret_param = DBFind(`parameters`).Columns(`id`).Where(`name=$`, idata[\"Name\"])\n\t\t\t\t$param_id = One($ret_param, \"id\")\n\t\t\t\tif ($param_id != nil){ \n\t\t\t\t\tidata[\"Id\"] = Int($param_id) \n\t\t\t\t\tCallContract(\"EditParameter\", idata)\n\t\t\t\t} else {\n\t\t\t\t\tCallContract(\"NewParameter\", idata)\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(cnt == \"languages\"){\n\t\t\t\t$ret_lang = DBFind(`languages`).Columns(`id`).Where(`name=$`, idata[\"Name\"])\n\t\t\t\t$lang_id = One($ret_lang, \"id\")\n\t\t\t\tif ($lang_id != nil){\n\t\t\t\t\tCallContract(\"EditLang\", idata)\n\t\t\t\t} else {\n\t\t\t\t\tCallContract(\"NewLang\", idata)\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(cnt == \"contracts\"){\n\t\t\t\tif IsObject(idata[\"Name\"], $ecosystem_id){\n\t\t\t\t} else {\n\t\t\t\t\tCallContract(\"NewContract\", idata)\n\t\t\t\t} \n\t\t\t}\n\t\t\tif(cnt == \"tables\"){\n\t\t\t\t$ret_table = DBFind(`tables`).Columns(`id`).Where(`name=$`, idata[\"Name\"])\n\t\t\t\t$table_id = One($ret_table, \"id\")\n\t\t\t\tif ($table_id != nil){\t\n\t\t\t\t} else {\n\t\t\t\t\tCallContract(\"NewTable\", idata)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ti = i + 1\n\t\t}\n\t}\n\t\n\tfunc ImportData(row array) {\n\t\tif !row {\n\t\t\treturn\n\t\t}\n\t\tvar i int\n\t\twhile i < Len(row) {\n\t\t\tvar idata map\n\t\t\tvar list array\n\t\t\tvar tblname, columns string\n\t\t\tidata = row[i]\n\t\t\ti = i + 1\n\t\t\ttblname = idata[\"Table\"]\n\t\t\tcolumns = Join(idata[\"Columns\"], \",\")\n\t\t\tlist = idata[\"Data\"] \n\t\t\tif !list {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tvar j int\n\t\t\twhile j < Len(list) {\n\t\t\t\tvar ilist array\n\t\t\t\tilist = list[j]\n\t\t\t\tDBInsert(tblname, columns, ilist)\n\t\t\t\tj=j+1\n\t\t\t}\n\t\t}\n\t}\n\t\n\tcontract Import {\n\t\tdata {\n\t\t\tData string\n\t\t}\n\t\tconditions {\n\t\t\t$list = JSONToMap($Data)\n\t\t}\n\t\taction {\n\t\t\tImportList($list[\"pages\"], \"pages\")\n\t\t\tImportList($list[\"blocks\"], \"blocks\")\n\t\t\tImportList($list[\"menus\"], \"menus\")\n\t\t\tImportList($list[\"parameters\"], \"parameters\")\n\t\t\tImportList($list[\"languages\"], \"languages\")\n\t\t\tImportList($list[\"contracts\"], \"contracts\")\n\t\t\tImportList($list[\"tables\"], \"tables\")\n\t\t\tImportData($list[\"data\"])\n\t\t}\n\t}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        }
    ],
    "tables": [],
    "data": []
}