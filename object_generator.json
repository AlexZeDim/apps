{
    "name": "Object generator",
    "data": [
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "If(){\r\n    ?: указать имя существующего параметра\r\n    ?: ввести список для параметра (имя параметра совпадает с программным именем)\r\n}\r\nDiv(list-group-item){\r\n    Div(){\r\n        Label(Class:form-group){\r\n            LangRes(og_data_type)\r\n            Select(Name: Type, Source: default_types, NameColumn: name, ValueColumn: id)\r\n        }\r\n    }\r\n    Div(flex){\r\n        Label(Class:form-group flex-item){\r\n            LangRes(og_programming_name)\r\n            Input(Name: Name, Placeholder: $og_programming_name$)\r\n        }\r\n        Label(Class:form-group flex-item){\r\n            LangRes(og_translation_name)\r\n            Input(Name: TranslationName, Placeholder: $og_translation_name$)\r\n        }\r\n    }\r\n    Div(flex){\r\n        Label(Class:form-group flex-item){\r\n            LangRes(og_class_field)\r\n            Input(Name: ClassField)\r\n        }\r\n        Label(Class:form-group flex-item){\r\n            LangRes(og_class_div)\r\n            Input(Name: ClassDiv)\r\n        }\r\n    }\r\n    If(){\r\n        выводить поле при Add объекта для ролей (выбор из списка)\r\n        выводить поле при Edit объекта для ролей и статусов\r\n        отображать при View объекта для ролей и статусов\r\n        отображать в таблице списка объектов\r\n        фильтр для поля\r\n        ?: class поля\r\n        class Div\r\n    }\r\n    Div(cols){\r\n        Div(){\r\n            Label(Class:inline mr){\r\n                Input(Name: IsAdded, Type: checkbox, Value: false) LangRes(og_show_on_added)\r\n            }\r\n        }\r\n        Div(){\r\n            Label(Class:inline mr){\r\n                Input(Name: IsEdited, Type: checkbox, Value: false) LangRes(og_show_on_edited)\r\n            }\r\n        }\r\n        Div(){\r\n            Label(Class:inline mr){\r\n                Input(Name: IsViewed, Type: checkbox, Value: false) LangRes(og_show_on_viewed)\r\n            }\r\n        }\r\n        Div(){\r\n            Label(Class:inline mr){\r\n                Input(Name: IsRecord, Type: checkbox, Value: false) LangRes(og_show_on_records)\r\n            }\r\n        }\r\n        Div(){\r\n            Label(Class:inline mr){\r\n                Input(Name: IsFilter, Type: checkbox, Value: false) LangRes(og_filter_on_records)\r\n            }\r\n        }\r\n    }\r\n}",
            "Name": "og_edit_attribute",
            "Type": "blocks"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "If(Or(#Mode#==\"edit_creator\",#Mode#==\"edit_editor\")){\r\n    If(GetVar(Rid)){\r\n        If(GetVar(Rids)){\r\n            If(#Action#==\"add\"){\r\n                SetVar(Rids,\"#Rids#,#Rid#\")\r\n\r\n            }.ElseIf(#Action#==\"sub\"){\r\n                ArrayToSource(rids,[#Rids#])\r\n                SetVar(new_rids,)\r\n                ForList(rids){\r\n                    If(#value#!=#Rid#){\r\n                        If(#new_rids#==\"\"){\r\n                            SetVar(new_rids,#value#)\r\n                        }.Else{\r\n                            SetVar(new_rids,\"#new_rids#,#value#\")\r\n                        }\r\n                    }\r\n                }\r\n                SetVar(Rids,#new_rids#)\r\n            }\r\n        }.Else{\r\n            SetVar(Rids,#Rid#)\r\n        }\r\n    }.Else{\r\n        SetVar(Rid,)\r\n        If(GetVar(Rids)){}.Else{SetVar(Rids,)}\r\n    }\r\n\r\n    If(GetVar(Rids)){}.Else{SetVar(Rids,0)}\r\n    If(#Mode#==\"edit_creator\"){\r\n        SetVar(title,$og_edit_creators$)\r\n    }\r\n    If(#Mode#==\"edit_editor\"){\r\n        SetVar(title,$og_edit_editors$)\r\n    }\r\n\r\n    Form(){\r\n        Div(input-group mb-sm){\r\n            Select(Name: Rid, Source: src_roles, NameColumn:role_name, ValueColumn: id)\r\n            Div(input-group-btn){\r\n                Button(Class: btn btn-primary fa fa-plus, Page: #this_page#, PageParams:\"Rid=Val(Rid),Rids=#Rids#,Action=add,Mode=#Mode#,CreatorRids=#CreatorRids#,EditorRids=#EditorRids#,Statuses=#Statuses#\").Popup(50, #title#)\r\n            }\r\n        }\r\n        If(GetVar(Rids)){\r\n            DBFind(roles, src_rids).Columns(\"id,role_name\").Where(\"deleted=0 and id in (#Rids#)\")\r\n            ForList(src_rids){\r\n                Button(Class: btn btn-default mr-sm mb-sm, Page: #this_page#, PageParams: \"Rid=#id#,Rids=#Rids#,Action=sub,Mode=#Mode#,CreatorRids=#CreatorRids#,EditorRids=#EditorRids#,Statuses=#Statuses#\", Body: Span(Class: fa fa-remove) #role_name#).Popup(50, #title#)\r\n            }\r\n        }\r\n    }\r\n}\r\nDiv(text-right){\r\n    If(#Mode#==\"edit_creator\"){\r\n        Button(Body: LangRes(og_ok), Page: #this_page#, Class: btn btn-primary, PageParams:\"CreatorRids=#Rids#,EditorRids=#EditorRids#,Statuses=#Statuses#\")\r\n    }\r\n    If(#Mode#==\"edit_editor\"){\r\n        Button(Body: LangRes(og_ok), Page: #this_page#, Class: btn btn-primary, PageParams:\"EditorRids=#Rids#,CreatorRids=#CreatorRids#,Statuses=#Statuses#\")\r\n    }\r\n}",
            "Name": "og_edit_roles",
            "Type": "blocks"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "Form(){\r\n    DBFind(buffer_data).Where(\"member_id=#key_id# and key='custom_statuses'\").Vars(buf)\r\n    If(#buf_id#>0){\r\n        ArrayToSource(custom_statuses, #buf_value#)\r\n    }\r\n    If(#Mode#==\"edit_statuses\"){\r\n        SetVar(title,$og_edit_statuses$)\r\n\r\n        Div(input-group mb-sm){\r\n            Div(h3 mt0){\r\n                LangRes(og_default_statuses)\r\n            }\r\n            Div(cols){\r\n                ForList(default_statuses){\r\n                    Div(){\r\n                        Label(Class:form-inline){\r\n                            Input(Name: DStatuses, Type:checkbox, Value: false) #name#\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            Div(h3){\r\n                LangRes(og_custom_statuses)\r\n            }\r\n            Div(){\r\n                ForList(custom_statuses){\r\n                    Div(headless){\r\n                        JsonToSource(Status, `#value#`)\r\n                        ForList(Status){\r\n                            #key#:#value#\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            Div(flex){\r\n                Input(Name: Name, Placeholder: Status name).(Name: Language, Placeholder: Translated language).(Name: Translation, Placeholder: Translation)\r\n\r\n                Button(Class: btn btn-default fa fa-plus, Page: #this_page#, PageParams:\"Mode=#Mode#,CreatorRids=#CreatorRids#,EditorRids=#EditorRids#\", Contract: OgCreateCustomStatus).Popup(50, #title#)\r\n            }\r\n        }\r\n    }\r\n    Div(text-right){\r\n        Button(Body: LangRes(og_ok), Page: #this_page#, Class: btn btn-primary, PageParams:\"CreatorRids=#CreatorRids#,EditorRids=#EditorRids#,Statuses=Val(Sname)\")\r\n    }\r\n}",
            "Name": "og_edit_statuses",
            "Type": "blocks"
        },
        {
            "Conditions": "ContractAccess(\"@1EditMenu\")",
            "Value": "MenuItem(Title: Og objects, Page: og_objects, Icon:fa fa-list-ul)",
            "Name": "default_menu",
            "Type": "menu"
        },
        {
            "Name": "og_attributes",
            "Trans": "{\"en\":\"Attributes\"}",
            "Type": "languages"
        },
        {
            "Name": "og_back",
            "Trans": "{\"en\":\"Back\",\"ru\":\"Назад\"}",
            "Type": "languages"
        },
        {
            "Name": "og_class_div",
            "Trans": "{\n    \"en\": \"Class block\",\n    \"ru\": \"Класс блока\"\n}",
            "Type": "languages"
        },
        {
            "Name": "og_class_field",
            "Trans": "{\n    \"en\": \"Class field\",\n    \"ru\": \"Класс поля\"\n}",
            "Type": "languages"
        },
        {
            "Name": "og_create",
            "Trans": "{\n    \"en\": \"Create\",\n    \"ru\": \"Создать\"\n}",
            "Type": "languages"
        },
        {
            "Name": "og_creator_roles",
            "Trans": "{\"en\":\"Creator roles\"}",
            "Type": "languages"
        },
        {
            "Name": "og_data_input",
            "Trans": "{\"en\":\"Data input\",\"ru\":\"Ввод данных\"}",
            "Type": "languages"
        },
        {
            "Name": "og_data_type",
            "Trans": "{\n    \"en\": \"Data type\",\n    \"ru\": \"Тип данных\"\n}",
            "Type": "languages"
        },
        {
            "Name": "og_data_view",
            "Trans": "{\"en\":\"Data view\",\"ru\":\"Просмотр данных\"}",
            "Type": "languages"
        },
        {
            "Name": "og_deleted",
            "Trans": "{\"en\":\"Deleted\"}",
            "Type": "languages"
        },
        {
            "Name": "og_edit",
            "Trans": "{\"en\":\"Edit\",\"ru\":\"Редактировать\"}",
            "Type": "languages"
        },
        {
            "Name": "og_edit_creators",
            "Trans": "{\n    \"en\": \"Edit creator role\",\n    \"ru\": \"Изменить роль создателя\"\n}",
            "Type": "languages"
        },
        {
            "Name": "og_edit_editors",
            "Trans": "{\n    \"en\": \"Edit editor role\",\n    \"ru\": \"Изменить роль редактора\"\n}",
            "Type": "languages"
        },
        {
            "Name": "og_edit_statuses",
            "Trans": "{\n    \"en\": \"Edit statuses\",\n    \"ru\": \"Изменить статусы\"\n}",
            "Type": "languages"
        },
        {
            "Name": "og_editor_roles",
            "Trans": "{\"en\":\"Editor roles\"}",
            "Type": "languages"
        },
        {
            "Name": "og_filter_on_records",
            "Trans": "{\n    \"en\": \"Add filter on table records\",\n    \"ru\": \"Добавить фильтр на таблицу записей\"\n}",
            "Type": "languages"
        },
        {
            "Name": "og_info",
            "Trans": "{\"en\":\"Info\"}",
            "Type": "languages"
        },
        {
            "Name": "og_item_not_found",
            "Trans": "{\"en\":\"Item not found\",\"ru\":\"Объект не найден\"}",
            "Type": "languages"
        },
        {
            "Name": "og_object_edit",
            "Trans": "{\"en\":\"Og object edit\"}",
            "Type": "languages"
        },
        {
            "Name": "og_object_view",
            "Trans": "{\"en\":\"Og object view\"}",
            "Type": "languages"
        },
        {
            "Name": "og_objects",
            "Trans": "{\"en\":\"Og objects\"}",
            "Type": "languages"
        },
        {
            "Name": "og_ok",
            "Trans": "{\n    \"en\": \"Done\",\n    \"ru\": \"Готово\"\n}",
            "Type": "languages"
        },
        {
            "Name": "og_programming_name",
            "Trans": "{\n    \"en\": \"Programming name\",\n    \"ru\": \"Программное имя\"\n}",
            "Type": "languages"
        },
        {
            "Name": "og_s1",
            "Trans": "{\"en\":\"Not Submitted\"}",
            "Type": "languages"
        },
        {
            "Name": "og_s2",
            "Trans": "{\"en\":\"Submitted\"}",
            "Type": "languages"
        },
        {
            "Name": "og_s3",
            "Trans": "{\"en\":\"Escalated\"}",
            "Type": "languages"
        },
        {
            "Name": "og_s4",
            "Trans": "{\"en\":\"Send Back\"}",
            "Type": "languages"
        },
        {
            "Name": "og_s5",
            "Trans": "{\"en\":\"Accepted\"}",
            "Type": "languages"
        },
        {
            "Name": "og_s6",
            "Trans": "{\"en\":\"Paid\"}",
            "Type": "languages"
        },
        {
            "Name": "og_s7",
            "Trans": "{\"en\":\"Approved\"}",
            "Type": "languages"
        },
        {
            "Name": "og_s8",
            "Trans": "{\"en\":\"Rejected\"}",
            "Type": "languages"
        },
        {
            "Name": "og_save",
            "Trans": "{\"en\":\"Save\",\"ru\":\"Сохранить\"}",
            "Type": "languages"
        },
        {
            "Name": "og_show_on_added",
            "Trans": "{\n    \"en\": \"Show when creating/adding\",\n    \"ru\": \"Показывать при создании/добавлении\"\n}",
            "Type": "languages"
        },
        {
            "Name": "og_show_on_edited",
            "Trans": "{\n    \"en\": \"Show when editing\",\n    \"ru\": \"Показывать при редактировании\"\n}",
            "Type": "languages"
        },
        {
            "Name": "og_show_on_records",
            "Trans": "{\n    \"en\": \"Show in the table of records\",\n    \"ru\": \"Показывать в таблице записей\"\n}",
            "Type": "languages"
        },
        {
            "Name": "og_show_on_viewed",
            "Trans": "{\n    \"en\": \"Show while browsing\",\n    \"ru\": \"Показывать при просмотре\"\n}",
            "Type": "languages"
        },
        {
            "Name": "og_statuses",
            "Trans": "{\"en\":\"Statuses\"}",
            "Type": "languages"
        },
        {
            "Name": "og_translation_name",
            "Trans": "{\n    \"en\": \"Translation name\",\n    \"ru\": \"Перевод имени\"\n}",
            "Type": "languages"
        },
        {
            "Name": "og_view",
            "Trans": "{\"en\":\"View\",\"ru\":\"Просмотр\"}",
            "Type": "languages"
        },
        {
            "Name": "og_objects",
            "Columns": "[\n    {\n        \"name\": \"deleted\",\n        \"type\": \"number\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"info\",\n        \"type\": \"json\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"creator_roles\",\n        \"type\": \"json\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"editor_roles\",\n        \"type\": \"json\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"statuses\",\n        \"type\": \"json\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"attributes\",\n        \"type\": \"json\",\n        \"conditions\": \"true\"\n    }\n]",
            "Permissions": "{\"insert\":\"true\",\"update\":\"true\",\"new_column\":\"true\"}",
            "Type": "tables"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "og_s1,og_s2,og_s3,og_s4,og_s5,og_s6,og_s7,og_s8",
            "Name": "og_default_statuses",
            "Type": "app_params"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "text,number,varchar,datetime,money,double,character,json",
            "Name": "og_default_types",
            "Type": "app_params"
        },
        {
            "Conditions": "true",
            "Value": "DBFind(applications).Columns(\"id\").Where(\"name='Object generator' AND deleted=0\").Vars(application)\r\nDBFind(roles, src_roles).Columns(\"id,role_name\").Where(\"deleted=0\")\r\nAppParam(App: #application_id#, Name: og_default_statuses, Source: default_statuses)\r\nAppParam(App: #application_id#, Name: og_default_types, Source: default_types)\r\n\r\nSetVar(this_page,og_object_edit).(Title,$og_create$).(BtnTitle,$og_create$).(item_creator_roles,).(item_info,).(item_deleted,).(item_statuses,).(item_attributes,).(item_editor_roles,)\r\nSetVar(LeftCol,\"col-sm-4 mt-sm text-right\").(RightCol,\"col-sm-8 mt-sm text-left\")\r\nSetVar(cols,2)\r\n\r\nIf(GetVar(Id)){\r\n    DBFind(og_objects).Where(\"id=#Id#\").Vars(item)\r\n    SetVar(Title,$og_edit$ ##Id#).(BtnTitle,$og_save$)\r\n\r\n    If(==\"TODO:\"){\r\n        добавить инициализацию Statuses, EditirRids, CreatorRids, Attributes из модели\r\n    }\r\n}\r\n\r\n\r\nDiv(content-wrapper){\r\n    If(Or(#Mode#==\"edit_creator\",#Mode#==\"edit_editor\")){\r\n        Include(og_edit_roles)\r\n    }.ElseIf(#Mode#==\"edit_statuses\"){\r\n        Include(og_edit_statuses)\r\n    }.Else{\r\n        If(GetVar(CreatorRids)).Else{SetVar(CreatorRids,0)}\r\n        If(GetVar(EditorRids)).Else{SetVar(EditorRids,0)}\r\n        DBFind(roles, creators).Columns(\"id,role_name\").Where(\"deleted=0 and id in (#CreatorRids#)\").Count(count_creators)\r\n        DBFind(roles, editors).Columns(\"id,role_name\").Where(\"deleted=0 and id in (#EditorRids#)\").Count(count_editors)\r\n\r\n        If(GetVar(Statuses)).Else{SetVar(Statuses,{})}\r\n        JsonToSource(statuses,#Statuses#)\r\n\r\n        SetTitle(#Title#)\r\n        Div(breadcrumb){\r\n            LinkPage(Body: $og_objects$, Page: og_objects)\r\n            Span(/, mh)\r\n            Span(#Title#, text-muted)\r\n        }\r\n        Div(row){\r\n            Div(col-sm-10 col-sm-offset-1 col-lg-8 col-lg-offset-2){\r\n                Form(panel panel-primary){\r\n                    Div(panel-heading){\r\n                        LangRes(og_data_input)\r\n                    }\r\n                    Div(panel-body){\r\n                        If(GetVar(Id)){\r\n                            Input(Name: Id, Type:hidden, Value: #Id#)\r\n                        }\r\n                        Div(row mt-sm){\r\n                            Div(#LeftCol#){\r\n                                LangRes(og_creator_roles)\r\n                                Button(Class: btn btn-link fa fa-edit ml p0, Page: #this_page#, PageParams:\"Rids=#CreatorRids#,EditorRids=#EditorRids#,Statuses=#Statuses#,Mode=edit_creator\").Popup(50, $og_edit_creators$)\r\n                            }\r\n                            Div(#RightCol#){\r\n                                ForList(creators){\r\n                                    Span(#role_name#)\r\n                                    If(#creators_index# < #count_creators#){\r\n                                        , Span(Class:mr-sm)\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        Div(row mt-sm){\r\n                            Div(#LeftCol#){\r\n                                LangRes(og_editor_roles)\r\n                                Button(Class: btn btn-link fa fa-edit ml p0, Page: #this_page#, PageParams:\"Rids=#EditorRids#,CreatorRids=#CreatorRids#,Statuses=#Statuses#,Mode=edit_editor\").Popup(50, $og_edit_editors$)\r\n                            }\r\n                            Div(#RightCol#){\r\n                                ForList(editors){\r\n                                    Span(#role_name#)\r\n                                    If(#editors_index# < #count_editors#){\r\n                                        , Span(Class:mr-sm)\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        Div(row mt-sm){\r\n                            Div(#LeftCol#){\r\n                                LangRes(og_statuses)\r\n                                Button(Class: btn btn-link fa fa-edit ml p0, Page: #this_page#, PageParams:\"Statuses=#Statuses#,CreatorRids=#CreatorRids#,EditorRids=#EditorRids#,Mode=edit_statuses\").Popup(50, $og_edit_statuses$)\r\n                            }\r\n                            Div(#RightCol#){\r\n                                ForList(statuses){\r\n                                    Span(#status_name#)\r\n                                    If(#statuses_index# < #count_editors#){\r\n                                        , Span(Class:mr-sm)\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        Div(row mt-sm){\r\n                            If(#Count#>0){}.Else{SetVar(Count,1)}\r\n                            If(#Count#>1){SetVar(MinusClass,)}.Else{SetVar(MinusClass,hidden)}\r\n                            SetVar(PrevCount,Calculate(#Count#-1)).(NextCount,Calculate(#Count#+1))\r\n                            Range(AttributesCount,0,#Count#)\r\n                            Div(#LeftCol#){\r\n                                LangRes(og_attributes) (#Count#)\r\n                                Div(){\r\n                                    Button(Class: btn btn-default fa fa-minus #MinusClass#, Page: #this_page#, PageParams:\"CreatorRids=#CreatorRids#,EditorRids=#EditorRids#,Statuses=#Statuses#,Count=#PrevCount#\")\r\n                                    Button(Class: btn btn-default fa fa-plus, Page: #this_page#, PageParams:\"CreatorRids=#CreatorRids#,EditorRids=#EditorRids#,Statuses=#Statuses#,Count=#NextCount#\")\r\n                                }\r\n                            }\r\n                            Div(#RightCol#){\r\n                                ForList(AttributesCount){\r\n                                    Include(og_edit_attribute)\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    Div(panel-footer text-right){\r\n                        Button(Body: LangRes(og_back), Page: og_objects, Class: btn btn-default pull-left)\r\n                        Button(Body: #BtnTitle#, Page: og_objects, Class: btn btn-primary, Contract: OgEdit)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}.Style(\r\n    .cols {\r\n        -moz-column-count: #cols#;\r\n        -webkit-column-count: #cols#;\r\n        column-count: #cols#;\r\n    }\r\n    .flex {\r\n        display:flex;\r\n    }\r\n    .flex-item {\r\n        flex:1;\r\n    }\r\n    .headless th {\r\n        display:none;\r\n    }\r\n    .inline .checkbox {\r\n        display:inline-block;\r\n    }\r\n)",
            "Name": "og_object_edit",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Conditions": "true",
            "Value": "\r\nDBFind(applications).Columns(\"id\").Where(\"name='Object generator' AND deleted=0\").Vars(application)\r\nIf(GetVar(Id)){\r\n    DBFind(og_objects).Where(\"id=#Id#\").Vars(item)\r\n}\r\nSetVar(title,$og_view$ ##Id#)\r\nSetTitle(#title#)\r\nDiv(content-wrapper){\r\n    Div(breadcrumb){\r\n        LinkPage(Body: $og_objects$, Page: og_objects)\r\n        Span(/, mh)\r\n        Span(#title#, text-muted)\r\n    }\r\n    If(GetVar(Id)){\r\n        Div(row){\r\n            Div(col-sm-8 col-sm-offset-2 col-lg-6 col-lg-offset-3){\r\n                Div(panel panel-primary){\r\n                    Div(panel-heading){\r\n                        LangRes(og_data_view)\r\n                    }\r\n                    Div(panel-body){\r\n                        Div(row mt-sm){\r\n                            Div(col-sm-4 text-right text-bold){\r\n                                LangRes(og_creator_roles)\r\n                            }\r\n                            Div(col-sm-8 text-left){\r\n                                #item_creator_roles#\r\n                            }\r\n                        }\r\n\r\n                        Div(row mt-sm){\r\n                            Div(col-sm-4 text-right text-bold){\r\n                                LangRes(og_info)\r\n                            }\r\n                            Div(col-sm-8 text-left){\r\n                                #item_info#\r\n                            }\r\n                        }\r\n\r\n                        Div(row mt-sm){\r\n                            Div(col-sm-4 text-right text-bold){\r\n                                LangRes(og_deleted)\r\n                            }\r\n                            Div(col-sm-8 text-left){\r\n                                #item_deleted#\r\n                            }\r\n                        }\r\n\r\n                        Div(row mt-sm){\r\n                            Div(col-sm-4 text-right text-bold){\r\n                                LangRes(og_statuses)\r\n                            }\r\n                            Div(col-sm-8 text-left){\r\n                                #item_statuses#\r\n                            }\r\n                        }\r\n\r\n                        Div(row mt-sm){\r\n                            Div(col-sm-4 text-right text-bold){\r\n                                LangRes(og_attributes)\r\n                            }\r\n                            Div(col-sm-8 text-left){\r\n                                #item_attributes#\r\n                            }\r\n                        }\r\n\r\n                        Div(row mt-sm){\r\n                            Div(col-sm-4 text-right text-bold){\r\n                                LangRes(og_editor_roles)\r\n                            }\r\n                            Div(col-sm-8 text-left){\r\n                                #item_editor_roles#\r\n                            }\r\n                        }\r\n                    }\r\n                    Div(panel-footer text-left){\r\n                        Button(Body: LangRes(og_back), Page: og_objects, Class: btn btn-default)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(h3 text-center){\r\n            LangRes(og_item_not_found)\r\n        }\r\n    }\r\n}",
            "Name": "og_object_view",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Conditions": "true",
            "Value": "DBFind(applications).Columns(\"id\").Where(\"name='Object generator' AND deleted=0\").Vars(application)\r\nSetTitle($og_objects$)\r\nSetVar(page_name,og_objects)\r\nDiv(content-wrapper){\r\n    AddToolButton(Title: Create, Page: og_object_edit, Icon: icon-plus)\r\n\r\n    DBFind(og_objects).Count(count)\r\n    If(#page#>0){\r\n        SetVar(prev_page,Calculate(#page#-1)\r\n    }.Else{\r\n        SetVar(page,0).(prev_page,0)\r\n    }\r\n    SetVar(per_page,25).(off,Calculate(#page#*#per_page#)).(last_page,Calculate(#count#/#per_page#)).(next_page,#last_page#)\r\n    If(#count#>Calculate(#off#+#per_page#)){\r\n        SetVar(next_page,Calculate(#page#+1)\r\n    }\r\n    Div(button-group){\r\n        If(#page#>0){\r\n            Button(Body:\"1\", Class:btn btn-default, Page:#page_name#, PageParams: \"page=0\")\r\n        }.Else{\r\n            Button(Body:\"1\", Class:btn btn-default disabled)\r\n        }\r\n        If(#page#>1){\r\n            Button(Body:Calculate(#prev_page#+1),Class:btn btn-default, Page:#page_name#, PageParams:\"page=#prev_page#\")\r\n        }\r\n        If(And(#page#>0,#page#<#last_page#)){\r\n            Button(Body:Calculate(#page#+1), Class:btn btn-default disabled)\r\n        }\r\n        If(#next_page#<#last_page#){\r\n            Button(Body:Calculate(#next_page#+1),Class:btn btn-default,Page:#page_name#, PageParams:\"page=#next_page#\")\r\n        }\r\n        If(#page#<#last_page#){\r\n            Button(Body:Calculate(#last_page#+1), Class:btn btn-default, Page:#page_name#, PageParams:\"page=#last_page#\")\r\n        }.ElseIf(#last_page#>0){\r\n            Button(Body:Calculate(#last_page#+1), Class:btn btn-default disabled)\r\n        }\r\n    }\r\n    Div(panel panel-primary){\r\n        Div(panel-body){\r\n            Div(table-responsive){\r\n                DBFind(og_objects,src_og_objects).Offset(#off#).Order(id).Custom(_actions){\r\n                    Div(text-right text-nowrap){\r\n                        Button(Class: btn btn-info fa fa-eye mr-sm, Page: og_object_view, PageParams: \"Id=#id#\")\r\n                        Button(Class: btn btn-default fa fa-edit mr-sm, Page: og_object_edit, PageParams: \"Id=#id#\")\r\n                        Button(Class: btn btn-danger fa fa-trash, Page: og_objects, Contract: OgDelete, Params: \"Id=#id#\").Alert($delete_alert$, $yes$, $no$)\r\n                    }\r\n                }\r\n                Table(src_og_objects,\"$og_creator_roles$=creator_roles,$og_info$=info,$og_deleted$=deleted,$og_statuses$=statuses,$og_attributes$=attributes,$og_editor_roles$=editor_roles,=_actions\")\r\n            }\r\n        }\r\n    }\r\n}",
            "Name": "og_objects",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract OgCreateCustomStatus {\r\n    data {\r\n        Name string\r\n        Language string \"optional\"\r\n        Translation string \"optional\"\r\n    }\r\n    func appendByName(ar array, m map)array{\r\n        var lenar int\r\n        lenar = Len(ar)\r\n        if lenar == 0{\r\n            ar[0] = m\r\n        }else{\r\n            var i int item map\r\n            while i<lenar{\r\n                item = ar[i]\r\n                if item[\"name\"] == m[\"name\"]{\r\n                    ar[i] = m\r\n                }\r\n                i=i+1\r\n            }\r\n        }\r\n        return ar\r\n    }\r\n    conditions {\r\n        Println($Name, $Language, $Translation)\r\n        if Contains($Name, \" \"){\r\n            warning \"Spaces in Name prohibited\"\r\n        }\r\n        if $Language{\r\n            if Contains($Language, \" \"){\r\n                warning \"Spaces in Lang prohibited\"\r\n            }\r\n        }\r\n        $buf = DBFind(\"buffer_data\").Where(\"member_id=? and key='custom_statuses'\", $key_id).Row()\r\n        if $buf{\r\n            $custom_statuses = JSONDecode($buf[\"value\"])\r\n        }else{\r\n            var ar array\r\n            $custom_statuses = ar\r\n        }\r\n\r\n    }\r\n    action {\r\n        var status map\r\n        if $Language{\r\n            var trans map\r\n            trans[$Language] = $Translation\r\n            status[\"trans\"] = trans\r\n        }\r\n        status[\"name\"] = $Name\r\n        $custom_statuses = JSONEncode(appendByName($custom_statuses, status))\r\n        Println($custom_statuses)\r\n        // @1buffer_Manager(\"Action,Key,Value\",\"set\", \"custom_statuses\", $custom_statuses)\r\n        if $buf{\r\n            DBUpdate(\"buffer_data\", Int($buf[\"id\"]), \"value\", $custom_statuses)\r\n        }else{\r\n            DBInsert(\"buffer_data\", \"member_id,key,value\", $key_id, \"custom_statuses\", $custom_statuses)\r\n        }\r\n    }\r\n}",
            "Name": "OgCreateCustomStatus",
            "Type": "contracts"
        },
        {
            "Conditions": "true",
            "Value": "contract OgDelete {\r\n    data {\r\n        Id int\r\n    }\r\n    conditions {\r\n        if !DBFind(\"og_objects\").Where(\"id=? and deleted=0\", $Id).One(\"id\") {\r\n            warning \"Record not found\"\r\n        }\r\n    }\r\n    action {\r\n        DBUpdate(\"og_objects\", $Id, \"deleted\", $time)\r\n    }\r\n}",
            "Name": "OgDelete",
            "Type": "contracts"
        },
        {
            "Conditions": "true",
            "Value": "contract OgEdit {\r\n    data {\r\n        Id string \"optional\"\r\n        CreatorRoles string\r\n        Info string\r\n        Deleted int\r\n        Statuses string\r\n        Attributes string\r\n        EditorRoles string\r\n    }\r\n    conditions {\r\n        $Id = Int($Id)\r\n        if $Id > 0{\r\n            if !DBFind(\"og_objects\").Where(\"id=?\", $Id).One(\"id\") {\r\n                warning \"Record not found\"\r\n            }\r\n        }\r\n    }\r\n    action {\r\n        if $Id > 0{\r\n            DBUpdate(\"og_objects\", $Id, \"creator_roles,info,deleted,statuses,attributes,editor_roles\",$CreatorRoles,$Info,$Deleted,$Statuses,$Attributes,$EditorRoles)\r\n        }else{\r\n            DBInsert(\"og_objects\", \"creator_roles,info,deleted,statuses,attributes,editor_roles\",$CreatorRoles,$Info,$Deleted,$Statuses,$Attributes,$EditorRoles)\r\n        }\r\n    }\r\n}",
            "Name": "OgEdit",
            "Type": "contracts"
        }
    ]
}