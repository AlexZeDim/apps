{
    "name": "Trade APL",
    "conditions": "ContractConditions(\"MainCondition\")",
    "data": [
        {
            "Name": "admin_menu",
            "Conditions": "ContractAccess(\"@1EditMenu\")",
            "Value": "MenuItem(Title:$@1ta_settings$, Page:ta_settings, Icon:\"icon-wrench\")",
            "Type": "menu"
        },
        {
            "Name": "default_menu",
            "Conditions": "ContractAccess(\"@1EditMenu\")",
            "Value": "SetVar(is_allowed, 0).(k_id, 0).(unreaded_wallet_id,0).(exist_wallet_id,0)\r\nDBFind(@1keys).Where({id:#key_id#}).Vars(k)\r\nDBFind(@1wallets).Where({key_id_buyer:#key_id#}).Vars(exist_wallet)\r\nDBFind(@1wallets).Where({key_id_buyer:#key_id#, rejected_at:0, signed_at:0}).Vars(unreaded_wallet)\r\n\r\nIf(#k_id#!=0){\r\n    If(#exist_wallet_id#>0){\r\n        If(#unreaded_wallet_id#==0){\r\n            SetVar(is_allowed, 1)\r\n        }\r\n    }.Else{\r\n        SetVar(is_allowed, 1)\r\n    }\r\n}\r\n\r\nIf(#is_allowed#==1){\r\n    DBFind(@1applications).Where({ecosystem:#ecosystem_id#, name:\"Trade APL\"}).Columns(\"id\").Vars(ta_app)\r\n    SetVar(snapswap_role_id,0).(admin_role_id,0).(manager_role_id,0).(seller_role_id,0)\r\n    SetVar(snapswap_role_id, AppParam(App:#ta_app_id#, Name:role_snapswap, Ecosystem: #ecosystem_id#))\r\n    SetVar(admin_role_id, AppParam(App:#ta_app_id#, Name:role_sale_apl_admin, Ecosystem: #ecosystem_id#))\r\n    SetVar(manager_role_id, AppParam(App:#ta_app_id#, Name:role_sale_apl_manager, Ecosystem: #ecosystem_id#))\r\n    SetVar(seller_role_id, AppParam(App:#ta_app_id#, Name:role_seller_apl, Ecosystem: #ecosystem_id#))\r\n\r\n    MenuItem(Title:$@1profile$, Page:@1profile_view, Icon:\"icon-wallet\")\r\n    MenuItem(Title:$@1notifications$, Page:@1notifications_list, Icon:\"icon-flag\")\r\n    MenuItem(Title:$@1ecosystem_members$, Page:@1members_list, Icon:\"fa icon-people\")\r\n    MenuItem(Title:$@1ecosystems$, Page:@1ecosystems_list, Icon:\"fa fa-list-ul\")\r\n    MenuGroup(Title:$@1admin$, Icon:\"icon-arrow-right\"){\r\n        MenuItem(Title:$@1roles$, Page:@1roles_list, Icon:\"fa fa-list-ul\")\r\n        MenuItem(Title:$@1votings$, Page:@1voting_list, Icon:\"fa fa-edit\")\r\n        If(#ecosystem_id#==1){\r\n            MenuItem(Title:$@1tokens_refund$, Page:@1tokenrefund_list, Icon:\"icon-shuffle\")\r\n            MenuItem(Title:$@1sysparams_candidates$, Page:@1sysparams_candidates_list, Icon:\"icon-graduation\")\r\n        }\r\n    }\r\n\r\n    If(And(#admin_role_id#>0,Or(#role_id#==#admin_role_id#,#role_id#==#manager_role_id#,#role_id#==#seller_role_id#))){\r\n        MenuItem(Title:$@1ta_transfer_admin$, Page:@1ta_transfer_admin, Icon:\"icon-credit-card\")\r\n    }\r\n    If(And(#snapswap_role_id#>0,#role_id#==#snapswap_role_id#)){\r\n        MenuItem(Title:$@1ta_wallets$, Page:@1ta_wallets, Icon:\"icon-credit-card\")\r\n    }\r\n}",
            "Type": "menu"
        },
        {
            "Name": "sales",
            "Columns": "[{\"conditions\":\"false\",\"name\":\"buyer_transferred_at\",\"type\":\"number\"},{\"conditions\":\"ContractAccess(\\\"@1TaReject\\\")\",\"name\":\"seller_reject_comment\",\"type\":\"text\"},{\"conditions\":\"false\",\"name\":\"amount\",\"type\":\"varchar\"},{\"conditions\":\"false\",\"name\":\"currency_type\",\"type\":\"number\"},{\"conditions\":\"ContractAccess(\\\"@1TaReject\\\")\",\"name\":\"manager_rejected_at\",\"type\":\"number\"},{\"conditions\":\"ContractAccess(\\\"@1TaTransferSeller\\\")\",\"name\":\"seller_transferred_at\",\"type\":\"number\"},{\"conditions\":\"false\",\"name\":\"amount_apl\",\"type\":\"money\"},{\"conditions\":\"ContractAccess(\\\"@1TaReject\\\",\\\"@1TaTransferSeller\\\")\",\"name\":\"key_id_seller\",\"type\":\"number\"},{\"conditions\":\"ContractAccess(\\\"@1TaReject\\\")\",\"name\":\"seller_rejected_at\",\"type\":\"number\"},{\"conditions\":\"false\",\"name\":\"key_id_sale_apl_admin\",\"type\":\"number\"},{\"conditions\":\"ContractAccess(\\\"@1TaReject\\\")\",\"name\":\"manager_reject_comment\",\"type\":\"text\"},{\"conditions\":\"ContractAccess(\\\"@1TaReject\\\",\\\"@1TaTransferManager\\\")\",\"name\":\"key_id_sale_apl_manager\",\"type\":\"number\"},{\"conditions\":\"false\",\"name\":\"created_at\",\"type\":\"number\"},{\"conditions\":\"false\",\"name\":\"key_id_buyer\",\"type\":\"number\"}\r\n]",
            "Permissions": "{\"insert\": \"ContractAccess(\\\"@1TaTransferAdmin\\\")\", \"update\": \"ContractAccess(\\\"@1TaReject\\\",\\\"@1TaTransferSeller\\\",\\\"@1TaTransferManager\\\")\", \"new_column\": \"ContractConditions(\\\"MainCondition\\\")\"}",
            "Type": "tables"
        },
        {
            "Name": "wallets",
            "Columns": "[{\"conditions\":\"ContractAccess(\\\"@1TaBuyerAction\\\",\\\"@1TaAsblAction\\\")\",\"name\":\"rejected_at\",\"type\":\"number\"},{\"conditions\":\"ContractAccess(\\\"@1TaBuyerAction\\\")\",\"name\":\"key_id_buyer\",\"type\":\"number\"},{\"conditions\":\"ContractAccess(\\\"@1TaAsblAction\\\")\",\"name\":\"key_id_signer\",\"type\":\"number\"},{\"conditions\":\"false\",\"name\":\"btc\",\"type\":\"money\"},{\"conditions\":\"false\",\"name\":\"eth\",\"type\":\"money\"},{\"conditions\":\"ContractAccess(\\\"@1TaBuyerAction\\\")\",\"name\":\"signed_at\",\"type\":\"number\"},{\"conditions\":\"false\",\"name\":\"created_at\",\"type\":\"number\"}\r\n]",
            "Permissions": "{\"insert\": \"ContractAccess(\\\"@1TaKeyCheck\\\")\", \"update\": \"ContractAccess(\\\"@1TaBuyerAction\\\",\\\"@1TaAsblAction\\\")\", \"new_column\": \"ContractConditions(\\\"MainCondition\\\")\"}",
            "Type": "tables"
        },
        {
            "Name": "role_sale_apl_admin",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "0",
            "Type": "app_params"
        },
        {
            "Name": "role_sale_apl_manager",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "0",
            "Type": "app_params"
        },
        {
            "Name": "role_seller_apl",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "0",
            "Type": "app_params"
        },
        {
            "Name": "role_snapswap",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "0",
            "Type": "app_params"
        },
        {
            "Name": "ta_currency_type",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "@1btc,@1eth,@1euro",
            "Type": "app_params"
        },
        {
            "Name": "default_page",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "DBFind(wallets).Where({key_id_buyer:#key_id#, rejected_at:0, signed_at:0}).Vars(unconfirmed_wallet)\r\nSetVar(founder,EcosysParam(founder_account))\r\nDiv(content-wrapper){\r\n    If(#ecosystem_id#==0){\r\n        SetTitle(\"\")\r\n    }.ElseIf(#unconfirmed_wallet_id#>0){\r\n        Div(panel panel-primary){\r\n            Div(list-group-item){\r\n                Div(){\r\n                    $@1ta_hello_user_description$\r\n                }\r\n                Div(){\r\n                    $@1read_please$ LinkPage(Body: $@1ta_buyer_contract$, Page: ta_buyer_contract)\r\n                }\r\n            }\r\n        }\r\n    }.ElseIf(#founder#==#key_id#){\r\n        Div(panel panel-primary){\r\n            Div(list-group-item text-center){\r\n                P(Class: h3 m0 text-bold, Body: $@1default_main$)\r\n            }\r\n            Div(list-group-item){\r\n                Span(Class: h3, Body: $@1default1$)\r\n                Span(Class: h3 text-primary, Body: \" https://github.com/GenesisKernel/apps \")\r\n                Span(Class: h3, Body: $@1default2$)\r\n                Span(Class: h3 text-primary, Body: \" https://genesiskernel.readthedocs.io\")\r\n            }\r\n            Div(panel-footer text-right clearfix){\r\n                Div(pull-left){\r\n                    Button(Body: $@1ecosystem_parameters$, Class: btn btn-default, Page: @1params_list)\r\n                }.Style(margin-right: 20px;)\r\n                Div(pull-left){\r\n                    Button(Body: $@1dashboard$, Class: btn btn-default, Page: @1admin_index)\r\n                }\r\n                Button(Body: $@1import$, Class: btn btn-primary, Page: @1import_upload)\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "ta_asbl_contract",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "DBFind(@1applications).Where({ecosystem:#ecosystem_id#, name:\"Trade APL\"}).Columns(\"id\").Vars(application)\r\nSetVar(isStartProcessing,0)\r\nIf(#notific_id#>0){\r\n    DBFind(@1notifications).Where({ecosystem:#ecosystem_id#, id:#notific_id#}).Columns(\"page_params->wallet_id,date_start_processing,notification->type,processing_info->member_id\").Vars(note)\r\n    If(#note_date_start_processing#!=\"\"){\r\n        SetVar(isStartProcessing,1)\r\n    }\r\n}\r\n\r\nSetVar(this_page, ta_asbl_contract)\r\nSetTitle(\"Страница подписи представителем роли Apla Consensus\")\r\nDiv(content-wrapper){\r\n    Div(row mt-sm){\r\n        Div(col-lg-10 col-lg-offset-1){\r\n            Form(panel panel-primary){\r\n                DBFind(wallets).Where({id:#note_page_params_wallet_id#, rejected_at:0}).Vars(wallet)\r\n                If(#wallet_id#>0){\r\n                    Div(panel-body){\r\n                        Div(){\r\n                            покупатель: Address(#wallet_key_id_buyer#)\r\n                        }\r\n                        Div(){\r\n                            дата подписания договора покупателем: DateTime(#wallet_signed_at#, \"YYYY-MM-DD HH:MI:SS\")\r\n                        }\r\n                    }\r\n                    Div(panel-footer){\r\n                        If(And(#note_processing_info_member_id#==#key_id#,#isStartProcessing#==1)){\r\n                            Button(Body: $@1reject$, Class: btn btn-default, Page: default_page, Contract: TaAsblAction, Params: \"Action=reject,WalletId=#note_page_params_wallet_id#,NotificId=#notific_id#\")\r\n                            Button(Body: $@1accept$, Class: btn btn-primary pull-right, Page: default_page, Contract: TaAsblAction, Params: \"Action=accept,WalletId=#note_page_params_wallet_id#,NotificId=#notific_id#\")\r\n                        }.ElseIf(#isStartProcessing#==1){\r\n                            Div(text-muted text-center){\r\n                                process begin another manager\r\n                            }\r\n                        }.ElseIf(#isStartProcessing#==0){\r\n                            Div(text-center){\r\n                                Button(Body: $@1processing$, Class: btn btn-primary, Page: #this_page#, PageParams: \"notific_id=#notific_id#\", Contract: @1NotificationsProcess, Params: \"notific_id=#notific_id#\")\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                }.Else{\r\n                    Div(panel-body){\r\n                        wallet не найден\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "ta_buyer_congratulation",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "DBFind(@1applications).Where({ecosystem:#ecosystem_id#, name:\"Trade APL\"}).Columns(\"id\").Vars(application)\r\nDBFind(@1notifications).Where({ecosystem:#ecosystem_id#, id:#notific_id#}).Columns(\"page_params->wallet_id\").Vars(note)\r\n\r\n\r\nSetVar(this_page, ta_buyer_congratulation)\r\nDiv(content-wrapper){\r\n    Div(row mt-sm){\r\n        Div(col-lg-10 col-lg-offset-1){\r\n            Form(panel panel-primary){\r\n                DBFind(wallets).Where({key_id_signer:{$neq:0}, rejected_at:0}).Vars(wallet)\r\n                If(#wallet_id#>0){\r\n                    Div(panel-body){\r\n                        текст, мол, спасибо, теперь вы можете перевести сумму любым способом, указанным в договоре\r\n                    }\r\n                    Div(panel-footer text-center){\r\n                        Button(Body: $@1readed$, Class: btn btn-primary, Page: default_page, Contract: NotificationsClose, Params: \"notific_id=#notific_id#\")\r\n                    }\r\n                }.Else{\r\n                    Div(panel-body){\r\n                        wallet не найден\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "ta_buyer_contract",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "DBFind(@1applications).Where({ecosystem:#ecosystem_id#, name:\"Trade APL\"}).Columns(\"id\").Vars(application)\r\nDBFind(wallets).Where({key_id_buyer:#key_id#, key_id_signer:0, rejected_at:0}).Vars(unconfirmed_wallet)\r\n\r\nSetTitle(\"Страница с договором на которую покупатель переходит при заходе\")\r\nDiv(content-wrapper){\r\n    Div(row mt-sm){\r\n        Div(col-lg-10 col-lg-offset-1){\r\n            Form(panel panel-primary){\r\n                If(#unconfirmed_wallet_id#>0){\r\n                    Div(panel-body){\r\n                        текст договора будет чуть позже the text of the Treaty will be a little later текст договора будет чуть позже the text of the Treaty will be a little laterтекст договора будет чуть позже the text of the Treaty will be a little laterтекст договора будет чуть позже the text of the Treaty will be a little laterтекст договора будет чуть позже the text of the Treaty will be a little laterтекст договора будет чуть позже the text of the Treaty will be a little laterтекст договора будет чуть позже the text of the Treaty will be a little later\r\n                    }\r\n                    Div(panel-footer){\r\n                        Button(Body: $@1reject$, Class: btn btn-danger, Page: default_page, Contract: TaBuyerAction, Params: \"Action=reject\")\r\n                        Button(Body: $@1accept$, Class: btn btn-primary pull-right, Page: default_page, Contract: TaBuyerAction, Params: \"Action=accept\")\r\n                    }\r\n                }.Else{\r\n                    Div(panel-body){\r\n                        вы уже заключили договор с Apla\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "ta_key_check",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "Form(){\r\n    Div(form-group){\r\n        Div(row){\r\n            Div(col-md-10 mt-sm col-md-offset-2){\r\n                Span(Body: LangRes(@1ta_public_key_input_des), Class: text-muted)\r\n            }\r\n        }\r\n        Div(row){\r\n            Div(col-md-2 mt-sm text-right){\r\n                Label(For: public_key){\r\n                    LangRes(@1pub_key)\r\n                }\r\n            }\r\n            Div(col-md-10 mt-sm){\r\n                Input(Name: public_key, Type: textarea)\r\n            }\r\n        }\r\n        Div(row){\r\n            Div(col-md-2 mt-lg text-right){\r\n                Label(For: token_buyer){\r\n                    LangRes(@1public_key_type)\r\n                }\r\n            }\r\n            Div(col-md-10 mt-sm){\r\n                Data(key_radio, \"value,description\"){\r\n                    investor,$@1ta_investor_key$\r\n                    user,$@1ta_user_key$\r\n                }\r\n                RadioGroup(Name: key_type, Source: key_radio, NameColumn: description, ValueColumn: value)\r\n            }\r\n        }\r\n    }\r\n    Div(row mt){\r\n        Div(col-md-12){\r\n            Input(Name: current_role_id, Type: hidden, Value: #role_id#)\r\n            Button(Body: LangRes(@1back), Class: btn btn-default, Page: @1ta_wallets)\r\n            Button(Body: LangRes(@1send), Class: btn btn-primary pull-right, Page: @1ta_wallets, Contract: @1TaKeyCheck).Alert(Text: $@1want_add_investor$, ConfirmButton: $@1yes$, CancelButton: $@1no$, Icon: question)\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "ta_notification",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "DBFind(@1applications).Where({ecosystem:#ecosystem_id#, name:\"Trade APL\"}).Columns(\"id\").Vars(application)\r\nIf(#notific_id#>0){\r\n    DBFind(@1notifications).Where({ecosystem:#ecosystem_id#, id:#notific_id#}).Columns(\"notification->header,notification->body,id\").Vars(note)\r\n}\r\n\r\nDiv(content-wrapper){\r\n    Div(row mt-sm){\r\n        Div(col-lg-10 col-lg-offset-1){\r\n            Form(panel panel-primary){\r\n                DBFind(wallets).Where({key_id_signer:{$neq:0}, rejected_at:0}).Vars(wallet)\r\n                If(#note_id#>0){\r\n                    Div(panel-body){\r\n                        Div(){\r\n                            #note_notification_header#\r\n                        }\r\n                        Div(){\r\n                            #note_notification_body#\r\n                        }\r\n                    }\r\n                    Div(panel-footer text-center){\r\n                        If(#note_notification_header#==\"Welcome to APLA\"){\r\n                            Button(Body: $@1readed$, Class: btn btn-primary, Page: @1ta_buyer_contract, Contract: NotificationsClose, Params: \"notific_id=#notific_id#\")\r\n                        }.Else{\r\n                            Button(Body: $@1readed$, Class: btn btn-primary, Page: @1default_page, Contract: NotificationsClose, Params: \"notific_id=#notific_id#\")\r\n                        }\r\n                    }\r\n                }.Else{\r\n                    Div(panel-body){\r\n                        Оповещение не найдено\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "ta_reject",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "DBFind(@1applications).Where({ecosystem:#ecosystem_id#, name:\"Trade APL\"}).Columns(\"id\").Vars(application)\r\n\r\nSetVar(needed_role_id,0)\r\nIf(GetVar(RoleParam)!=\"\"){\r\n    SetVar(needed_role_id, AppParam(App:#application_id#, Name:#RoleParam#, Ecosystem: #ecosystem_id#))\r\n}\r\nIf(GetVar(notific_id)!=\"\"){\r\n    DBFind(@1notifications).Where({ecosystem:#ecosystem_id#, id:#notific_id#}).Columns(\"page_params->sale_id\").Vars(note)\r\n}\r\nSetVar(sale_id,0)\r\nIf(#note_page_params_sale_id#>0){\r\n    DBFind(sales).Where({id:#note_page_params_sale_id#}).Vars(sale)\r\n}\r\n\r\nDiv(content-wrapper){\r\n    Form(){\r\n        If(And(#needed_role_id#>0,#role_id#==#needed_role_id#,#sale_id#>0)){\r\n            Div(mb){\r\n                Input(Name:Comment, Type:textarea)\r\n            }\r\n            Div(){\r\n                Button(Body: $@1back$, Class: btn btn-default, Page: #back_page#, PageParams: \"notific_id=#notific_id#\")\r\n                Button(Body: $@1send$, Class: btn btn-primary pull-right, Page: default_page, Contract: TaReject, Params: \"RoleParam=#RoleParam#,NotificId=#notific_id#\")\r\n            }\r\n        }.Else{\r\n            Div(text-center text-muted){\r\n                If(And(#needed_role_id#>0,#role_id#!=#needed_role_id#)){\r\n                    Div(){\r\n                        for added comment you must be logined as role id #needed_role_id#\r\n                    }\r\n                }\r\n                If(#sale_id#==0){\r\n                    Div(){\r\n                        sale not found\r\n                    }\r\n                }\r\n            }\r\n            Div(){\r\n                Button(Body: $@1back$, Class: btn btn-default, Page: #back_page#, PageParams: \"notific_id=#notific_id#\")\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "ta_sale_form",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "DBFind(@1applications).Where({ecosystem:#ecosystem_id#, name:\"Trade APL\"}).Columns(\"id\").Vars(application)\r\n\r\nSetVar(this_page, ta_transfer_admin)\r\nSetVar(row,\"row mt-sm\").(col_left,\"col-sm-4 mt-sm text-right\").(col_right,\"col-sm-8 text-left\")\r\n\r\nAppParam(App:#application_id#, Name:ta_currency_type, Ecosystem: #ecosystem_id#, Source:currency_type)\r\n\r\nDBFind(wallets, wallets).Where({key_id_buyer:{$neq:0}, key_id_signer:{$neq:0}, rejected_at:0}).Count(wallets_count).Custom(_name){\r\n    Address(#key_id_buyer#)\r\n}\r\nForm(){\r\n    Div(#row#){\r\n        Div(#col_left#){\r\n            $@1wallet$\r\n        }\r\n        If(#wallets_count#==0){\r\n            Div(#col_right# mt-sm){\r\n                Span($@1wallets$ $@1not_founded$, text-warning)\r\n            }\r\n        }.Else{\r\n            Div(#col_right#){\r\n                Select(Name:WalletId, Source:wallets, NameColumn: _name, ValueColumn: id)\r\n            }\r\n        }\r\n    }\r\n    Div(#row#){\r\n        Div(#col_left#){\r\n            $@1investment_amount$\r\n        }\r\n        Div(#col_right#){\r\n            Div(row){\r\n                Div(col-sm-8){\r\n                    Input(Name:Amount, Type:number)\r\n                }\r\n                Div(col-sm-4){\r\n                    Select(Name:CurrencyType, Source:currency_type, NameColumn: name, ValueColumn: id)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    Div(#row#){\r\n        Div(#col_left#){\r\n            $@1amount_apl$\r\n        }\r\n        Div(#col_right#){\r\n            Input(Name:AmountApl, Type:number)\r\n        }\r\n    }\r\n    Div(#row#){\r\n        Div(#col_left#){\r\n            $@1investor_funds_transfer_date$\r\n        }\r\n        Div(#col_right#){\r\n            Div(row){\r\n                Div(col-sm-6){\r\n                    Input(Name:TransferredDate, Type:date)\r\n                }\r\n                Div(col-sm-6){\r\n                    Input(Name:TransferredTime, Type:time)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    Div(row mt){\r\n        Div(col-md-12 text-right){\r\n            Button(Body: LangRes(@1back), Class: btn btn-default pull-left, Page: @1ta_transfer_admin)\r\n            If(#wallets_count#==0){\r\n                Button(Body: $@1send_to_check$, Class: btn btn-primary disabled, Page: #this_page#)\r\n            }.Else{\r\n                Button(Body: $@1send_to_check$, Class: btn btn-primary, Page: #this_page#, Contract: TaTransferAdmin).Alert(Text: $@1want_add_investor$, ConfirmButton: $@1yes$, CancelButton: $@1no$, Icon: question)\r\n            }\r\n        }\r\n    }\r\n}\r\n",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "ta_settings",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "DBFind(@1applications).Where({ecosystem:#ecosystem_id#, name:\"Trade APL\"}).Columns(\"id\").Vars(application)\r\n\r\nSetVar(this_page, ta_settings).(role_admin,0).(role_manager,0).(role_seller,0)\r\nSetVar(role_admin, AppParam(App:#application_id#, Name:role_sale_apl_admin, Ecosystem: #ecosystem_id#))\r\nSetVar(role_manager, AppParam(App:#application_id#, Name:role_sale_apl_manager, Ecosystem: #ecosystem_id#))\r\nSetVar(role_seller, AppParam(App:#application_id#, Name:role_seller_apl, Ecosystem: #ecosystem_id#))\r\nSetVar(role_snapswap, AppParam(App:#application_id#, Name:role_snapswap, Ecosystem: #ecosystem_id#))\r\n\r\nDBFind(@1roles,src_roles).Where({ecosystem:#ecosystem_id#, deleted:0}).Columns(\"role_name,id\").Limit(100)\r\n\r\nSetVar(row,\"row mt-sm\").(col_left,\"col-sm-4 text-right mt-sm\").(col_right,\"col-sm-8 text-left\")\r\nSetTitle($@1ta_settings$)\r\nDiv(content-wrapper){\r\n    Div(row mt-sm){\r\n        Div(col-lg-8 col-lg-offset-2){\r\n            Form(panel panel-primary){\r\n                Div(panel-body){\r\n                    Div(#row#){\r\n                        Div(col-sm-12 text-center text-muted){\r\n                            $@1ta_settings_description$\r\n                        }\r\n                    }\r\n                    Div(#row#){\r\n                        Div(#col_left#){\r\n                            $@1role_sale_apl_admin$\r\n                        }\r\n                        Div(#col_right#){\r\n                            Select(Name:RoleAdmin, Source:src_roles, NameColumn: role_name, ValueColumn: id, Value:#role_admin#)\r\n                        }\r\n                    }\r\n                    Div(#row#){\r\n                        Div(#col_left#){\r\n                            $@1role_sale_apl_manager$\r\n                        }\r\n                        Div(#col_right#){\r\n                            Select(Name:RoleManager, Source:src_roles, NameColumn: role_name, ValueColumn: id, Value:#role_manager#)\r\n                        }\r\n                    }\r\n                    Div(#row#){\r\n                        Div(#col_left#){\r\n                            $@1role_seller_apl$\r\n                        }\r\n                        Div(#col_right#){\r\n                            Select(Name:RoleSeller, Source:src_roles, NameColumn: role_name, ValueColumn: id, Value:#role_seller#)\r\n                        }\r\n                    }\r\n                    Div(#row#){\r\n                        Div(#col_left#){\r\n                            $@1role_snapswap$\r\n                        }\r\n                        Div(#col_right#){\r\n                            Select(Name:RoleSnapswap, Source:src_roles, NameColumn: role_name, ValueColumn: id, Value:#role_snapswap#)\r\n                        }\r\n                    }\r\n                }\r\n                Div(panel-footer text-center){\r\n                    Button(Body: $@1apply_settings$, Class: btn btn-primary, Page: #this_page#, Contract: TaSettings)\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "admin_menu",
            "Type": "pages"
        },
        {
            "Name": "ta_transfer_admin",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "DBFind(@1applications).Where({ecosystem:#ecosystem_id#, name:\"Trade APL\"}).Columns(\"id\").Vars(application)\r\nSetVar(this_page, @1ta_transfer_admin)\r\nSetVar(admin_role_id, AppParam(App:#application_id#, Name:role_sale_apl_admin, Ecosystem: #ecosystem_id#))\r\nSetVar(snapswap_role_id, AppParam(App:#application_id#, Name:role_snapswap, Ecosystem: #ecosystem_id#))\r\n\r\nDiv(content-wrapper){\r\n\tSetTitle($@1ta_transfer_admin$)\r\n\tIf(And(#admin_role_id#>0,#role_id#==#admin_role_id#)){\r\n\t\tAddToolButton(Title:$@1ta_sale_form$, Page: @1ta_sale_form, Icon: icon-wallet).Popup(Header: $@1ta_sale_form$, Width: \"50\")\r\n\t}\r\n\r\n\tIf(GetVar(Search)!=\"\"){\r\n\t\tSetVar(Where, {$or:[{\"key_id_buyer\":#Search#},{\"key_id_sale_apl_manager\":#Search#}, {\"key_id_sale_apl_admin\":#Search#}, {\"key_id_seller\":#Search#}]})\r\n\t}.Else{\r\n\t\tSetVar(Where, {id:{$gt:0}}).(Search,)\r\n\t}\r\n\t\r\n    Form(panel panel-primary){\r\n        Div(panel-body){\r\n            Div(row){\r\n\t\t\t\tDiv(col-md-12){\r\n\t\t\t\t\tForm(input-group){\r\n\t\t\t\t\t\tDiv(input-group-addon){\r\n\t\t\t\t\t\t\tLangRes(@1key_id)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tInput(Name: Search, Value: #Search#)\r\n\t\t\t\t\t\tDiv(input-group-btn){\r\n\t\t\t\t\t\t\tIf(GetVar(Search)!=\"\"){\r\n\t\t\t\t\t\t\t\tButton(Class: btn btn-default fa fa-close, Page: #this_page#)\r\n\t\t\t\t\t\t\t}\r\n                            Button(Class: btn btn-default fa fa-search, Page: #this_page#, PageParams: \"Search=Val(Search),type=1\")\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n            }\r\n\r\n\t\t\tDBFind(sales, sales).Where(#Where#).Order({id:-1}).Count(sales_count).Custom(_btat){\r\n\t\t\t\tSpan(Class: text-muted, Body: DateTime(#buyer_transferred_at#, Format: YYYY-MM-DD HH:MI:SS))\r\n\t\t\t}.Custom(_cat){\r\n\t\t\t\tSpan(Class: text-muted, Body: DateTime(#created_at#, Format: YYYY-MM-DD HH:MI:SS))\r\n\t\t\t}.Custom(_amount){\r\n\t\t\t\tDiv(text-right){\r\n\t\t\t\t\tSpan(Class: text-bold, Body: #amount#).Style(margin-right:5px;)\r\n\t\t\t\t\tSpan(Class: text-bold, Body: AppParam(App:#application_id#, Name:ta_currency_type, Ecosystem: #ecosystem_id#, Index: #currency_type#))\r\n\t\t\t\t}\r\n\t\t\t\tDiv(text-right){\r\n\t\t\t\t\tSpan(Class: text-bold, Body: Money(#amount_apl#)).Style(margin-right:5px;)\r\n\t\t\t\t\tSpan(Class: text-bold, Body: APL)\r\n\t\t\t\t}\r\n\t\t\t}.Custom(_info){\r\n                Button(Class: btn btn-link, Page: @1ta_transfer_view, PageParams: \"Id=#id#\"){\r\n                    Span(Class: text-bold, Body: LangRes(@1information))\r\n                }.Popup(Header: $@1information$, Width: \"30\")\r\n\t\t\t}\r\n\r\n            Div(row){\r\n                Div(col-md-12){\r\n                    Table(sales,\"$@1id$=id,$@1information$=_info,$@1key_id_buyer$=key_id_buyer,$@1investor_funds_transfer_date$=_btat,$@1created_at$=_cat,=_amount\")\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "ta_transfer_manager",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "DBFind(@1applications).Where({ecosystem:#ecosystem_id#, name:\"Trade APL\"}).Columns(\"id\").Vars(application)\r\n\r\nSetVar(this_page, ta_transfer_manager)\r\nSetVar(role_param, role_sale_apl_manager)\r\nSetVar(row,\"row mt-sm\").(col_left,\"col-sm-4 text-right\").(col_right,\"col-sm-8 text-left\")\r\nSetVar(needed_role_id, AppParam(App:#application_id#, Name:#role_param#, Ecosystem: #ecosystem_id#))\r\n\r\nSetVar(isStartProcessing,0)\r\nIf(#notific_id#>0){\r\n    DBFind(@1notifications).Where({ecosystem:#ecosystem_id#, id:#notific_id#}).Columns(\"page_params->sale_id,date_start_processing,notification->type,processing_info->member_id\").Vars(note)\r\n    If(#note_date_start_processing#!=\"\"){\r\n        SetVar(isStartProcessing,1)\r\n    }\r\n}\r\nSetVar(sale_id,0)\r\nIf(#note_page_params_sale_id#>0){\r\n    DBFind(sales).Where({id:#note_page_params_sale_id#}).Vars(sale)\r\n}\r\nSetTitle($@1ta_transfer_manager$)\r\nDiv(content-wrapper){\r\n    Div(row mt-sm){\r\n        Div(col-lg-10 col-lg-offset-1){\r\n            Form(panel panel-primary){\r\n                If(And(#needed_role_id#>0,#role_id#==#needed_role_id#,#sale_id#>0)){\r\n                    Div(panel-body){\r\n                        Div(#row#){\r\n                            Div(#col_left#){\r\n                                $@1wallet$\r\n                            }\r\n                            Div(#col_right#){\r\n                                #sale_key_id_buyer#\r\n                            }\r\n                        }\r\n                        Div(#row#){\r\n                            Div(#col_left#){\r\n                                $@1amount$\r\n                            }\r\n                            Div(#col_right#){\r\n                                #sale_amount#\r\n                            }\r\n                        }\r\n                        Div(#row#){\r\n                            Div(#col_left#){\r\n                                $@1currency_type$\r\n                            }\r\n                            Div(#col_right#){\r\n                                AppParam(App:#application_id#, Name:ta_currency_type, Ecosystem: #ecosystem_id#, Index: #sale_currency_type#)\r\n                            }\r\n                        }\r\n                        Div(#row#){\r\n                            Div(#col_left#){\r\n                                $@1amount_apl$\r\n                            }\r\n                            Div(#col_right#){\r\n                                Money(#sale_amount_apl#)\r\n                            }\r\n                        }\r\n                        Div(#row# text-muted){\r\n                            Div(#col_left#){\r\n                                $@1investor_funds_transfer_date$\r\n                            }\r\n                            Div(#col_right#){\r\n                                DateTime(#sale_buyer_transferred_at#, Format: YYYY-MM-DD HH:MI:SS)\r\n                            }\r\n                        }\r\n                        Div(#row# text-muted){\r\n                            Div(#col_left#){\r\n                                $@1created_at$\r\n                            }\r\n                            Div(#col_right#){\r\n                                DateTime(#sale_created_at#, Format: YYYY-MM-DD HH:MI:SS)\r\n                            }\r\n                        }\r\n                        Div(#row# text-muted){\r\n                            Div(#col_left#){\r\n                                $@1created_by$\r\n                            }\r\n                            Div(#col_right#){\r\n                                Address(#sale_key_id_sale_apl_admin#)\r\n                            }\r\n                        }\r\n                    }\r\n                    Div(panel-footer){\r\n                        If(And(#note_processing_info_member_id#==#key_id#,#isStartProcessing#==1)){\r\n                            Button(Body: $@1reject$, Class: btn btn-danger, Page: ta_reject, PageParams: \"RoleParam=#role_param#,notific_id=#notific_id#,back_page=#this_page#\").Popup(50,\"Rejected comment\")\r\n                            Button(Body: $@1accept$, Class: btn btn-primary pull-right, Page: default_page, Contract: TaTransferManager, Params: \"SaleId=#sale_id#,NotificId=#notific_id#\")\r\n                        }.ElseIf(#isStartProcessing#==1){\r\n                            Div(text-muted text-center){\r\n                                process begin another manager\r\n                            }\r\n                        }.ElseIf(#isStartProcessing#==0){\r\n                            Div(text-center){\r\n                                Button(Body: $@1processing$, Class: btn btn-primary, Page: #this_page#, PageParams: \"notific_id=#notific_id#\", Contract: @1NotificationsProcess, Params: \"notific_id=#notific_id#\")\r\n                            }\r\n                        }\r\n                    }\r\n                }.Else{\r\n                    Div(panel-body text-center){\r\n                        If(#needed_role_id#>0){\r\n                            If(#needed_role_id#!=#role_id#){\r\n                                DBFind(@1app_params).Where({ecosystem:#ecosystem_id#, app_id:#application_id#, name:#role_param#}).Vars(param)\r\n                                Div(h4){\r\n                                    this page only for role from parameter LinkPage(Page: @1app_params_edit, PageParams: \"id=#param_id#,back_page=#this_page#\", Body:#role_param#)\r\n                                }\r\n                            }\r\n                        }.Else{\r\n                            Div(h4){\r\n                                #role_param# not setted\r\n                            }\r\n                            Div(h4){\r\n                                LinkPage(Body:$@1ta_settings$, Page:ta_settings)\r\n                            }\r\n                        }\r\n\r\n                        If(#note_id_page_params_sale_id#>0){\r\n                            If(#sale_id#>0){}.Else{\r\n                                sale not found\r\n                            }\r\n                        }.Else{\r\n                            notification not found\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "ta_transfer_seller",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "DBFind(@1applications).Where({ecosystem:#ecosystem_id#, name:\"Trade APL\"}).Columns(\"id\").Vars(application)\r\n\r\nSetVar(this_page, ta_transfer_seller)\r\nSetVar(role_param, role_seller_apl)\r\nSetVar(row,\"row mt-sm\").(col_left,\"col-sm-4 text-right\").(col_right,\"col-sm-8 text-left\")\r\nSetVar(needed_role_id, AppParam(App:#application_id#, Name:#role_param#, Ecosystem: #ecosystem_id#))\r\n\r\nAppParam(App:#application_id#, Name:ta_currency_type, Ecosystem: #ecosystem_id#, Source:currency_type)\r\nSetVar(isStartProcessing,0)\r\nIf(#notific_id#>0){\r\n    DBFind(@1notifications).Where({ecosystem:#ecosystem_id#, id:#notific_id#}).Columns(\"page_params->sale_id,date_start_processing,notification->type,processing_info->member_id\").Vars(note)\r\n    If(#note_date_start_processing#!=\"\"){\r\n        SetVar(isStartProcessing,1)\r\n    }\r\n}\r\nSetVar(sale_id,0)\r\nIf(#note_page_params_sale_id#>0){\r\n    DBFind(sales).Where({id:#note_page_params_sale_id#}).Vars(sale)\r\n}\r\n\r\nSetTitle($@1ta_transfer_seller$)\r\nDiv(content-wrapper){\r\n    Div(row mt-sm){\r\n        Div(col-lg-10 col-lg-offset-1){\r\n            Form(panel panel-primary){\r\n                DBFind(wallets, wallets).Where({key_id_buyer:{$neq:0}, key_id_signer:{$neq:0}, rejected_at:0}).Vars(wallet).Custom(_name){\r\n                    Address(#key_id_buyer#)\r\n                }\r\n                If(And(#needed_role_id#>0,#role_id#==#needed_role_id#,#sale_id#>0)){\r\n                    Div(panel-body){\r\n                        Div(#row#){\r\n                            Div(#col_left#){\r\n                                $@1wallet$\r\n                            }\r\n                            Div(#col_right#){\r\n                                #sale_key_id_buyer#\r\n                            }\r\n                        }\r\n                        Div(#row#){\r\n                            Div(#col_left#){\r\n                                $@1amount$\r\n                            }\r\n                            Div(#col_right#){\r\n                                #sale_amount#\r\n                            }\r\n                        }\r\n                        Div(#row#){\r\n                            Div(#col_left#){\r\n                                $@1currency_type$\r\n                            }\r\n                            Div(#col_right#){\r\n                                AppParam(App:#application_id#, Name:ta_currency_type, Ecosystem: #ecosystem_id#, Index: #sale_currency_type#)\r\n                            }\r\n                        }\r\n                        Div(#row#){\r\n                            Div(#col_left#){\r\n                                $@1amount_apl$\r\n                            }\r\n                            Div(#col_right#){\r\n                                Money(#sale_amount_apl#)\r\n                            }\r\n                        }\r\n                        Div(#row# text-muted){\r\n                            Div(#col_left#){\r\n                                $@1investor_funds_transfer_date$\r\n                            }\r\n                            Div(#col_right#){\r\n                                DateTime(#sale_buyer_transferred_at#, Format: YYYY-MM-DD HH:MI:SS)\r\n                            }\r\n                        }\r\n                        Div(#row# text-muted){\r\n                            Div(#col_left#){\r\n                                $@1created_at$\r\n                            }\r\n                            Div(#col_right#){\r\n                                DateTime(#sale_created_at#, Format: YYYY-MM-DD HH:MI:SS)\r\n                            }\r\n                        }\r\n                        Div(#row# text-muted){\r\n                            Div(#col_left#){\r\n                                $@1created_by$\r\n                            }\r\n                            Div(#col_right#){\r\n                                Address(#sale_key_id_sale_apl_admin#)\r\n                            }\r\n                        }\r\n                        Div(#row# text-muted){\r\n                            Div(#col_left#){\r\n                                $@1checked_by$\r\n                            }\r\n                            Div(#col_right#){\r\n                                Address(#sale_key_id_sale_apl_manager#)\r\n                            }\r\n                        }\r\n                    }\r\n                    Div(panel-footer){\r\n                        If(And(#note_processing_info_member_id#==#key_id#,#isStartProcessing#==1)){\r\n                            Button(Body: $@1reject$, Class: btn btn-danger, Page: ta_reject, PageParams: \"RoleParam=#role_param#,notific_id=#notific_id#,back_page=#this_page#\").Popup(50,\"Rejected comment\")\r\n                            Button(Body: $@1accept$, Class: btn btn-primary pull-right, Page: default_page, Contract: TaTransferSeller, Params: \"SaleId=#sale_id#,NotificId=#notific_id#\")\r\n                        }.ElseIf(#isStartProcessing#==1){\r\n                            Div(text-muted text-center){\r\n                                process begin another seller\r\n                            }\r\n                        }.ElseIf(#isStartProcessing#==0){\r\n                            Div(text-center){\r\n                                Button(Body: $@1processing$, Class: btn btn-primary, Page: #this_page#, PageParams: \"notific_id=#notific_id#\", Contract: @1NotificationsProcess, Params: \"notific_id=#notific_id#\")\r\n                            }\r\n                        }\r\n                    }\r\n                }.Else{\r\n                    Div(panel-body){\r\n                        If(#needed_role_id#>0){\r\n                            If(#needed_role_id#!=#role_id#){\r\n                                DBFind(@1app_params).Where({ecosystem:#ecosystem_id#, app_id:#application_id#, name:#role_param#}).Vars(param)\r\n                                Div(h4){\r\n                                    this page only for role from parameter LinkPage(Page: @1app_params_edit, PageParams: \"id=#param_id#,back_page=#this_page#\", Body:#role_param#)\r\n                                }\r\n                            }\r\n                        }.Else{\r\n                            Div(h4){\r\n                                #role_param# not setted\r\n                            }\r\n                            Div(h4){\r\n                                LinkPage(Body:$@1ta_settings$, Page:ta_settings)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "ta_transfer_view",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "If(GetVar(Id)){\r\n    DBFind(sales).Where({id:#Id#}).Vars(b)\r\n}\r\n\r\nIf(#b_id#>0){\r\n    If(GetVar(left_col)){}.Else{SetVar(left_col,\"col-md-3\")}\r\n    If(GetVar(right_col)){}.Else{SetVar(right_col,\"col-md-9\")}\r\n    Div(row){\r\n        Div(#left_col# text-right){\r\n            Strong(ID)\r\n        }\r\n        Div(#right_col# text-left){\r\n            #b_id#\r\n        }\r\n    }\r\n    Div(row mt){\r\n        Div(col-md-12){\r\n            Button(Body: LangRes(@1back), Class: btn btn-default, Page: @1ta_transfer_admin)\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "ta_wallets",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "DBFind(@1applications).Where({ecosystem:#ecosystem_id#, name:\"Trade APL\"}).Columns(\"id\").Vars(application)\r\nSetVar(this_page, @1ta_wallets)\r\nSetVar(row,\"row mt-sm\").(col_left,\"col-sm-4 mt-sm text-right\").(col_right,\"col-sm-8 text-left\")\r\nSetVar(admin_role_id, AppParam(App:#application_id#, Name:role_sale_apl_admin, Ecosystem: #ecosystem_id#))\r\nSetVar(snapswap_role_id, AppParam(App:#application_id#, Name:role_snapswap, Ecosystem: #ecosystem_id#))\r\n\r\nDiv(content-wrapper){\r\n\tSetTitle($@1ta_wallets$)\r\n\tIf(And(#snapswap_role_id#>0,#role_id#==#snapswap_role_id#)){\r\n\t\tAddToolButton(Title:$@1ta_add_public_key$, Page: @1ta_key_check, Icon: icon-wallet).Popup(Header: $@1ta_add_public_key$, Width: \"50\")\r\n\t}\r\n\r\n\tSetVar(Where, {id:{$gt:0}})\r\n\tIf(GetVar(Search)!=\"\"){\r\n\t\tSetVar(Where, {$or:[{\"key_id_buyer\":#Search#},{\"key_id_signer\":#Search#}]})\r\n\t}.Else{\r\n\t\tSetVar(Search,)\r\n\t}\r\n\t\r\n    Form(panel panel-primary){\r\n        Div(panel-body){\r\n            Div(row){\r\n\t\t\t\tDiv(col-md-12){\r\n\t\t\t\t\tForm(input-group){\r\n\t\t\t\t\t\tDiv(input-group-addon){\r\n\t\t\t\t\t\t\tLangRes(@1key_id)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tInput(Name: Search, Value: #Search#)\r\n\t\t\t\t\t\tDiv(input-group-btn){\r\n\t\t\t\t\t\t\tIf(GetVar(Search)!=\"\"){\r\n\t\t\t\t\t\t\t\tButton(Class: btn btn-default fa fa-close, Page: #this_page#)\r\n\t\t\t\t\t\t\t}\r\n                            Button(Class: btn btn-default fa fa-search, Page: #this_page#, PageParams: \"Search=Val(Search),type=1\")\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n            }\r\n\r\n\t\t\tDBFind(@1wallets, wallets).Where(#Where#).Order({id:-1}).Count(sales_count).Custom(_rat){\r\n\t\t\t\tIf(#rejected_at#>0){\r\n\t\t\t\t\tDateTime(#rejected_at#, Format: YYYY-MM-DD HH:MI:SS)\r\n\t\t\t\t}\r\n\t\t\t}.Custom(_sat){\r\n\t\t\t\tIf(#signed_at#>0){\r\n\t\t\t\t\tDateTime(#signed_at#, Format: YYYY-MM-DD HH:MI:SS)\r\n\t\t\t\t}\r\n\t\t\t}.Custom(_cat){\r\n\t\t\t\tIf(#created_at#>0){\r\n\t\t\t\t\tDateTime(#created_at#, Format: YYYY-MM-DD HH:MI:SS)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n            Div(row){\r\n                Div(col-md-12){\r\n\t\t\t\t\tIf(#sales_count#>0){\r\n\t\t\t\t\t\tDiv(table-responsive){\r\n\t\t\t\t\t\t\tTable(wallets,\"$@1id$=id,$@1key_id_buyer$=key_id_buyer,$@1key_id_signer$=key_id_signer,$@1rejected_at$=_rat,$@1signed_at$=_sat,$@1created_at$=_cat\")\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\tDiv(h3 text-center){\r\n\t\t\t\t\t\t\t$@1wallets$ $@1not_founded$\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "TaAsblAction",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract TaAsblAction {\r\n    data {\r\n        Action string\r\n        WalletId int\r\n        NotificId int\r\n    }\r\n    conditions{\r\n        var basicAppId int\r\n        basicAppId = Int(DBFind(\"@1applications\").Where({ecosystem:1, name:\"Basic\"}).One(\"id\"))\r\n        if basicAppId == 0{\r\n            warning LangRes(\"@1app_not_found\", \"en\")\r\n        }\r\n        $roleConsensus = Int(AppParam(basicAppId, \"role_apla_consensus_asbl\", 1))\r\n        if $roleConsensus == 0{\r\n            warning Sprintf(LangRes(\"@1role_not_set_application_parameter\", \"en\"), \"role_apla_consensus_asbl\")\r\n        }\r\n        if !RoleAccess($roleConsensus){\r\n            warning \"this action allowed only for role id #\" + $roleConsensus\r\n        }\r\n        $wallet = DBFind(\"@1wallets\").Where({id:$WalletId, rejected_at:0}).Row()\r\n        if !$wallet{\r\n            warning \"Buyer wallet not found\"\r\n        }\r\n        if Int($wallet[\"signed_at\"]) == 0{\r\n            warning \"Buyer wallet not signed\"\r\n        }\r\n        if $wallet[\"key_id_signer\"] > 0{\r\n            if $wallet[\"key_id_signer\"] != $key_id{\r\n                warning \"This wallet was signed by asbl early\"\r\n            }\r\n        }\r\n    }\r\n\r\n    action {\r\n        if $Action == \"accept\"{\r\n            DBUpdate(\"@1wallets\", Int($wallet[\"id\"]), {key_id_signer:$key_id})\r\n            // buyer notification\r\n            var params map\r\n            params[\"wallet_id\"] = $wallet[\"id\"]\r\n            @1NotificationsSend(\"member_id,sender,text_header,page_name,params_map,closure_type\", Int($wallet[\"key_id_buyer\"]), 1, \"Your wallet approved\", \"ta_buyer_congratulation\", params, 1)\r\n\r\n        }elif $Action == \"reject\"{\r\n            DBUpdate(\"@1wallets\", Int($wallet[\"id\"]), {rejected_at:$time})\r\n        }\r\n        @1NotificationsClose(\"notific_id\", $NotificId)\r\n    }\r\n}\r\n",
            "Type": "contracts"
        },
        {
            "Name": "TaBuyerAction",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract TaBuyerAction {\r\n    data {\r\n        Action string\r\n    }\r\n    conditions{\r\n        var basicAppId int\r\n        basicAppId = Int(DBFind(\"@1applications\").Where({ecosystem:1, name:\"Basic\"}).One(\"id\"))\r\n        if basicAppId == 0{\r\n            warning LangRes(\"@1app_not_found\", \"en\")\r\n        }\r\n        $roleConsensus = Int(AppParam(basicAppId, \"role_apla_consensus_asbl\", 1))\r\n        if $roleConsensus == 0{\r\n            warning Sprintf(LangRes(\"@1role_not_set_application_parameter\", \"en\"), \"role_apla_consensus_asbl\")\r\n        }\r\n        $wallet = DBFind(\"wallets\").Where({key_id_buyer:$key_id, rejected_at:0}).Row()\r\n        if !$wallet{\r\n            warning \"Buyer wallet not found\"\r\n        }\r\n    }\r\n\r\n    action {\r\n        if $Action == \"accept\"{\r\n            DBUpdate(\"wallets\", Int($wallet[\"id\"]), {signed_at:$time})\r\n            // role Apla Consensus notification\r\n            var params map title string\r\n            title = Sprintf(\"Buyer %v signed contract\", IdToAddress($key_id))\r\n            params[\"wallet_id\"] = $wallet[\"id\"]\r\n            @1NotificationsSend(\"rid,sender,text_header,page_name,params_map,closure_type\", $roleConsensus, 1, title, \"ta_asbl_contract\", params, 1)\r\n\r\n        }elif $Action == \"reject\"{\r\n            DBUpdate(\"wallets\", Int($wallet[\"id\"]), {rejected_at:$time})\r\n        }\r\n    }\r\n}\r\n",
            "Type": "contracts"
        },
        {
            "Name": "TaKeyCheck",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract TaKeyCheck {\r\n    data {\r\n        public_key string\r\n        key_type string\r\n        current_role_id int\r\n    }\r\n\r\n    conditions {\r\n        if $public_key == \"\" {\r\n            warning LangRes(\"@1public_key_empty\", \"en\")\r\n        }\r\n\r\n        $public_key = Replace($public_key, \" \", \"\")\r\n        if HasPrefix($public_key, \"04\") {\r\n            $public_key = Substr($public_key, 2, Size($public_key) - 2)\r\n        }\r\n        $userKey = PubToID($public_key)\r\n\r\n        if $userKey == 0 {\r\n            warning LangRes(\"@1public_key_invalid\", \"en\")\r\n        }\r\n\r\n        if DBFind(\"wallets\").Where({key_id_buyer: $userKey}).One(\"id\") != nil {\r\n            warning LangRes(\"@1investor_added_already\", \"en\")\r\n        }\r\n\r\n        var appId int\r\n        appId = Int(DBFind(\"@1applications\").Where({ecosystem: $ecosystem_id, name: \"Trade APL\"}).One(\"id\"))\r\n        if appId == 0 {\r\n            warning LangRes(\"@1app_not_found\", \"en\")\r\n        }\r\n\r\n        var snapSwapRoleId int snapSwapRoleName string\r\n        snapSwapRoleId = Int(AppParam(appId, \"role_snapswap\", $ecosystem_id))\r\n        snapSwapRoleName = DBFind(\"@1roles\").Where({\"id\": snapSwapRoleId}).One(\"role_name\")\r\n\r\n        if snapSwapRoleId == 0 {\r\n            warning Sprintf(LangRes(\"@1role_not_set_application_parameter\", \"en\"), \"role_snapswap\")\r\n        }\r\n\r\n        if !RoleAccess(snapSwapRoleId) {\r\n            warning Sprintf(LangRes(\"x_role_only_action\", \"en\"), snapSwapRoleName)\r\n        }\r\n    }\r\n\r\n    action {\r\n        DBInsert(\"@1keys\", {\"id\": $userKey, \"pub\": $public_key})\r\n        var start_balance money\r\n        start_balance = Money(1000000000000000)\r\n        @1TokensSend(\"Recipient_Account,Amount\", IdToAddress($userKey), start_balance)\r\n\r\n        if $key_type == \"investor\" {\r\n            DBInsert(\"@1wallets\", {\"key_id_buyer\": $userKey, \"created_at\": $block_time})\r\n\r\n            // new user notification\r\n            var params map title page body string\r\n            title = LangRes(\"@1ta_hello_user_description\", \"en\")\r\n            body = LangRes(\"@1ta_read_contract\", \"en\")\r\n            page = \"@1ta_notification\"\r\n            @1NotificationsSend(\"member_id,sender,text_header,text_body,page_name,params_map,closure_type,current_role_id\", $userKey, 2, title, body, page, params, 1, $current_role_id)          \r\n        }\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "TaReject",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract TaReject {\r\n    data {\r\n        Comment string\r\n        RoleParam string\r\n        NotificId int\r\n    }\r\n    func getRoleId(name string) int{\r\n        var rid int\r\n        rid = Int(AppParam($appId, name, $ecosystem_id))\r\n        if rid == 0{\r\n            warning Sprintf(LangRes(\"@1role_not_set_application_parameter\", \"en\"), name)\r\n        }\r\n        return rid\r\n    }\r\n    conditions{\r\n        $appId = Int(DBFind(\"@1applications\").Where({ecosystem:$ecosystem_id, name:\"Trade APL\"}).One(\"id\"))\r\n        if $appId == 0{\r\n            warning LangRes(\"@1app_not_found\", \"en\")\r\n        }\r\n        if !($RoleParam == \"role_sale_apl_manager\" || $RoleParam == \"role_seller_apl\"){\r\n            warning \"invalid role parameter\"\r\n        }\r\n        var role noteSaleId int note map\r\n        role = getRoleId($RoleParam)\r\n        if !RoleAccess(role){\r\n            warning \"this action allowed only for role id #\" + role\r\n        }\r\n        note = DBFind(\"@1notifications\").Where({id:$NotificId}).Columns(\"page_params->sale_id,date_start_processing,notification->type\").Row()\r\n        if !note{\r\n            warning \"Notification not found\"\r\n        }\r\n        $needProcessing = note[\"date_start_processing\"] == \"\"\r\n        noteSaleId = Int(note[\"page_params.sale_id\"])\r\n        $sale = DBFind(\"sales\").Where({id:noteSaleId}).Row()\r\n        if !$sale {\r\n            warning \"Sale not found\"\r\n        }\r\n        $saleId = Int($sale[\"id\"])\r\n    }\r\n\r\n    action {\r\n        if $needProcessing {\r\n            @1NotificationsProcess(\"notific_id\", $NotificId)\r\n        }\r\n        @1NotificationsClose(\"notific_id\", $NotificId)\r\n        var sale params map title body string prevKeyId int\r\n        title = Sprintf(\"Sale %v rejected\", $saleId)\r\n        body = $Comment\r\n        params[\"sale_id\"] = $saleId\r\n\r\n        if $RoleParam == \"role_sale_apl_manager\"{\r\n            sale[\"key_id_sale_apl_manager\"] = $key_id\r\n            sale[\"manager_reject_comment\"] = $Comment\r\n            sale[\"manager_rejected_at\"] = $time\r\n            prevKeyId = Int($sale[\"key_id_sale_apl_admin\"])\r\n\r\n        }elif $RoleParam == \"role_seller_apl\"{\r\n            sale[\"key_id_seller\"] = $key_id\r\n            sale[\"seller_reject_comment\"] = $Comment\r\n            sale[\"seller_rejected_at\"] = $time\r\n            prevKeyId = Int($sale[\"key_id_sale_apl_manager\"])\r\n        }\r\n\r\n        DBUpdate(\"sales\", $saleId, sale)\r\n        @1NotificationsSend(\"member_id,sender,text_header,text_body,page_name,params_map,closure_type\", prevKeyId, 1, title, body, \"ta_notification\", params, 1)\r\n\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "TaSettings",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract TaSettings {\r\n    data {\r\n        RoleAdmin int\r\n        RoleManager int\r\n        RoleSeller int\r\n        RoleSnapswap int\r\n    }\r\n    conditions{\r\n        MainCondition()\r\n        $appId = Int(DBFind(\"@1applications\").Where({ecosystem:$ecosystem_id, name:\"Trade APL\"}).One(\"id\"))\r\n        if $appId == 0{\r\n            warning LangRes(\"@1app_not_found\", \"en\")\r\n        }\r\n    }\r\n    func updateParam(name string, id int){\r\n        if id > 0{\r\n            var params paramsNew map\r\n            params = DBFind(\"@1app_params\").Where({app_id:$appId, name:name, ecosystem:$ecosystem_id}).Row()\r\n            paramsNew[\"Id\"] = Int(params[\"id\"])\r\n            paramsNew[\"Value\"] = Str(id)\r\n            paramsNew[\"Conditions\"] = params[\"conditions\"]\r\n            CallContract(\"@1EditAppParam\", paramsNew)\r\n        }\r\n    }\r\n    action {\r\n        updateParam(\"role_sale_apl_admin\", $RoleAdmin)\r\n        updateParam(\"role_sale_apl_manager\", $RoleManager)\r\n        updateParam(\"role_seller_apl\", $RoleSeller)\r\n        updateParam(\"role_snapswap\", $RoleSnapswap)\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "TaTransferAdmin",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract TaTransferAdmin {\r\n    data {\r\n        WalletId int\r\n        Amount string\r\n        CurrencyType int\r\n        AmountApl money\r\n        TransferredDate string\r\n        TransferredTime string\r\n    }\r\n    func getRoleId(name string) int{\r\n        var rid int\r\n        rid = Int(AppParam($appId, name, $ecosystem_id))\r\n        if rid == 0{\r\n            warning Sprintf(LangRes(\"@1role_not_set_application_parameter\", \"en\"), name)\r\n        }\r\n        return rid\r\n    }\r\n    func trimZeroTime(s string) string {\r\n        if Contains(s, \"T00:00:00Z\") {\r\n            s = s Replace(s, \"T00:00:00Z\", \"\")\r\n        }\r\n        return s\r\n    }\r\n    func dateAddTime(d, t string) string {\r\n        var dt string\r\n        if Size(t) == 5 {\r\n            dt = Sprintf(\"%v %v:00\", trimZeroTime(d), t)\r\n        }\r\n        return dt\r\n    }\r\n    conditions{\r\n        if $AmountApl <= 0{\r\n            warning \"invalid amount APL\"\r\n        }\r\n        if $Amount <= 0.0{\r\n            warning \"invalid amount\"\r\n        }\r\n        $AmountApl = $AmountApl * Money(1000000000000000000)\r\n\r\n        $transferredAt = UnixDateTime(dateAddTime($TransferredDate, $TransferredTime))\r\n        if $transferredAt == 0 {\r\n            warning \"invalid transfer datetime\"\r\n        }\r\n        $appId = Int(DBFind(\"@1applications\").Where({ecosystem:$ecosystem_id, name:\"Trade APL\"}).One(\"id\"))\r\n        if $appId == 0{\r\n            warning LangRes(\"@1app_not_found\", \"en\")\r\n        }\r\n        $roleAplManager = getRoleId(\"role_sale_apl_manager\")\r\n        $currentRole = getRoleId(\"role_sale_apl_admin\")\r\n        if !RoleAccess($currentRole){\r\n            warning \"this action allowed only for role id #\" + $currentRole\r\n        }\r\n\r\n        $wallet = DBFind(\"wallets\").Where({id:$WalletId}).Row()\r\n        if !$wallet{\r\n            warning \"Buyer wallet not found\"\r\n        }\r\n        if $CurrencyType <= 0 || $CurrencyType > 3{\r\n            warning \"Invalid Currency Type\"\r\n        }\r\n    }\r\n\r\n    action {\r\n        var sale map saleId int\r\n        sale[\"key_id_buyer\"] = $wallet[\"key_id_buyer\"]\r\n        sale[\"currency_type\"] = $CurrencyType\r\n        sale[\"amount\"] = $Amount\r\n        sale[\"amount_apl\"] = $AmountApl\r\n        sale[\"key_id_sale_apl_admin\"] = $key_id\r\n        sale[\"created_at\"] = $time\r\n        sale[\"buyer_transferred_at\"] = $transferredAt\r\n\r\n        saleId = DBInsert(\"sales\", sale)\r\n\r\n        // role Apla sales manager notification\r\n        var params map title page string\r\n        title = Sprintf(\"Check sale id %v\", saleId)\r\n        page = \"ta_transfer_manager\"\r\n        params[\"sale_id\"] = saleId\r\n        @1NotificationsSend(\"rid,sender,text_header,page_name,params_map,closure_type,current_role_id\", $roleAplManager, 2, title, page, params, 1, $currentRole)\r\n\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "TaTransferManager",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract TaTransferManager {\r\n    data {\r\n        SaleId int\r\n        NotificId int\r\n    }\r\n    func getRoleId(name string) int{\r\n        var rid int\r\n        rid = Int(AppParam($appId, name, $ecosystem_id))\r\n        if rid == 0{\r\n            warning Sprintf(LangRes(\"@1role_not_set_application_parameter\", \"en\"), name)\r\n        }\r\n        return rid\r\n    }\r\n    conditions{\r\n        $appId = Int(DBFind(\"@1applications\").Where({ecosystem:$ecosystem_id, name:\"Trade APL\"}).One(\"id\"))\r\n        if $appId == 0{\r\n            warning LangRes(\"@1app_not_found\", \"en\")\r\n        }\r\n        $roleAplSeller = getRoleId(\"role_seller_apl\")\r\n        $currentRole = getRoleId(\"role_sale_apl_manager\")\r\n        if !RoleAccess($currentRole){\r\n            warning \"this action allowed only for role id #\" + $currentRole\r\n        }\r\n\r\n        $sale = DBFind(\"sales\").Where({id:$SaleId}).Row()\r\n        if !$sale{\r\n            warning \"Sale not found\"\r\n        }\r\n    }\r\n\r\n    action {\r\n        @1NotificationsClose(\"notific_id\", $NotificId)\r\n        DBUpdate(\"sales\", Int($sale[\"id\"]), {key_id_sale_apl_manager:$key_id})\r\n\r\n        // role Apla seller notification\r\n        var params map title page string\r\n        title = Sprintf(\"Transfer sale id %v\", $sale[\"id\"])\r\n        params[\"sale_id\"] = $sale[\"id\"]\r\n        page = \"ta_transfer_seller\"\r\n        @1NotificationsSend(\"rid,sender,text_header,page_name,params_map,closure_type,current_role_id\", $roleAplSeller, 2, title, page, params, 1, $currentRole)\r\n\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "TaTransferSeller",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract TaTransferSeller {\r\n    data {\r\n        SaleId int\r\n        NotificId int\r\n    }\r\n    func getRoleId(name string) int{\r\n        var rid int\r\n        rid = Int(AppParam($appId, name, $ecosystem_id))\r\n        if rid == 0{\r\n            warning Sprintf(LangRes(\"@1role_not_set_application_parameter\", \"en\"), name)\r\n        }\r\n        return rid\r\n    }\r\n    conditions{\r\n        $appId = Int(DBFind(\"@1applications\").Where({ecosystem:$ecosystem_id, name:\"Trade APL\"}).One(\"id\"))\r\n        if $appId == 0{\r\n            warning LangRes(\"@1app_not_found\", \"en\")\r\n        }\r\n        $currentRole = getRoleId(\"role_seller_apl\")\r\n        if !RoleAccess($currentRole){\r\n            warning \"this action allowed only for role id #\" + $currentRole\r\n        }\r\n\r\n        $sale = DBFind(\"sales\").Where({id:$SaleId}).Row()\r\n        if !$sale{\r\n            warning \"sale not found\"\r\n        }\r\n    }\r\n\r\n    action {\r\n        @1NotificationsClose(\"notific_id\", $NotificId)\r\n        var s transfer map\r\n        s[\"key_id_seller\"] = $key_id\r\n        s[\"seller_transferred_at\"] = $time\r\n        DBUpdate(\"sales\", Int($sale[\"id\"]), s)\r\n\r\n        @1TokensSend(\"Recipient_Account,Amount\", $sale[\"key_id_buyer\"], Money($sale[\"amount_apl\"]))\r\n    }\r\n}",
            "Type": "contracts"
        }
    ]
}