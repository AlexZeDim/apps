{
    "name": "Trade APL",
    "conditions": "ContractConditions(\"MainCondition\")",
    "data": [
        {
            "Name": "admin_menu",
            "Conditions": "ContractAccess(\"@1EditMenu\")",
            "Value": "MenuItem(Title:$@1ta_settings$, Page:ta_settings, Icon:\"icon-wrench\")",
            "Type": "menu"
        },
        {
            "Name": "default_menu",
            "Conditions": "ContractAccess(\"@1EditMenu\")",
            "Value": "SetVar(is_allowed, 0).(k_id, 0).(unreaded_wallet_id,0).(exist_wallet_id,0)\nDBFind(@1keys).Where({id:#key_id#}).Vars(k)\nDBFind(@1wallets).Where({key_id_buyer:#key_id#}).Vars(exist_wallet)\nDBFind(@1wallets).Where({key_id_buyer:#key_id#, rejected_at:0, signed_at:0}).Vars(unreaded_wallet)\n\nIf(#k_id#!=0){\n    If(#exist_wallet_id#>0){\n        If(#unreaded_wallet_id#==0){\n            SetVar(is_allowed, 1)\n        }\n    }.Else{\n        SetVar(is_allowed, 1)\n    }\n}\n\nIf(#is_allowed#==1){\n    SetVar(snapswap_role_id,0).(admin_role_id,0).(manager_role_id,0).(seller_role_id,0)\n    SetVar(snapswap_role_id, EcosysParam(Name:role_snapswap))\n    SetVar(admin_role_id, EcosysParam(Name:role_sale_apl_admin))\n    SetVar(manager_role_id, EcosysParam(Name:role_sale_apl_manager))\n    SetVar(seller_role_id, EcosysParam(Name:role_seller_apl))\n\n    MenuItem(Title:$@1profile$, Page:@1profile_view, Icon:\"icon-wallet\")\n    MenuItem(Title:$@1notifications$, Page:@1notifications_list, Icon:\"icon-flag\")\n    MenuItem(Title:$@1ecosystem_members$, Page:@1members_list, Icon:\"fa icon-people\")\n    MenuItem(Title:$@1ecosystems$, Page:@1ecosystems_list, Icon:\"fa fa-list-ul\")\n    MenuGroup(Title:$@1admin$, Icon:\"icon-arrow-right\"){\n        MenuItem(Title:$@1roles$, Page:@1roles_list, Icon:\"fa fa-list-ul\")\n        MenuItem(Title:$@1votings$, Page:@1voting_list, Icon:\"fa fa-edit\")\n        If(#ecosystem_id#==1){\n            MenuItem(Title:$@1tokens_refund$, Page:@1tokenrefund_list, Icon:\"icon-shuffle\")\n            MenuItem(Title:$@1sysparams_candidates$, Page:@1sysparams_candidates_list, Icon:\"icon-graduation\")\n        }\n    }\n\n    If(And(#admin_role_id#>0,Or(#role_id#==#admin_role_id#,#role_id#==#manager_role_id#,#role_id#==#seller_role_id#))){\n        MenuItem(Title:$@1ta_sales$, Page:@1ta_sales, Icon:\"icon-credit-card\")\n    }\n    If(And(#snapswap_role_id#>0,#role_id#==#snapswap_role_id#)){\n        MenuItem(Title:$@1ta_wallets$, Page:@1ta_wallets, Icon:\"icon-credit-card\")\n    }\n}",
            "Type": "menu"
        },
        {
            "Name": "sales",
            "Columns": "[\n    {\n        \"conditions\": \"false\",\n        \"name\": \"buyer_transferred_at\",\n        \"type\": \"number\"\n    },\n    {\n        \"conditions\": \"ContractAccess(\\\"@1TaReject\\\")\",\n        \"name\": \"seller_reject_comment\",\n        \"type\": \"text\"\n    },\n    {\n        \"conditions\": \"false\",\n        \"name\": \"amount\",\n        \"type\": \"varchar\"\n    },\n    {\n        \"conditions\": \"false\",\n        \"name\": \"currency_type\",\n        \"type\": \"number\"\n    },\n    {\n        \"conditions\": \"ContractAccess(\\\"@1TaReject\\\")\",\n        \"name\": \"manager_rejected_at\",\n        \"type\": \"number\"\n    },\n    {\n        \"conditions\": \"ContractAccess(\\\"@1TaTransferSeller\\\")\",\n        \"name\": \"seller_transferred_at\",\n        \"type\": \"number\"\n    },\n    {\n        \"conditions\": \"false\",\n        \"name\": \"amount_apl\",\n        \"type\": \"money\"\n    },\n    {\n        \"conditions\": \"ContractAccess(\\\"@1TaReject\\\",\\\"@1TaTransferSeller\\\")\",\n        \"name\": \"key_id_seller\",\n        \"type\": \"number\"\n    },\n    {\n        \"conditions\": \"ContractAccess(\\\"@1TaReject\\\")\",\n        \"name\": \"seller_rejected_at\",\n        \"type\": \"number\"\n    },\n    {\n        \"conditions\": \"false\",\n        \"name\": \"key_id_sale_apl_admin\",\n        \"type\": \"number\"\n    },\n    {\n        \"conditions\": \"ContractAccess(\\\"@1TaReject\\\")\",\n        \"name\": \"manager_reject_comment\",\n        \"type\": \"text\"\n    },\n    {\n        \"conditions\": \"ContractAccess(\\\"@1TaReject\\\",\\\"@1TaTransferManager\\\")\",\n        \"name\": \"key_id_sale_apl_manager\",\n        \"type\": \"number\"\n    },\n    {\n        \"conditions\": \"false\",\n        \"name\": \"created_at\",\n        \"type\": \"number\"\n    },\n    {\n        \"conditions\": \"false\",\n        \"name\": \"key_id_buyer\",\n        \"type\": \"number\"\n    },\n    {\n        \"conditions\": \"ContractAccess(\\\"@1TaReject\\\",\\\"@1TaTransferManager\\\",\\\"@1TaTransferAdmin\\\",\\\"@1TaTransferSeller\\\")\",\n        \"name\": \"status\",\n        \"type\": \"number\"\n    }\n]",
            "Permissions": "{\"insert\": \"ContractAccess(\\\"@1TaTransferAdmin\\\")\", \"update\": \"ContractAccess(\\\"@1TaReject\\\",\\\"@1TaTransferSeller\\\",\\\"@1TaTransferManager\\\")\", \"new_column\": \"ContractConditions(\\\"MainCondition\\\")\"}",
            "Type": "tables"
        },
        {
            "Name": "wallets",
            "Columns": "[{\"conditions\":\"ContractAccess(\\\"@1TaBuyerAction\\\",\\\"@1TaAsblAction\\\")\",\"name\":\"rejected_at\",\"type\":\"number\"},{\"conditions\":\"ContractAccess(\\\"@1TaBuyerAction\\\")\",\"name\":\"key_id_buyer\",\"type\":\"number\"},{\"conditions\":\"ContractAccess(\\\"@1TaAsblAction\\\")\",\"name\":\"key_id_signer\",\"type\":\"number\"},{\"conditions\":\"false\",\"name\":\"btc\",\"type\":\"money\"},{\"conditions\":\"false\",\"name\":\"eth\",\"type\":\"money\"},{\"conditions\":\"ContractAccess(\\\"@1TaBuyerAction\\\")\",\"name\":\"signed_at\",\"type\":\"number\"},{\"conditions\":\"false\",\"name\":\"created_at\",\"type\":\"number\"}\n]",
            "Permissions": "{\"insert\": \"ContractAccess(\\\"@1TaKeyCheck\\\")\", \"update\": \"ContractAccess(\\\"@1TaBuyerAction\\\",\\\"@1TaAsblAction\\\")\", \"new_column\": \"ContractConditions(\\\"MainCondition\\\")\"}",
            "Type": "tables"
        },
        {
            "Name": "ta_currency_type",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "@1btc,@1eth,@1euro",
            "Type": "app_params"
        },
        {
            "Name": "ta_statuses",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "@1waiting_manager_approved,@1waiting_seller_transfer,@1finished,@1rejected",
            "Type": "app_params"
        },
        {
            "Name": "ta_statuses_classes",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "text-muted,text-info,text-success,text-warning",
            "Type": "app_params"
        },
        {
            "Name": "default_page",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "DBFind(wallets).Where({key_id_buyer:#key_id#, rejected_at:0, signed_at:0}).Vars(unconfirmed_wallet)\nSetVar(founder,EcosysParam(founder_account))\nDiv(content-wrapper){\n    If(#ecosystem_id#==0){\n        SetTitle(\"\")\n    }.ElseIf(#unconfirmed_wallet_id#>0){\n        Div(panel panel-primary){\n            Div(list-group-item){\n                Div(){\n                    $@1ta_hello_user_description$\n                }\n                Div(){\n                    $@1read_please$ LinkPage(Body: $@1ta_buyer_contract$, Page: ta_buyer_contract)\n                }\n            }\n        }\n    }.ElseIf(#founder#==#key_id#){\n        Div(panel panel-primary){\n            Div(list-group-item text-center){\n                P(Class: h3 m0 text-bold, Body: $@1default_main$)\n            }\n            Div(list-group-item){\n                Span(Class: h3, Body: $@1default1$)\n                Span(Class: h3 text-primary, Body: \" https://github.com/GenesisKernel/apps \")\n                Span(Class: h3, Body: $@1default2$)\n                Span(Class: h3 text-primary, Body: \" https://genesiskernel.readthedocs.io\")\n            }\n            Div(panel-footer text-right clearfix){\n                Div(pull-left){\n                    Button(Body: $@1ecosystem_parameters$, Class: btn btn-default, Page: @1params_list)\n                }.Style(margin-right: 20px;)\n                Div(pull-left){\n                    Button(Body: $@1dashboard$, Class: btn btn-default, Page: @1admin_index)\n                }\n                Button(Body: $@1import$, Class: btn btn-primary, Page: @1import_upload)\n            }\n        }\n    }\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "ta_asbl_contract",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "DBFind(@1applications).Where({ecosystem:#ecosystem_id#, name:\"Trade APL\"}).Columns(\"id\").Vars(application)\nSetVar(isStartProcessing,0)\nIf(#notific_id#>0){\n    DBFind(@1notifications).Where({ecosystem:#ecosystem_id#, id:#notific_id#}).Columns(\"page_params->wallet_id,date_start_processing,notification->type,processing_info->member_id\").Vars(note)\n    If(#note_date_start_processing#!=\"\"){\n        SetVar(isStartProcessing,1)\n    }\n}\n\nSetVar(this_page, ta_asbl_contract)\nSetTitle(\"Страница подписи представителем роли Apla Consensus\")\nDiv(content-wrapper){\n    Div(row mt-sm){\n        Div(col-lg-10 col-lg-offset-1){\n            Form(panel panel-primary){\n                DBFind(wallets).Where({id:#note_page_params_wallet_id#, rejected_at:0}).Vars(wallet)\n                If(#wallet_id#>0){\n                    Div(panel-body){\n                        Div(){\n                            покупатель: Address(#wallet_key_id_buyer#)\n                        }\n                        Div(){\n                            дата подписания договора покупателем: DateTime(#wallet_signed_at#, \"YYYY-MM-DD HH:MI:SS\")\n                        }\n                    }\n                    Div(panel-footer){\n                        If(And(#note_processing_info_member_id#==#key_id#,#isStartProcessing#==1)){\n                            Button(Body: $@1reject$, Class: btn btn-default, Page: default_page, Contract: TaAsblAction, Params: \"Action=reject,WalletId=#note_page_params_wallet_id#,NotificId=#notific_id#\")\n                            Button(Body: $@1accept$, Class: btn btn-primary pull-right, Page: default_page, Contract: TaAsblAction, Params: \"Action=accept,WalletId=#note_page_params_wallet_id#,NotificId=#notific_id#\")\n                        }.ElseIf(#isStartProcessing#==1){\n                            Div(text-muted text-center){\n                                process begin another manager\n                            }\n                        }.ElseIf(#isStartProcessing#==0){\n                            Div(text-center){\n                                Button(Body: $@1processing$, Class: btn btn-primary, Page: #this_page#, PageParams: \"notific_id=#notific_id#\", Contract: @1NotificationsProcess, Params: \"notific_id=#notific_id#\")\n                            }\n                        }\n\n                    }\n                }.Else{\n                    Div(panel-body){\n                        wallet не найден\n                    }\n                }\n            }\n        }\n    }\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "ta_buyer_congratulation",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "DBFind(@1applications).Where({ecosystem:#ecosystem_id#, name:\"Trade APL\"}).Columns(\"id\").Vars(application)\nDBFind(@1notifications).Where({ecosystem:#ecosystem_id#, id:#notific_id#}).Columns(\"page_params->wallet_id\").Vars(note)\n\n\nSetVar(this_page, ta_buyer_congratulation)\nDiv(content-wrapper){\n    Div(row mt-sm){\n        Div(col-lg-10 col-lg-offset-1){\n            Form(panel panel-primary){\n                DBFind(wallets).Where({key_id_signer:{$neq:0}, rejected_at:0}).Vars(wallet)\n                If(#wallet_id#>0){\n                    Div(panel-body){\n                        текст, мол, спасибо, теперь вы можете перевести сумму любым способом, указанным в договоре\n                    }\n                    Div(panel-footer text-center){\n                        Button(Body: $@1readed$, Class: btn btn-primary, Page: default_page, Contract: NotificationsClose, Params: \"notific_id=#notific_id#\")\n                    }\n                }.Else{\n                    Div(panel-body){\n                        wallet не найден\n                    }\n                }\n            }\n        }\n    }\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "ta_buyer_contract",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "DBFind(@1applications).Where({ecosystem:#ecosystem_id#, name:\"Trade APL\"}).Columns(\"id\").Vars(application)\nDBFind(wallets).Where({key_id_buyer:#key_id#, key_id_signer:0, rejected_at:0}).Vars(unconfirmed_wallet)\n\nSetTitle(\"Страница с договором на которую покупатель переходит при заходе\")\nDiv(content-wrapper){\n    Div(row mt-sm){\n        Div(col-lg-10 col-lg-offset-1){\n            Form(panel panel-primary){\n                If(#unconfirmed_wallet_id#>0){\n                    Div(panel-body){\n                        текст договора будет чуть позже the text of the Treaty will be a little later текст договора будет чуть позже the text of the Treaty will be a little laterтекст договора будет чуть позже the text of the Treaty will be a little laterтекст договора будет чуть позже the text of the Treaty will be a little laterтекст договора будет чуть позже the text of the Treaty will be a little laterтекст договора будет чуть позже the text of the Treaty will be a little laterтекст договора будет чуть позже the text of the Treaty will be a little later\n                    }\n                    Div(panel-footer){\n                        Button(Body: $@1reject$, Class: btn btn-danger, Page: default_page, Contract: TaBuyerAction, Params: \"Action=reject\")\n                        Button(Body: $@1accept$, Class: btn btn-primary pull-right, Page: default_page, Contract: TaBuyerAction, Params: \"Action=accept\")\n                    }\n                }.Else{\n                    Div(panel-body){\n                        вы уже заключили договор с Apla\n                    }\n                }\n            }\n        }\n    }\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "ta_key_check",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "Form(){\n    Div(form-group){\n        Div(row){\n            Div(col-md-10 mt-sm col-md-offset-2){\n                Span(Body: LangRes(@1ta_public_key_input_des), Class: text-muted)\n            }\n        }\n        Div(row){\n            Div(col-md-2 mt-sm text-right){\n                Label(For: public_key){\n                    LangRes(@1pub_key)\n                }\n            }\n            Div(col-md-10 mt-sm){\n                Input(Name: public_key, Type: textarea)\n            }\n        }\n        Div(row){\n            Div(col-md-2 mt-lg text-right){\n                Label(For: token_buyer){\n                    LangRes(@1public_key_type)\n                }\n            }\n            Div(col-md-10 mt-sm){\n                Data(key_radio, \"value,description\"){\n                    investor,$@1ta_investor_key$\n                    user,$@1ta_user_key$\n                }\n                RadioGroup(Name: key_type, Source: key_radio, NameColumn: description, ValueColumn: value)\n            }\n        }\n    }\n    Div(row mt){\n        Div(col-md-12){\n            Input(Name: current_role_id, Type: hidden, Value: #role_id#)\n            Button(Body: LangRes(@1back), Class: btn btn-default, Page: @1ta_wallets)\n            Button(Body: LangRes(@1send), Class: btn btn-primary pull-right, Page: @1ta_wallets, Contract: @1TaKeyCheck).Alert(Text: \"$@1want_add_investor$\", ConfirmButton: \"$@1yes$\", CancelButton: \"$@1no$\", Icon: icon-question)\n        }\n    }\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "ta_notification",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "DBFind(@1applications).Where({ecosystem:#ecosystem_id#, name:\"Trade APL\"}).Columns(\"id\").Vars(application)\nIf(#notific_id#>0){\n    DBFind(@1notifications).Where({ecosystem:#ecosystem_id#, id:#notific_id#}).Columns(\"notification->header,notification->body,id\").Vars(note)\n}\n\nDiv(content-wrapper){\n    Div(row mt-sm){\n        Div(col-lg-10 col-lg-offset-1){\n            Form(panel panel-primary){\n                DBFind(wallets).Where({key_id_signer:{$neq:0}, rejected_at:0}).Vars(wallet)\n                If(#note_id#>0){\n                    Div(panel-body){\n                        Div(){\n                            #note_notification_header#\n                        }\n                        Div(){\n                            #note_notification_body#\n                        }\n                    }\n                    Div(panel-footer text-center){\n                        Button(Body: $@1readed$, Class: btn btn-primary, Page: @1default_page, Contract: NotificationsClose, Params: \"notific_id=#notific_id#\")\n                    }\n                }.Else{\n                    Div(panel-body){\n                        Оповещение не найдено\n                    }\n                }\n            }\n        }\n    }\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "ta_reject",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "SetVar(needed_role_id,0)\nIf(GetVar(RoleParam)!=\"\"){\n    SetVar(needed_role_id, EcosysParam(Name:#RoleParam#))\n}\nIf(GetVar(notific_id)!=\"\"){\n    DBFind(@1notifications).Where({ecosystem:#ecosystem_id#, id:#notific_id#}).Columns(\"page_params->sale_id\").Vars(note)\n}\nSetVar(sale_id,0)\nIf(#note_page_params_sale_id#>0){\n    DBFind(sales).Where({id:#note_page_params_sale_id#}).Vars(sale)\n}\n\nDiv(content-wrapper){\n    Form(){\n        If(And(#needed_role_id#>0,#role_id#==#needed_role_id#,#sale_id#>0)){\n            Div(mb){\n                Input(Name:Comment, Type:textarea)\n            }\n            Div(){\n                Button(Body: $@1back$, Class: btn btn-default, Page: #back_page#, PageParams: \"notific_id=#notific_id#\")\n                Button(Body: $@1send$, Class: btn btn-primary pull-right, Page: default_page, Contract: TaReject, Params: \"RoleParam=#RoleParam#,NotificId=#notific_id#\")\n            }\n        }.Else{\n            Div(text-center text-muted){\n                If(And(#needed_role_id#>0,#role_id#!=#needed_role_id#)){\n                    Div(){\n                        for added comment you must be logined as role id #needed_role_id#\n                    }\n                }\n                If(#sale_id#==0){\n                    Div(){\n                        sale not found\n                    }\n                }\n            }\n            Div(){\n                Button(Body: $@1back$, Class: btn btn-default, Page: #back_page#, PageParams: \"notific_id=#notific_id#\")\n            }\n        }\n    }\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "ta_sales",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "DBFind(@1applications).Where({ecosystem:#ecosystem_id#, name:\"Trade APL\"}).Columns(\"id\").Vars(application)\nSetVar(this_page, @1ta_sales)\nSetVar(admin_role_id, EcosysParam(Name:role_sale_apl_admin))\nSetVar(manager_role_id, EcosysParam(Name:role_sale_apl_manager))\nSetVar(seller_role_id, EcosysParam(Name:role_seller_apl))\n\nSetVar(STATUS_MANAGER,1).(STATUS_SELLER,2)\n\nDiv(content-wrapper){\n    SetTitle($@1ta_sales$)\n    If(And(#admin_role_id#>0,#role_id#==#admin_role_id#)){\n        AddToolButton(Title:$@1ta_add_transfer$, Page: @1ta_transfer_admin, Icon: icon-wallet).Popup(Header: $@1ta_add_transfer$, Width: \"50\")\n    }\n\n    If(GetVar(Search)!=\"\"){\n        SetVar(Where, {$or:[{\"key_id_buyer\":#Search#},{\"key_id_sale_apl_manager\":#Search#}, {\"key_id_sale_apl_admin\":#Search#}, {\"key_id_seller\":#Search#}]})\n    }.Else{\n        SetVar(Where, {id:{$gt:0}}).(Search,)\n    }\n\n    Form(panel panel-primary){\n        Div(panel-body){\n            Div(row){\n                Div(col-md-12){\n                    Form(input-group){\n                        Div(input-group-addon){\n                            LangRes(@1key_id)\n                        }\n                        Input(Name: Search, Value: #Search#)\n                        Div(input-group-btn){\n                            If(GetVar(Search)!=\"\"){\n                                Button(Class: btn btn-default fa fa-close, Page: #this_page#)\n                            }\n                            Button(Class: btn btn-default fa fa-search, Page: #this_page#, PageParams: \"Search=Val(Search),type=1\")\n                        }\n                    }\n                }\n            }\n\n            DBFind(sales, sales).Where(#Where#).Order({id:-1}).Count(sales_count).Custom(_btat){\n                Span(Class: text-muted, Body: DateTime(#buyer_transferred_at#, Format: YYYY-MM-DD HH:MI:SS))\n            }.Custom(_cat){\n                Span(Class: text-muted, Body: DateTime(#created_at#, Format: YYYY-MM-DD HH:MI:SS))\n            }.Custom(_amount){\n                Div(text-right){\n                    Span(Class: text-bold, Body: #amount#).Style(margin-right:5px;)\n                    Span(Class: text-bold, Body: AppParam(App:#application_id#, Name:ta_currency_type, Ecosystem: #ecosystem_id#, Index: #currency_type#))\n                }\n                Div(text-right){\n                    Span(Class: text-bold, Body: Money(#amount_apl#)).Style(margin-right:5px;)\n                    Span(Class: text-bold, Body: APL)\n                }\n            }.Custom(_info){\n                Button(Class: btn btn-link, Page: @1ta_transfer_view, PageParams: \"Id=#id#\"){\n                    Span(Class: text-bold, Body: LangRes(@1information))\n                }.Popup(Header: $@1information$, Width: 35)\n            }.Custom(_status){\n                SetVar(status_class, AppParam(App:#application_id#, Name:ta_statuses_classes, Index:#status#, Ecosystem: #ecosystem_id#))\n                Div(#status_class#){\n                    AppParam(App:#application_id#, Name:ta_statuses, Index:#status#, Ecosystem: #ecosystem_id#)\n                }\n            }.Custom(_action){\n                If(And(#status#==#STATUS_MANAGER#,#manager_role_id#>0,#role_id#==#manager_role_id#)){\n                    Button(Class: fa fa-play btn btn-info, Page: @1ta_transfer_manager, PageParams: \"SaleId=#id#\")\n                }\n                If(And(#status#==#STATUS_SELLER#,#seller_role_id#>0,#role_id#==#seller_role_id#)){\n                    Button(Class: fa fa-play btn btn-info, Page: @1ta_transfer_seller, PageParams: \"SaleId=#id#\")\n                }\n            }\n\n            Div(row){\n                Div(col-md-12){\n                    If(#sales_count#>0){\n                        Div(table-responsive){\n                            Table(sales,\"$@1id$=id,$@1information$=_info,$@1key_id_buyer$=key_id_buyer,$@1investor_funds_transfer_date$=_btat,$@1created_at$=_cat,$@1status$=_status,=_action,=_amount\")\n                        }\n                    }.Else{\n                        Div(h3 text-muted text-center){\n                            $@1sales$ $@1not_founded$\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "ta_settings",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "SetVar(this_page, ta_settings).(role_admin,0).(role_manager,0).(role_seller,0)\nSetVar(role_admin, EcosysParam(Name:role_sale_apl_admin))\nSetVar(role_manager, EcosysParam(Name:role_sale_apl_manager))\nSetVar(role_seller, EcosysParam(Name:role_seller_apl))\nSetVar(role_snapswap, EcosysParam(Name:role_snapswap))\n\nDBFind(@1roles,src_roles).Where({ecosystem:#ecosystem_id#, deleted:0}).Columns(\"role_name,id\").Limit(100)\n\nSetVar(row,\"row mt-sm\").(col_left,\"col-sm-4 text-right mt-sm\").(col_right,\"col-sm-8 text-left\")\nSetTitle($@1ta_settings$)\nDiv(content-wrapper){\n    Div(row mt-sm){\n        Div(col-lg-8 col-lg-offset-2){\n            Form(panel panel-primary){\n                Div(panel-body){\n                    Div(#row#){\n                        Div(col-sm-12 text-center text-muted){\n                            $@1ta_settings_description$\n                        }\n                    }\n                    Div(#row#){\n                        Div(#col_left#){\n                            $@1role_sale_apl_admin$\n                        }\n                        Div(#col_right#){\n                            Select(Name:RoleAdmin, Source:src_roles, NameColumn: role_name, ValueColumn: id, Value:#role_admin#)\n                        }\n                    }\n                    Div(#row#){\n                        Div(#col_left#){\n                            $@1role_sale_apl_manager$\n                        }\n                        Div(#col_right#){\n                            Select(Name:RoleManager, Source:src_roles, NameColumn: role_name, ValueColumn: id, Value:#role_manager#)\n                        }\n                    }\n                    Div(#row#){\n                        Div(#col_left#){\n                            $@1role_seller_apl$\n                        }\n                        Div(#col_right#){\n                            Select(Name:RoleSeller, Source:src_roles, NameColumn: role_name, ValueColumn: id, Value:#role_seller#)\n                        }\n                    }\n                    Div(#row#){\n                        Div(#col_left#){\n                            $@1role_snapswap$\n                        }\n                        Div(#col_right#){\n                            Select(Name:RoleSnapswap, Source:src_roles, NameColumn: role_name, ValueColumn: id, Value:#role_snapswap#)\n                        }\n                    }\n                }\n                Div(panel-footer text-center){\n                    Button(Body: $@1apply_settings$, Class: btn btn-primary, Page: #this_page#, Contract: TaSettings)\n                }\n            }\n        }\n    }\n}",
            "Menu": "admin_menu",
            "Type": "pages"
        },
        {
            "Name": "ta_transfer_admin",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "DBFind(@1applications).Where({ecosystem:#ecosystem_id#, name:\"Trade APL\"}).Columns(\"id\").Vars(application)\n\nSetVar(this_page, @1ta_transfer_admin).(back_page,@1ta_sales)\nSetVar(row,\"row mt-sm\").(col_left,\"col-sm-4 mt-sm text-right\").(col_right,\"col-sm-8 text-left\")\n\nAppParam(App:#application_id#, Name:ta_currency_type, Ecosystem: #ecosystem_id#, Source:currency_type)\n\nDBFind(wallets, wallets).Where({key_id_buyer:{$neq:0}, key_id_signer:{$neq:0}, rejected_at:0}).Count(wallets_count).Custom(_name){\n    Address(#key_id_buyer#)\n}\nForm(){\n    Div(#row#){\n        Div(#col_left#){\n            $@1wallet$\n        }\n        If(#wallets_count#==0){\n            Div(#col_right# mt-sm){\n                Span($@1wallets$ $@1not_founded$, text-warning)\n            }\n        }.Else{\n            Div(#col_right#){\n                Select(Name:WalletId, Source:wallets, NameColumn: _name, ValueColumn: id)\n            }\n        }\n    }\n    Div(#row#){\n        Div(#col_left#){\n            $@1investment_amount$\n        }\n        Div(#col_right#){\n            Div(row){\n                Div(col-sm-8){\n                    Input(Name:Amount, Type:number)\n                }\n                Div(col-sm-4){\n                    Select(Name:CurrencyType, Source:currency_type, NameColumn: name, ValueColumn: id)\n                }\n            }\n        }\n    }\n    Div(#row#){\n        Div(#col_left#){\n            $@1amount_apl$\n        }\n        Div(#col_right#){\n            Input(Name:AmountApl, Type:number)\n        }\n    }\n    Div(#row#){\n        Div(#col_left#){\n            $@1investor_funds_transfer_date$\n        }\n        Div(#col_right#){\n            Div(row){\n                Div(col-sm-6){\n                    Input(Name:TransferredDate, Type:date)\n                }\n                Div(col-sm-6){\n                    Input(Name:TransferredTime, Type:time)\n                }\n            }\n        }\n    }\n    Div(row mt){\n        Div(col-md-12 text-right){\n            Button(Body: LangRes(@1back), Class: btn btn-default pull-left, Page: #back_page#)\n            If(#wallets_count#==0){\n                Button(Body: $@1send_to_check$, Class: btn btn-primary disabled, Page: #this_page#)\n            }.Else{\n                Button(Body: $@1send_to_check$, Class: btn btn-primary, Page: #back_page#, Contract: TaTransferAdmin).Alert(Text: \"$@1want_add_investor$\", ConfirmButton: \"$@1yes$\", CancelButton: \"$@1no$\", Icon: question)\n            }\n        }\n    }\n}\n",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "ta_transfer_manager",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "DBFind(@1applications).Where({ecosystem:#ecosystem_id#, name:\"Trade APL\"}).Columns(\"id\").Vars(application)\n\nSetVar(this_page, ta_transfer_manager)\nSetVar(role_param, role_sale_apl_manager)\nSetVar(row,\"row mt-sm\").(col_left,\"col-sm-4 text-right\").(col_right,\"col-sm-8 text-left\")\nSetVar(needed_role_id, EcosysParam(Name:#role_param#))\n\nSetVar(isStartProcessing,0)\nIf(#notific_id#>0){\n    DBFind(@1notifications).Where({ecosystem:#ecosystem_id#, id:#notific_id#}).Columns(\"page_params->sale_id,date_start_processing,notification->type,processing_info->member_id\").Vars(note)\n    If(#note_date_start_processing#!=\"\"){\n        SetVar(isStartProcessing,1)\n    }\n}.ElseIf(GetVar(SaleId)!=\"\"){\n    DBFind(@1notifications).Where({ecosystem:#ecosystem_id#, \"page_params->sale_id\":#SaleId#, closed:0}).Columns(\"page_params->sale_id,date_start_processing,notification->type,processing_info->member_id,id\").Vars(note)\n    SetVar(notific_id,#note_id#)\n    If(#note_date_start_processing#!=\"\"){\n        SetVar(isStartProcessing,1)\n    }\n}\nSetVar(sale_id,0)\nIf(#note_page_params_sale_id#>0){\n    DBFind(sales).Where({id:#note_page_params_sale_id#}).Vars(sale)\n}\nSetTitle($@1ta_transfer_manager$)\nDiv(content-wrapper){\n    Div(row mt-sm){\n        Div(col-lg-10 col-lg-offset-1){\n            Form(panel panel-primary){\n                If(And(#needed_role_id#>0,#role_id#==#needed_role_id#,#sale_id#>0)){\n                    Div(panel-body){\n                        Div(#row#){\n                            Div(#col_left#){\n                                $@1wallet$\n                            }\n                            Div(#col_right#){\n                                #sale_key_id_buyer#\n                            }\n                        }\n                        Div(#row#){\n                            Div(#col_left#){\n                                $@1amount$\n                            }\n                            Div(#col_right#){\n                                #sale_amount#\n                            }\n                        }\n                        Div(#row#){\n                            Div(#col_left#){\n                                $@1currency_type$\n                            }\n                            Div(#col_right#){\n                                AppParam(App:#application_id#, Name:ta_currency_type, Ecosystem: #ecosystem_id#, Index: #sale_currency_type#)\n                            }\n                        }\n                        Div(#row#){\n                            Div(#col_left#){\n                                $@1amount_apl$\n                            }\n                            Div(#col_right#){\n                                Money(#sale_amount_apl#)\n                            }\n                        }\n                        Div(#row# text-muted){\n                            Div(#col_left#){\n                                $@1investor_funds_transfer_date$\n                            }\n                            Div(#col_right#){\n                                DateTime(#sale_buyer_transferred_at#, Format: YYYY-MM-DD HH:MI:SS)\n                            }\n                        }\n                        Div(#row# text-muted){\n                            Div(#col_left#){\n                                $@1created_at$\n                            }\n                            Div(#col_right#){\n                                DateTime(#sale_created_at#, Format: YYYY-MM-DD HH:MI:SS)\n                            }\n                        }\n                        Div(#row# text-muted){\n                            Div(#col_left#){\n                                $@1created_by$\n                            }\n                            Div(#col_right#){\n                                Address(#sale_key_id_sale_apl_admin#)\n                            }\n                        }\n                    }\n                    Div(panel-footer){\n                        If(And(#note_processing_info_member_id#==#key_id#,#isStartProcessing#==1)){\n                            Button(Body: $@1reject$, Class: btn btn-danger, Page: ta_reject, PageParams: \"RoleParam=#role_param#,notific_id=#notific_id#,back_page=#this_page#\").Popup(50,\"Rejected comment\")\n                            Button(Body: $@1accept$, Class: btn btn-primary pull-right, Page: default_page, Contract: TaTransferManager, Params: \"SaleId=#sale_id#,NotificId=#notific_id#\")\n                        }.ElseIf(#isStartProcessing#==1){\n                            Div(text-muted text-center){\n                                process begin another manager\n                            }\n                        }.ElseIf(#isStartProcessing#==0){\n                            Div(text-center){\n                                Button(Body: $@1processing$, Class: btn btn-primary, Page: #this_page#, PageParams: \"notific_id=#notific_id#\", Contract: @1NotificationsProcess, Params: \"notific_id=#notific_id#\")\n                            }\n                        }\n                    }\n                }.Else{\n                    Div(panel-body text-center){\n                        If(#needed_role_id#>0){\n                            If(#needed_role_id#!=#role_id#){\n                                DBFind(@1parameters).Where({ecosystem:#ecosystem_id#, name:#role_param#}).Vars(param)\n                                Div(h4){\n                                    this page only for role from parameter LinkPage(Page: @1params_edit, PageParams: \"id=#param_id#,back_page=#this_page#\", Body:#role_param#)\n                                }\n                            }\n                        }.Else{\n                            Div(h4){\n                                #role_param# not setted\n                            }\n                            Div(h4){\n                                LinkPage(Body:$@1ta_settings$, Page:ta_settings)\n                            }\n                        }\n\n                        If(#note_id_page_params_sale_id#>0){\n                            If(#sale_id#>0){}.Else{\n                                sale not found\n                            }\n                        }.Else{\n                            notification not found\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "ta_transfer_seller",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "DBFind(@1applications).Where({ecosystem:#ecosystem_id#, name:\"Trade APL\"}).Columns(\"id\").Vars(application)\n\nSetVar(this_page, ta_transfer_seller)\nSetVar(role_param, role_seller_apl)\nSetVar(row,\"row mt-sm\").(col_left,\"col-sm-4 text-right\").(col_right,\"col-sm-8 text-left\")\nSetVar(needed_role_id, EcosysParam(Name:#role_param#))\n\nAppParam(App:#application_id#, Name:ta_currency_type, Ecosystem: #ecosystem_id#, Source:currency_type)\nSetVar(isStartProcessing,0)\nIf(#notific_id#>0){\n    DBFind(@1notifications).Where({ecosystem:#ecosystem_id#, id:#notific_id#}).Columns(\"page_params->sale_id,date_start_processing,notification->type,processing_info->member_id\").Vars(note)\n    If(#note_date_start_processing#!=\"\"){\n        SetVar(isStartProcessing,1)\n    }\n}.ElseIf(GetVar(SaleId)!=\"\"){\n    DBFind(@1notifications).Where({ecosystem:#ecosystem_id#, \"page_params->sale_id\":#SaleId#, closed:0}).Columns(\"page_params->sale_id,date_start_processing,notification->type,processing_info->member_id\").Vars(note)\n    SetVar(notific_id,#note_id#)\n    If(#note_date_start_processing#!=\"\"){\n        SetVar(isStartProcessing,1)\n    }\n}\nSetVar(sale_id,0)\nIf(#note_page_params_sale_id#>0){\n    DBFind(sales).Where({id:#note_page_params_sale_id#}).Vars(sale)\n}\n\nSetTitle($@1ta_transfer_seller$)\nDiv(content-wrapper){\n    Div(row mt-sm){\n        Div(col-lg-10 col-lg-offset-1){\n            Form(panel panel-primary){\n                DBFind(wallets, wallets).Where({key_id_buyer:{$neq:0}, key_id_signer:{$neq:0}, rejected_at:0}).Vars(wallet).Custom(_name){\n                    Address(#key_id_buyer#)\n                }\n                If(And(#needed_role_id#>0,#role_id#==#needed_role_id#,#sale_id#>0)){\n                    Div(panel-body){\n                        Div(#row#){\n                            Div(#col_left#){\n                                $@1wallet$\n                            }\n                            Div(#col_right#){\n                                #sale_key_id_buyer#\n                            }\n                        }\n                        Div(#row#){\n                            Div(#col_left#){\n                                $@1amount$\n                            }\n                            Div(#col_right#){\n                                #sale_amount#\n                            }\n                        }\n                        Div(#row#){\n                            Div(#col_left#){\n                                $@1currency_type$\n                            }\n                            Div(#col_right#){\n                                AppParam(App:#application_id#, Name:ta_currency_type, Ecosystem: #ecosystem_id#, Index: #sale_currency_type#)\n                            }\n                        }\n                        Div(#row#){\n                            Div(#col_left#){\n                                $@1amount_apl$\n                            }\n                            Div(#col_right#){\n                                Money(#sale_amount_apl#)\n                            }\n                        }\n                        Div(#row# text-muted){\n                            Div(#col_left#){\n                                $@1investor_funds_transfer_date$\n                            }\n                            Div(#col_right#){\n                                DateTime(#sale_buyer_transferred_at#, Format: YYYY-MM-DD HH:MI:SS)\n                            }\n                        }\n                        Div(#row# text-muted){\n                            Div(#col_left#){\n                                $@1created_at$\n                            }\n                            Div(#col_right#){\n                                DateTime(#sale_created_at#, Format: YYYY-MM-DD HH:MI:SS)\n                            }\n                        }\n                        Div(#row# text-muted){\n                            Div(#col_left#){\n                                $@1created_by$\n                            }\n                            Div(#col_right#){\n                                Address(#sale_key_id_sale_apl_admin#)\n                            }\n                        }\n                        Div(#row# text-muted){\n                            Div(#col_left#){\n                                $@1checked_by$\n                            }\n                            Div(#col_right#){\n                                Address(#sale_key_id_sale_apl_manager#)\n                            }\n                        }\n                    }\n                    Div(panel-footer){\n                        If(And(#note_processing_info_member_id#==#key_id#,#isStartProcessing#==1)){\n                            Button(Body: $@1reject$, Class: btn btn-danger, Page: ta_reject, PageParams: \"RoleParam=#role_param#,notific_id=#notific_id#,back_page=#this_page#\").Popup(50,\"Rejected comment\")\n                            Button(Body: $@1accept$, Class: btn btn-primary pull-right, Page: default_page, Contract: TaTransferSeller, Params: \"SaleId=#sale_id#,NotificId=#notific_id#\")\n                        }.ElseIf(#isStartProcessing#==1){\n                            Div(text-muted text-center){\n                                process begin another seller\n                            }\n                        }.ElseIf(#isStartProcessing#==0){\n                            Div(text-center){\n                                Button(Body: $@1processing$, Class: btn btn-primary, Page: #this_page#, PageParams: \"notific_id=#notific_id#\", Contract: @1NotificationsProcess, Params: \"notific_id=#notific_id#\")\n                            }\n                        }\n                    }\n                }.Else{\n                    Div(panel-body){\n                        If(#needed_role_id#>0){\n                            If(#needed_role_id#!=#role_id#){\n                                DBFind(@1parameters).Where({ecosystem:#ecosystem_id#, name:#role_param#}).Vars(param)\n                                Div(h4){\n                                    this page only for role from parameter LinkPage(Page: @1params_edit, PageParams: \"id=#param_id#,back_page=#this_page#\", Body:#role_param#)\n                                }\n                            }\n                        }.Else{\n                            Div(h4){\n                                #role_param# not setted\n                            }\n                            Div(h4){\n                                LinkPage(Body:$@1ta_settings$, Page:ta_settings)\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "ta_transfer_view",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "If(GetVar(Id)){\n    DBFind(sales).Where({id:#Id#}).Vars(sale)\n}\n\nIf(GetVar(back_page)==\"\"){\n    SetVar(back_page,@1ta_sales)\n}\nSetVar(row,\"row mt-sm\").(col_left,\"col-sm-6 text-right text-bold\").(col-right,\"col-sm-6 text-left\")\nIf(#sale_id#>0){\n    Div(#row#){\n        Div(#col_left#){\n            $@1id$\n        }\n        Div(#col_right#){\n            #sale_id#\n        }\n    }\n    Div(#row#){\n        Div(#col_left#){\n            $@1amount_apl$\n        }\n        Div(#col_right#){\n            Money(#sale_amount_apl#)\n        }\n    }\n    Div(#row#){\n        Div(#col_left#){\n            $@1key_id_sale_apl_admin$\n        }\n        Div(#col_right#){\n            #sale_key_id_sale_apl_admin#\n        }\n    }\n    If(#sale_key_id_sale_apl_manager#!=0){\n        Div(#row#){\n            Div(#col_left#){\n                $@1key_id_sale_apl_manager$\n            }\n            Div(#col_right#){\n                #sale_key_id_sale_apl_manager#\n            }\n        }\n        If(#sale_manager_rejected_at#>0){\n            Div(#row#){\n                Div(#col_left#){\n                    $@1manager_rejected_at$\n                }\n                Div(#col_right#){\n                    DateTime(#sale_manager_rejected_at#, Format: YYYY-MM-DD HH:MI:SS)\n                }\n            }\n\n            Div(#row#){\n                Div(#col_left#){\n                    $@1manager_reject_comment$\n                }\n                Div(#col_right#){\n                    #sale_manager_reject_comment#\n                }\n            }\n        }\n    }\n    If(#sale_key_id_seller#!=0){\n        Div(#row#){\n            Div(#col_left#){\n                $@1key_id_seller$\n            }\n            Div(#col_right#){\n                #sale_key_id_seller#\n            }\n        }\n        If(#sale_seller_rejected_at#>0){\n            Div(#row#){\n                Div(#col_left#){\n                    $@1seller_rejected_at$\n                }\n                Div(#col_right#){\n                    DateTime(#sale_seller_rejected_at#, Format: YYYY-MM-DD HH:MI:SS)\n                }\n            }\n\n            Div(#row#){\n                Div(#col_left#){\n                    $@1seller_reject_comment$\n                }\n                Div(#col_right#){\n                    #sale_seller_reject_comment#\n                }\n            }\n        }.Else{\n            Div(#row#){\n                Div(#col_left#){\n                    $@1seller_transferred_at$\n                }\n                Div(#col_right#){\n                    DateTime(#sale_seller_transferred_at#, Format: YYYY-MM-DD HH:MI:SS)\n                }\n            }\n        }\n    }\n\n}\nDiv(row mt){\n    Div(col-md-12){\n        Button(Body: LangRes(@1back), Class: btn btn-default, Page: #back_page#)\n    }\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "ta_wallets",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "SetVar(this_page, @1ta_wallets)\nSetVar(row,\"row mt-sm\").(col_left,\"col-sm-4 mt-sm text-right\").(col_right,\"col-sm-8 text-left\")\nSetVar(snapswap_role_id, EcosysParam(Name:role_snapswap))\n\nDiv(content-wrapper){\n\tSetTitle($@1ta_wallets$)\n\tIf(And(#snapswap_role_id#>0,#role_id#==#snapswap_role_id#)){\n\t\tAddToolButton(Title:$@1ta_add_public_key$, Page: @1ta_key_check, Icon: icon-wallet).Popup(Header: $@1ta_add_public_key$, Width: \"50\")\n\t}\n\n\tSetVar(Where, {id:{$gt:0}})\n\tIf(GetVar(Search)!=\"\"){\n\t\tSetVar(Where, {$or:[{\"key_id_buyer\":#Search#},{\"key_id_signer\":#Search#}]})\n\t}.Else{\n\t\tSetVar(Search,)\n\t}\n\t\n    Form(panel panel-primary){\n        Div(panel-body){\n            Div(row){\n\t\t\t\tDiv(col-md-12){\n\t\t\t\t\tForm(input-group){\n\t\t\t\t\t\tDiv(input-group-addon){\n\t\t\t\t\t\t\tLangRes(@1key_id)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tInput(Name: Search, Value: #Search#)\n\t\t\t\t\t\tDiv(input-group-btn){\n\t\t\t\t\t\t\tIf(GetVar(Search)!=\"\"){\n\t\t\t\t\t\t\t\tButton(Class: btn btn-default fa fa-close, Page: #this_page#)\n\t\t\t\t\t\t\t}\n                            Button(Class: btn btn-default fa fa-search, Page: #this_page#, PageParams: \"Search=Val(Search),type=1\")\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n            }\n\n\t\t\tDBFind(@1wallets, wallets).Where(#Where#).Order({id:-1}).Count(sales_count).Custom(_rat){\n\t\t\t\tIf(#rejected_at#>0){\n\t\t\t\t\tDateTime(#rejected_at#, Format: YYYY-MM-DD HH:MI:SS)\n\t\t\t\t}\n\t\t\t}.Custom(_sat){\n\t\t\t\tIf(#signed_at#>0){\n\t\t\t\t\tDateTime(#signed_at#, Format: YYYY-MM-DD HH:MI:SS)\n\t\t\t\t}\n\t\t\t}.Custom(_cat){\n\t\t\t\tIf(#created_at#>0){\n\t\t\t\t\tDateTime(#created_at#, Format: YYYY-MM-DD HH:MI:SS)\n\t\t\t\t}\n\t\t\t}\n\n            Div(row){\n                Div(col-md-12){\n\t\t\t\t\tIf(#sales_count#>0){\n\t\t\t\t\t\tDiv(table-responsive){\n\t\t\t\t\t\t\tTable(wallets,\"$@1id$=id,$@1key_id_buyer$=key_id_buyer,$@1key_id_signer_apla$=key_id_signer,$@1rejected_at$=_rat,$@1signed_at$=_sat,$@1created_at$=_cat\")\n\t\t\t\t\t\t}\n\t\t\t\t\t}.Else{\n\t\t\t\t\t\tDiv(h3 text-muted text-center){\n\t\t\t\t\t\t\t$@1wallets$ $@1not_founded$\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n                }\n            }\n        }\n    }\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "TaAsblAction",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract TaAsblAction {\n    data {\n        Action string\n        WalletId int\n        NotificId int\n    }\n    conditions{\n        var basicAppId int\n        basicAppId = Int(DBFind(\"@1applications\").Where({ecosystem:1, name:\"Basic\"}).One(\"id\"))\n        if basicAppId == 0{\n            warning LangRes(\"@1app_not_found\", \"en\")\n        }\n        $roleConsensus = Int(EcosysParam(\"role_apla_consensus_asbl\"))\n        if $roleConsensus == 0{\n            warning Sprintf(LangRes(\"@1role_not_set_application_parameter\", \"en\"), \"role_apla_consensus_asbl\")\n        }\n        if !RoleAccess($roleConsensus){\n            warning \"this action allowed only for role id #\" + $roleConsensus\n        }\n        $wallet = DBFind(\"@1wallets\").Where({id:$WalletId, rejected_at:0}).Row()\n        if !$wallet{\n            warning \"Buyer wallet not found\"\n        }\n        if Int($wallet[\"signed_at\"]) == 0{\n            warning \"Buyer wallet not signed\"\n        }\n        if $wallet[\"key_id_signer\"] > 0{\n            if $wallet[\"key_id_signer\"] != $key_id{\n                warning \"This wallet was signed by asbl early\"\n            }\n        }\n    }\n\n    action {\n        if $Action == \"accept\"{\n            DBUpdate(\"@1wallets\", Int($wallet[\"id\"]), {key_id_signer:$key_id})\n            // buyer notification\n            var params map\n            params[\"wallet_id\"] = $wallet[\"id\"]\n            @1NotificationsSend(\"member_id,sender,text_header,page_name,params_map,closure_type\", Int($wallet[\"key_id_buyer\"]), 1, \"Your wallet approved\", \"ta_buyer_congratulation\", params, 1)\n\n        }elif $Action == \"reject\"{\n            DBUpdate(\"@1wallets\", Int($wallet[\"id\"]), {rejected_at:$time})\n        }\n        @1NotificationsClose(\"notific_id\", $NotificId)\n    }\n}\n",
            "Type": "contracts"
        },
        {
            "Name": "TaBuyerAction",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract TaBuyerAction {\n    data {\n        Action string\n    }\n    conditions{\n        var basicAppId int\n        basicAppId = Int(DBFind(\"@1applications\").Where({ecosystem:1, name:\"Basic\"}).One(\"id\"))\n        if basicAppId == 0{\n            warning LangRes(\"@1app_not_found\", \"en\")\n        }\n        $roleConsensus = Int(EcosysParam(\"role_apla_consensus_asbl\"))\n        if $roleConsensus == 0{\n            warning Sprintf(LangRes(\"@1role_not_set_application_parameter\", \"en\"), \"role_apla_consensus_asbl\")\n        }\n        $wallet = DBFind(\"wallets\").Where({key_id_buyer:$key_id, rejected_at:0}).Row()\n        if !$wallet{\n            warning \"Buyer wallet not found\"\n        }\n    }\n\n    action {\n        if $Action == \"accept\"{\n            DBUpdate(\"wallets\", Int($wallet[\"id\"]), {signed_at:$time})\n            // role Apla Consensus notification\n            var params map title string\n            title = Sprintf(\"Buyer %v signed contract\", IdToAddress($key_id))\n            params[\"wallet_id\"] = $wallet[\"id\"]\n            @1NotificationsSend(\"rid,sender,text_header,page_name,params_map,closure_type\", $roleConsensus, 1, title, \"ta_asbl_contract\", params, 1)\n\n        }elif $Action == \"reject\"{\n            DBUpdate(\"wallets\", Int($wallet[\"id\"]), {rejected_at:$time})\n        }\n\n        var notes array i int note map\n        notes = DBFind(\"@1notifications\").Where({ecosystem:$ecosystem_id, \"recipient->member_id\":$key_id, page_name:\"@1ta_buyer_contract\", closed:0}).Columns(\"id\")\n        while i < Len(notes){\n            note = notes[i]\n            @1NotificationsClose(\"notific_id\",Int(note[\"id\"]))\n            i = i + 1\n        }\n    }\n}\n",
            "Type": "contracts"
        },
        {
            "Name": "TaKeyCheck",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract TaKeyCheck {\n    data {\n        public_key string\n        key_type string\n        current_role_id int\n    }\n\n    conditions {\n        if $public_key == \"\" {\n            warning LangRes(\"@1public_key_empty\", \"en\")\n        }\n\n        $public_key = Replace($public_key, \" \", \"\")\n        if HasPrefix($public_key, \"04\") {\n            $public_key = Substr($public_key, 2, Size($public_key) - 2)\n        }\n        $userKey = PubToID($public_key)\n\n        if $userKey == 0 {\n            warning LangRes(\"@1public_key_invalid\", \"en\")\n        }\n\n        if DBFind(\"wallets\").Where({key_id_buyer: $userKey}).One(\"id\") {\n            warning LangRes(\"@1investor_added_already\", \"en\")\n        }\n\t\t\n        if DBFind(\"keys\").Where({id: $userKey}).One(\"id\") {\n            warning LangRes(\"@1key_added_already\", \"en\")\n        }\n\n        var snapSwapRoleId int snapSwapRoleName string\n        snapSwapRoleId = Int(EcosysParam(\"role_snapswap\"))\n        snapSwapRoleName = DBFind(\"@1roles\").Where({\"id\": snapSwapRoleId}).One(\"role_name\")\n\n        if snapSwapRoleId == 0 {\n            warning Sprintf(LangRes(\"@1role_not_set_application_parameter\", \"en\"), \"role_snapswap\")\n        }\n\n        if !RoleAccess(snapSwapRoleId) {\n            warning Sprintf(LangRes(\"x_role_only_action\", \"en\"), snapSwapRoleName)\n        }\n    }\n\n    action {\n        DBInsert(\"@1keys\", {\"id\": $userKey, \"pub\": $public_key})\n        var start_balance money\n        start_balance = Money(1000000000000000)\n        @1TokensSend(\"Recipient_Account,Amount\", IdToAddress($userKey), start_balance)\n\n        if $key_type == \"investor\" {\n            DBInsert(\"@1wallets\", {\"key_id_buyer\": $userKey, \"created_at\": $block_time})\n\n            // new user notification\n            var params map title page body string\n            title = LangRes(\"@1ta_hello_user_description\", \"en\")\n            body = LangRes(\"@1ta_read_contract\", \"en\")\n            page = \"@1ta_buyer_contract\"\n            @1NotificationsSend(\"member_id,sender,text_header,text_body,page_name,params_map,closure_type,current_role_id\", $userKey, 2, title, body, page, params, 1, $current_role_id)          \n        }\n    }\n}",
            "Type": "contracts"
        },
        {
            "Name": "TaReject",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract TaReject {\n    data {\n        Comment string\n        RoleParam string\n        NotificId int\n    }\n    func getRoleId(name string) int{\n        var rid int\n        rid = Int(EcosysParam(name))\n        if rid == 0{\n            warning Sprintf(LangRes(\"@1role_not_set_application_parameter\", \"en\"), name)\n        }\n        return rid\n    }\n    conditions{\n        $WAITING_MANAGER = 1\n        $WAITING_SELLER = 2\n        $FINISHED = 3\n        $REJECTED = 4\n\n        if !($RoleParam == \"role_sale_apl_manager\" || $RoleParam == \"role_seller_apl\"){\n            warning \"invalid role parameter\"\n        }\n        var role noteSaleId int note map\n        role = getRoleId($RoleParam)\n        if !RoleAccess(role){\n            warning \"this action allowed only for role id #\" + role\n        }\n        note = DBFind(\"@1notifications\").Where({id:$NotificId}).Columns(\"page_params->sale_id,date_start_processing,notification->type\").Row()\n        if !note{\n            warning \"Notification not found\"\n        }\n        $needProcessing = note[\"date_start_processing\"] == \"\"\n        noteSaleId = Int(note[\"page_params.sale_id\"])\n        $sale = DBFind(\"sales\").Where({id:noteSaleId}).Row()\n        if !$sale {\n            warning \"Sale not found\"\n        }\n        $saleId = Int($sale[\"id\"])\n    }\n\n    action {\n        if $needProcessing {\n            @1NotificationsProcess(\"notific_id\", $NotificId)\n        }\n        @1NotificationsClose(\"notific_id\", $NotificId)\n        var sale params map title body string prevKeyId int\n        title = Sprintf(\"Sale %v rejected\", $saleId)\n        body = $Comment\n        params[\"sale_id\"] = $saleId\n        sale[\"status\"] = $REJECTED\n        if $RoleParam == \"role_sale_apl_manager\"{\n            sale[\"key_id_sale_apl_manager\"] = $key_id\n            sale[\"manager_reject_comment\"] = $Comment\n            sale[\"manager_rejected_at\"] = $time\n            prevKeyId = Int($sale[\"key_id_sale_apl_admin\"])\n\n        }elif $RoleParam == \"role_seller_apl\"{\n            sale[\"key_id_seller\"] = $key_id\n            sale[\"seller_reject_comment\"] = $Comment\n            sale[\"seller_rejected_at\"] = $time\n            prevKeyId = Int($sale[\"key_id_sale_apl_manager\"])\n        }\n\n        DBUpdate(\"sales\", $saleId, sale)\n        @1NotificationsSend(\"member_id,sender,text_header,text_body,page_name,params_map,closure_type\", prevKeyId, 1, title, body, \"ta_notification\", params, 1)\n\n    }\n}",
            "Type": "contracts"
        },
        {
            "Name": "TaSettings",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract TaSettings {\n    data {\n        RoleAdmin int\n        RoleManager int\n        RoleSeller int\n        RoleSnapswap int\n    }\n    conditions{\n        MainCondition()\n    }\n    func updateParam(name string, id int){\n        if id > 0{\n            var params paramsNew map\n            params = DBFind(\"@1parameters\").Where({name:name, ecosystem:$ecosystem_id}).Row()\n            paramsNew[\"Value\"] = Str(id)\n            if params {\n                paramsNew[\"Id\"] = Int(params[\"id\"])\n                paramsNew[\"Conditions\"] = params[\"conditions\"]\n                CallContract(\"@1EditParameter\", paramsNew)\n            }else{\n                paramsNew[\"Name\"] = name\n                paramsNew[\"Conditions\"] = \"ContractConditions(\\\"MainCondition\\\")\"\n                CallContract(\"@1NewParameter\", paramsNew)\n            }\n        }\n    }\n    action {\n        updateParam(\"role_sale_apl_admin\", $RoleAdmin)\n        updateParam(\"role_sale_apl_manager\", $RoleManager)\n        updateParam(\"role_seller_apl\", $RoleSeller)\n        updateParam(\"role_snapswap\", $RoleSnapswap)\n    }\n}",
            "Type": "contracts"
        },
        {
            "Name": "TaTransferAdmin",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract TaTransferAdmin {\n    data {\n        WalletId int\n        Amount string\n        CurrencyType int\n        AmountApl money\n        TransferredDate string\n        TransferredTime string\n    }\n    func getRoleId(name string) int{\n        var rid int\n        rid = Int(EcosysParam(name))\n        if rid == 0{\n            warning Sprintf(LangRes(\"@1role_not_set_application_parameter\", \"en\"), name)\n        }\n        return rid\n    }\n    func trimZeroTime(s string) string {\n        if Contains(s, \"T00:00:00Z\") {\n            s = s Replace(s, \"T00:00:00Z\", \"\")\n        }\n        return s\n    }\n    func dateAddTime(d, t string) string {\n        var dt string\n        if Size(t) == 5 {\n            dt = Sprintf(\"%v %v:00\", trimZeroTime(d), t)\n        }\n        return dt\n    }\n    conditions{\n        $WAITING_MANAGER = 1\n        $WAITING_SELLER = 2\n        $FINISHED = 3\n        $REJECTED = 4\n        if $AmountApl <= 0{\n            warning \"invalid amount APL\"\n        }\n        if $Amount <= 0.0{\n            warning \"invalid amount\"\n        }\n        $AmountApl = $AmountApl * Money(1000000000000000000)\n\n        $transferredAt = UnixDateTime(dateAddTime($TransferredDate, $TransferredTime))\n        if $transferredAt == 0 {\n            warning \"invalid transfer datetime\"\n        }\n        $appId = Int(DBFind(\"@1applications\").Where({ecosystem:$ecosystem_id, name:\"Trade APL\"}).One(\"id\"))\n        if $appId == 0{\n            warning LangRes(\"@1app_not_found\", \"en\")\n        }\n        $roleAplManager = getRoleId(\"role_sale_apl_manager\")\n        $currentRole = getRoleId(\"role_sale_apl_admin\")\n        if !RoleAccess($currentRole){\n            warning \"this action allowed only for role id #\" + $currentRole\n        }\n\n        $wallet = DBFind(\"wallets\").Where({id:$WalletId}).Row()\n        if !$wallet{\n            warning \"Buyer wallet not found\"\n        }\n        if $CurrencyType <= 0 || $CurrencyType > 3{\n            warning \"Invalid Currency Type\"\n        }\n    }\n\n    action {\n        var sale map saleId int\n        sale[\"key_id_buyer\"] = $wallet[\"key_id_buyer\"]\n        sale[\"currency_type\"] = $CurrencyType\n        sale[\"amount\"] = $Amount\n        sale[\"amount_apl\"] = $AmountApl\n        sale[\"key_id_sale_apl_admin\"] = $key_id\n        sale[\"created_at\"] = $time\n        sale[\"buyer_transferred_at\"] = $transferredAt\n        sale[\"status\"] = $WAITING_MANAGER\n\n        saleId = DBInsert(\"sales\", sale)\n\n        // role Apla sales manager notification\n        var params map title page string\n        title = Sprintf(\"Check sale id %v\", saleId)\n        page = \"ta_transfer_manager\"\n        params[\"sale_id\"] = saleId\n        @1NotificationsSend(\"rid,sender,text_header,page_name,params_map,closure_type,current_role_id\", $roleAplManager, 2, title, page, params, 1, $currentRole)\n\n    }\n}",
            "Type": "contracts"
        },
        {
            "Name": "TaTransferManager",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract TaTransferManager {\n    data {\n        SaleId int\n        NotificId int\n    }\n    func getRoleId(name string) int{\n        var rid int\n        rid = Int(EcosysParam(name))\n        if rid == 0{\n            warning Sprintf(LangRes(\"@1role_not_set_application_parameter\", \"en\"), name)\n        }\n        return rid\n    }\n    conditions{\n        $WAITING_MANAGER = 1\n        $WAITING_SELLER = 2\n        $FINISHED = 3\n        $REJECTED = 4\n        $appId = Int(DBFind(\"@1applications\").Where({ecosystem:$ecosystem_id, name:\"Trade APL\"}).One(\"id\"))\n        if $appId == 0{\n            warning LangRes(\"@1app_not_found\", \"en\")\n        }\n        $roleAplSeller = getRoleId(\"role_seller_apl\")\n        $currentRole = getRoleId(\"role_sale_apl_manager\")\n        if !RoleAccess($currentRole){\n            warning \"this action allowed only for role id #\" + $currentRole\n        }\n\n        $sale = DBFind(\"sales\").Where({id:$SaleId}).Row()\n        if !$sale{\n            warning \"Sale not found\"\n        }\n    }\n\n    action {\n        @1NotificationsClose(\"notific_id\", $NotificId)\n        DBUpdate(\"sales\", Int($sale[\"id\"]), {key_id_sale_apl_manager:$key_id, status:$WAITING_SELLER})\n\n        // role Apla seller notification\n        var params map title page string\n        title = Sprintf(\"Transfer sale id %v\", $sale[\"id\"])\n        params[\"sale_id\"] = $sale[\"id\"]\n        page = \"ta_transfer_seller\"\n        @1NotificationsSend(\"rid,sender,text_header,page_name,params_map,closure_type,current_role_id\", $roleAplSeller, 2, title, page, params, 1, $currentRole)\n\n    }\n}",
            "Type": "contracts"
        },
        {
            "Name": "TaTransferSeller",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract TaTransferSeller {\n    data {\n        SaleId int\n        NotificId int\n    }\n    func getRoleId(name string) int{\n        var rid int\n        rid = Int(EcosysParam(name))\n        if rid == 0{\n            warning Sprintf(LangRes(\"@1role_not_set_application_parameter\", \"en\"), name)\n        }\n        return rid\n    }\n    conditions{\n        $WAITING_MANAGER = 1\n        $WAITING_SELLER = 2\n        $FINISHED = 3\n        $REJECTED = 4\n        $appId = Int(DBFind(\"@1applications\").Where({ecosystem:$ecosystem_id, name:\"Trade APL\"}).One(\"id\"))\n        if $appId == 0{\n            warning LangRes(\"@1app_not_found\", \"en\")\n        }\n        $currentRole = getRoleId(\"role_seller_apl\")\n        if !RoleAccess($currentRole){\n            warning \"this action allowed only for role id #\" + $currentRole\n        }\n\n        $sale = DBFind(\"sales\").Where({id:$SaleId}).Row()\n        if !$sale{\n            warning \"sale not found\"\n        }\n    }\n\n    action {\n        @1NotificationsClose(\"notific_id\", $NotificId)\n        var s transfer map\n        s[\"key_id_seller\"] = $key_id\n        s[\"seller_transferred_at\"] = $time\n        s[\"status\"] = $FINISHED\n        DBUpdate(\"sales\", Int($sale[\"id\"]), s)\n\n        @1TokensSend(\"Recipient_Account,Amount\", $sale[\"key_id_buyer\"], Money($sale[\"amount_apl\"]))\n    }\n}",
            "Type": "contracts"
        }
    ]
}