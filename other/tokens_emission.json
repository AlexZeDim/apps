{
    "name": "Tokens emission",
    "conditions": "ContractConditions(\"@1DeveloperCondition\")",
    "data": [
        {
            "Name": "default_menu",
            "Conditions": "ContractAccess(\"@1EditMenu\")",
            "Value": "MenuItem(Title: $@1emission_tokens$, Page: @1te_list, Icon:fa fa-list-ul)",
            "Type": "menu"
        },
        {
            "Name": "completed_stages",
            "Trans": "{\"en\": \"Completed stages\", \"ru\": \"Завершенные этапы\"}",
            "Type": "languages"
        },
        {
            "Name": "data_input",
            "Trans": "{\"en\": \"Data input\", \"ru\": \"Ввод данных\"}",
            "Type": "languages"
        },
        {
            "Name": "emission_date",
            "Trans": "{\"en\": \"Emission date\", \"ru\": \"Дата эмиссии\"}",
            "Type": "languages"
        },
        {
            "Name": "emission_new",
            "Trans": "{\"en\": \"New emission\", \"ru\": \"Новая эмиссия\"}",
            "Type": "languages"
        },
        {
            "Name": "emission_tokens",
            "Trans": "{\"en\": \"Emission tokens\", \"ru\": \"Эмиссия токенов\"}",
            "Type": "languages"
        },
        {
            "Name": "emission_view",
            "Trans": "{\"en\": \"View emission\", \"ru\": \"Просмотр эмиссии\"}",
            "Type": "languages"
        },
        {
            "Name": "multiple",
            "Trans": "{\"en\": \"multiple\", \"ru\": \"многоразовый\"}",
            "Type": "languages"
        },
        {
            "Name": "singletime",
            "Trans": "{\"en\": \"single-time\", \"ru\": \"одноразовый\"}",
            "Type": "languages"
        },
        {
            "Name": "template_creation_error_x_unspecified",
            "Trans": "{\"en\": \"Creation error: %v unspecified\", \"ru\": \"Ошибка создания: %v не определено\"}",
            "Type": "languages"
        },
        {
            "Name": "type_emission",
            "Trans": "{\"en\": \"Emission type\", \"ru\": \"Тип эмиссии\"}",
            "Type": "languages"
        },
        {
            "Name": "type_withdraw",
            "Trans": "{\"en\": \"Withdraw type\", \"ru\": \"Тип гашения\"}",
            "Type": "languages"
        },
        {
            "Name": "with_withdrawal",
            "Trans": "{\"en\": \"with withdrawal\", \"ru\": \"с гашением\"}",
            "Type": "languages"
        },
        {
            "Name": "withdraw",
            "Trans": "{\"en\": \"Withdraw\", \"ru\": \"Погасить\"}",
            "Type": "languages"
        },
        {
            "Name": "withdrawn",
            "Trans": "{\"en\": \"Withdrawn\", \"ru\": \"Погашено\"}",
            "Type": "languages"
        },
        {
            "Name": "without_withdrawal",
            "Trans": "{\"en\": \"without withdrawal\", \"ru\": \"без гашения\"}",
            "Type": "languages"
        },
        {
            "Name": "tokens",
            "Columns": "[\r\n    {\r\n        \"conditions\": \"ContractAccess(\\\"@1TeCreate\\\")\",\r\n        \"name\": \"ecosystem\",\r\n        \"type\": \"number\"\r\n    },\r\n    {\r\n        \"conditions\": \"ContractAccess(\\\"@1TeCreate\\\")\",\r\n        \"name\": \"title\",\r\n        \"type\": \"varchar\"\r\n    },\r\n    {\r\n        \"conditions\": \"ContractAccess(\\\"@1TeCreate\\\")\",\r\n        \"name\": \"amount\",\r\n        \"type\": \"json\"\r\n    },\r\n    {\r\n        \"conditions\": \"ContractAccess(\\\"@1TeCreate\\\", \\\"@1TeTypeChange\\\")\",\r\n        \"name\": \"type_emission\",\r\n        \"type\": \"number\"\r\n    },\r\n    {\r\n        \"conditions\": \"ContractAccess(\\\"@1TeCreate\\\")\",\r\n        \"name\": \"type_withdraw\",\r\n        \"type\": \"number\"\r\n    },\r\n    {\r\n        \"conditions\": \"ContractAccess(\\\"@1TokensEmissionWithdraw\\\")\",\r\n        \"name\": \"withdraw\",\r\n        \"type\": \"number\"\r\n    }\r\n]",
            "Permissions": "{\"insert\":\"true\",\"update\":\"true\",\"new_column\":\"true\"}",
            "Type": "tables"
        },
        {
            "Name": "type_emission",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "@1singletime,@1multiple",
            "Type": "app_params"
        },
        {
            "Name": "type_withdraw",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "@1without_withdrawal,@1with_withdrawal",
            "Type": "app_params"
        },
        {
            "Name": "te_edit",
            "Conditions": "true",
            "Value": "DBFind(@1applications).Columns(\"id\").Where({name:\"Tokens\", deleted:0, ecosystem:1}).Vars(application)\r\nAppParam(App:#application_id#, Name:type_emission, Source:type_emission, Ecosystem:1)\r\nAppParam(App:#application_id#, Name:type_withdraw, Source:type_withdraw, Ecosystem:1)\r\nSetVar(item_type_emission,).(item_title,).(item_amount,).(item_ecosystem,).(item_type_withdraw,)\r\nSetVar(this_page,@1te_edit).(back_page,@1te_list)\r\nSetVar(btn_title,$@1execute$)\r\nIf(GetVar(Id)){\r\n    DBFind(@1tokens).Where({id:#Id#}).Vars(item)\r\n    If(GetVar(TypeEmission)==\"\"){\r\n        SetVar(TypeEmission,#item_type_emission#)\r\n    }\r\n}.Else{\r\n    SetVar(Id,0)\r\n}\r\nSetTitle($@1emission_new$)\r\nDiv(fullscreen-wrapper){\r\n    Div(breadcrumb){\r\n        LinkPage(Body: $@1tokens$, Page: #back_page#)\r\n        Span(/,mh)\r\n        Span($@1emission_new$, text-muted)\r\n    }\r\n    Div(row){\r\n        Div(col-sm-8 col-sm-offset-2){\r\n            Form(panel panel-default){\r\n                Div(panel-body){\r\n                    If(#Id#>0){\r\n                        Input(Name: Id, Type:hidden, Value: #Id#)\r\n                    }\r\n                    Div(row mt-sm){\r\n                        Div(col-sm-4 mt-sm text-right){\r\n                            LangRes(@1type_emission)\r\n                            Span(*,text-danger)\r\n                        }\r\n                        Div(col-sm-8 text-left){\r\n                            If(#Id#>0){\r\n                                Div(mt-sm){\r\n                                    AppParam(App:#application_id#, Name:type_emission, Index:#item_type_emission#, Ecosystem:1)\r\n                                    If(#item_type_emission#==2){\r\n                                        Button(Body: $@1change$, Page:#this_page#, PageParams: \"Id=#Id#\", Class: btn btn-default ml, Contract: @1TeTypeChange, Params: \"Id=#Id#\")\r\n                                    }\r\n                                }\r\n                            }.Else{\r\n                                ForList(type_emission){\r\n                                    If(#TypeEmission#==#id#){\r\n                                        Button(Body: #name#, Class: btn btn-default mr disabled)\r\n                                    }.Else{\r\n                                        Button(Body: #name#, Page:#this_page#, PageParams: \"TypeEmission=#id#,Id=#Id#\", Class: btn btn-default mr)\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    Div(row mt-sm){\r\n                        Div(col-sm-4 mt-sm text-right){\r\n                            LangRes(@1title)\r\n                            Span(*,text-danger)\r\n                        }\r\n                        Div(col-sm-8 text-left){\r\n                            If(#Id#>0){\r\n                                Div(mt-sm){\r\n                                    #item_title#\r\n                                }\r\n                            }.Else{\r\n                                Input(Name: Title)\r\n                            }\r\n                        }\r\n                    }\r\n                    Div(row mt-sm){\r\n                        Div(col-sm-4 mt-sm text-right){\r\n                            LangRes(@1type_withdraw)\r\n                            Span(*,text-danger)\r\n\r\n                        }\r\n                        Div(col-sm-8 text-left){\r\n                            If(Or(#item_type_withdraw#==1,#item_withdraw#==1)){\r\n                                Div(mt-sm){\r\n                                    AppParam(App:#application_id#, Name:type_withdraw, Index:#item_type_withdraw#, Ecosystem:1)\r\n                                }\r\n                            }.Else{\r\n                                Select(Name: TypeWithdraw, Source:type_withdraw, NameColumn: name, ValueColumn: id, Value: #item_type_withdraw#)\r\n                            }\r\n                        }\r\n                    }\r\n                    If(Or(#TypeEmission#==2,#Id#==0)){\r\n                        Div(row mt-sm){\r\n                            Div(col-sm-4 mt-sm text-right){\r\n                                LangRes(@1amount) (APL)\r\n                                Span(*,text-danger)\r\n                            }\r\n                            Div(col-sm-8 text-left){\r\n                                If(#item_withdraw#==1){\r\n                                    Div(mt-sm text-bold){\r\n                                        $@1withdrawn$\r\n                                    }\r\n                                }.Else{\r\n                                    Input(Name: Amount, Type:number, Value: 0)\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    If(#Id#>0){\r\n                        JsonToSource(amounts, #item_amount#)\r\n                        Div(list-group-item mt-sm text-muted){\r\n                            Div(text-center){\r\n                                $@1completed_stages$\r\n                            }\r\n                            ForList(amounts){\r\n                                Div(row mt-sm){\r\n                                    Div(col-sm-4 text-right){\r\n                                        Money(#value#) (APL)\r\n                                    }\r\n                                    Div(col-sm-8 text-left){\r\n                                        DateTime(#key#, Format: YYYY-MM-DD HH:MI:SS)\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                Div(panel-footer){\r\n                    Button(Body: $@1back$, Page: #back_page#, Class: btn btn-default)\r\n                    Div(pull-right){\r\n                        If(And(#item_withdraw#!=1,GetVar(TypeEmission)!=\"\",#item_type_emission#!=1)){\r\n                            Button(Body: #btn_title#, Page: #back_page#, Class: btn btn-primary, Contract: @1TeCreate, Params: \"TypeEmission=#TypeEmission#\")\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "te_list",
            "Conditions": "true",
            "Value": "DBFind(@1applications).Columns(\"id\").Where({name:\"Tokens\", deleted:0, ecosystem:1}).Vars(application)\r\nSetTitle($@1tokens$)\r\nSetVar(this_page,@1te_list)\r\nDiv(content-wrapper){\r\n    AddToolButton(Title: $@1create$, Page: @1te_edit, Icon: icon-plus)\r\n\r\n    DBFind(@1tokens).Where({ecosystem:#ecosystem_id#}).Count(count)\r\n    If(#page#>0){\r\n        SetVar(prev_page,Calculate(#page#-1)\r\n    }.Else{\r\n        SetVar(page,0).(prev_page,0)\r\n    }\r\n    SetVar(per_page,25).(off,Calculate(#page#*#per_page#)).(last_page,Calculate(#count#/#per_page#)).(next_page,#last_page#)\r\n    If(#count#>Calculate(#off#+#per_page#)){\r\n        SetVar(next_page,Calculate(#page#+1)\r\n    }\r\n    Div(button-group){\r\n        If(#page#>0){\r\n            Button(Body:\"1\", Class:btn btn-default, Page:#this_page#, PageParams: \"page=0\")\r\n        }.Else{\r\n            Button(Body:\"1\", Class:btn btn-default disabled)\r\n        }\r\n        If(#page#>1){\r\n            Button(Body:Calculate(#prev_page#+1),Class:btn btn-default, Page:#this_page#, PageParams:\"page=#prev_page#\")\r\n        }\r\n        If(And(#page#>0,#page#<#last_page#)){\r\n            Button(Body:Calculate(#page#+1), Class:btn btn-default disabled)\r\n        }\r\n        If(#next_page#<#last_page#){\r\n            Button(Body:Calculate(#next_page#+1),Class:btn btn-default,Page:#this_page#, PageParams:\"page=#next_page#\")\r\n        }\r\n        If(#page#<#last_page#){\r\n            Button(Body:Calculate(#last_page#+1), Class:btn btn-default, Page:#this_page#, PageParams:\"page=#last_page#\")\r\n        }.ElseIf(#last_page#>0){\r\n            Button(Body:Calculate(#last_page#+1), Class:btn btn-default disabled)\r\n        }\r\n    }\r\n    DBFind(@1tokens,src_tokens).Where({ecosystem:#ecosystem_id#}).Offset(#off#).Order(id).Custom(_actions){\r\n        Div(text-right text-nowrap){\r\n            If(And(#type_emission#==2,#withdraw#!=1)){\r\n                Button(Class: btn btn-default fa fa-edit mr-sm, Page: @1te_edit, PageParams: \"Id=#id#\")\r\n            }\r\n            Button(Class: btn btn-default fa fa-eye mr-sm, Page: @1te_view, PageParams: \"Id=#id#\")\r\n        }\r\n    }.Custom(_type_withdraw){\r\n        AppParam(App:#application_id#, Name:type_withdraw, Index:#type_withdraw#, Ecosystem:1)\r\n    }.Custom(_type_emission){\r\n        AppParam(App:#application_id#, Name:type_emission, Index:#type_emission#, Ecosystem:1)\r\n    }.Custom(_amount){\r\n        JsonToSource(amounts,#amount#)\r\n        ForList(amounts){\r\n            Div(){\r\n                Span(\"Money(#value#)\",mr).(\"(DateTime(#key#, Format: YYYY-MM-DD HH:MI:SS))\",text-muted)\r\n            }\r\n        }\r\n    }\r\n    Div(panel panel-primary){\r\n        Div(panel-body){\r\n            Div(table-responsive){\r\n                Table(src_tokens,\"$@1title$=title,$@1type_emission$=_type_emission,$@1type_withdraw$=_type_withdraw,$@1amount$=_amount,=_actions\")\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "te_view",
            "Conditions": "true",
            "Value": "DBFind(@1applications).Columns(\"id\").Where({name:\"Tokens\", deleted:0, ecosystem:1}).Vars(application)\r\nIf(GetVar(Id)){\r\n    DBFind(@1tokens).Where({id:#Id#}).Vars(item)\r\n}\r\nSetVar(title,$@1emission_view$ ##Id#)\r\nSetTitle(#title#)\r\nDiv(content-wrapper){\r\n    Div(breadcrumb){\r\n        LinkPage(Body: $@1tokens$, Page: @1te_list)\r\n        Span(/, mh)\r\n        Span(#title#, text-muted)\r\n    }\r\n    If(GetVar(Id)){\r\n        Div(row){\r\n            Div(col-sm-8 col-sm-offset-2 col-lg-6 col-lg-offset-3){\r\n                Div(panel panel-default){\r\n                    Div(panel-body){\r\n                        Div(row mt-sm){\r\n                            Div(col-sm-4 text-right text-bold){\r\n                                LangRes(@1ecosystem)\r\n                            }\r\n                            Div(col-sm-8 text-left){\r\n                                #item_ecosystem#\r\n                            }\r\n                        }\r\n\r\n                        Div(row mt-sm){\r\n                            Div(col-sm-4 text-right text-bold){\r\n                                LangRes(@1type_withdraw)\r\n                            }\r\n                            Div(col-sm-8 text-left){\r\n                                AppParam(App:#application_id#, Name:type_withdraw, Index:#item_type_withdraw#, Ecosystem:1)\r\n                                If(#item_withdraw#==1){\r\n                                    Div(){\r\n                                        $@1withdrawn$\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        Div(row mt-sm){\r\n                            Div(col-sm-4 text-right text-bold){\r\n                                LangRes(@1type_emission)\r\n                            }\r\n                            Div(col-sm-8 text-left){\r\n                                AppParam(App:#application_id#, Name:type_emission, Index:#item_type_emission#, Ecosystem:1)\r\n                            }\r\n                        }\r\n\r\n                        Div(row mt-sm){\r\n                            Div(col-sm-4 text-right text-bold){\r\n                                LangRes(@1title)\r\n                            }\r\n                            Div(col-sm-8 text-left){\r\n                                #item_title#\r\n                            }\r\n                        }\r\n                        Div(row mt-sm){\r\n                            Div(col-sm-4 text-right text-bold){\r\n                                LangRes(@1amount)\r\n                            }\r\n                            Div(col-sm-8 text-left){\r\n                                JsonToSource(amounts, #item_amount#)\r\n                                ForList(amounts){\r\n                                    Div(row md-sm){\r\n                                        Div(col-sm-6){\r\n                                            Money(#value#) (APL)\r\n                                        }\r\n                                        Div(col-sm-6){\r\n                                            DateTime(#key#, Format: YYYY-MM-DD HH:MI:SS)\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    Div(panel-footer text-left){\r\n                        Button(Body: $@1back$, Page: @1te_list, Class: btn btn-default)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(h3 text-center){\r\n            $@1item_not_found$\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "TeCreate",
            "Conditions": "true",
            "Value": "contract TeCreate {\r\n    data {\r\n        Id int \"optional\"\r\n        Title string\r\n        Amount money\r\n        TypeWithdraw int\r\n        TypeEmission int\r\n    }\r\n\r\n    func getEmissionConditionContract() string{\r\n        var param map contractName string contractId int\r\n        param = DBFind(\"@1parameters\").Where({ecosystem:$ecosystem_id, name:\"emission_condition_contract\"}).Row()\r\n        if param{\r\n            contractName = param[\"value\"]\r\n            if Size(contractName) > 0{\r\n                contractId = GetContractByName(contractName)\r\n                if contractId == 0{\r\n                    error \"Condition contract for extension emission not found\"\r\n                }elif param[\"conditions\"] != \"false\"{\r\n                    error \"Condition parameter 'emission_condition_contract' for extension emission must be not editable\"\r\n                }\r\n            }\r\n        }\r\n        return contractName\r\n    }\r\n    func createEmissionConditionParam() {\r\n        if !DBFind(\"@1parameters\").Where({ecosystem:$ecosystem_id, name:\"emission_condition_contract\"}).Row(){\r\n            @1NewParameter(\"Name,Value,Conditions\", \"emission_condition_contract\", \"\", \"ContractConditions(\\\"MainCondition\\\")\")\r\n        }\r\n    }\r\n    func checkTokenExists(){\r\n        if DBFind(\"@1tokens\").Where({ecosystem:$ecosystem_id, withdraw:0}).Row(){\r\n            error \"Token for current ecosystems already exists and emission not withdraw\"\r\n        }\r\n    }\r\n    conditions {\r\n        if $Amount <= 0 {\r\n            error \"Invalid amount\"\r\n        }\r\n        if $Id > 0{\r\n            $item = DBFind(\"@1tokens\").Where({id:$Id}).Row()\r\n            if !$item {\r\n                error \"Emission not found\"\r\n            }\r\n            if $item[\"type_emission\"] == 1 {\r\n                error \"Emission are not editable\"\r\n            }else{\r\n                var name string\r\n                name = getEmissionConditionContract()\r\n                if name != \"\" {\r\n                    ContractConditions(name)\r\n                }else{\r\n                    MainCondition()\r\n                }\r\n            }\r\n        }else{\r\n            MainCondition()\r\n            if Size($Title) == 0{\r\n                error Sprintf(LangRes(\"@1template_creation_error_x_unspecified\", \"en\"), \"title\")\r\n            }\r\n            if $TypeEmission == 2 {\r\n                getEmissionConditionContract()\r\n            }\r\n            checkTokenExists()\r\n        }\r\n        if $Id == 0 && $Amount <= 0{\r\n            error Sprintf(LangRes(\"@1template_creation_error_x_unspecified\", \"en\"), \"amount\")\r\n        }\r\n        $guest = 4544233900443112470\r\n        $founder = Int(EcosysParam(\"founder_account\"))\r\n    }\r\n    action {\r\n        createEmissionConditionParam()\r\n\r\n        var m amount map ecosystemKeys string\r\n        ecosystemKeys = Sprintf(\"@%vkeys\", $ecosystem_id)\r\n\r\n        if $Id > 0{\r\n            m = $item\r\n            amount = JSONDecode(m[\"amount\"])\r\n            if m[\"type_emission\"] == 2{\r\n                amount[Str($block_time)] = $Amount\r\n                m[\"amount\"] = amount\r\n            }\r\n            if m[\"type_withdraw\"] == 2{\r\n                m[\"type_withdraw\"] = $TypeWithdraw\r\n            }\r\n            DBUpdate(\"@1tokens\", $Id, m)\r\n        }else{\r\n            amount[Str($block_time)] = $Amount\r\n            m = {type_emission:$TypeEmission, title:$Title, amount:amount, ecosystem:$ecosystem_id, type_withdraw:$TypeWithdraw}\r\n            $Id = DBInsert(\"@1tokens\", m)\r\n            if $TypeWithdraw == 2{\r\n                if DBFind(\"@1keys\").Where({ecosystem:$ecosystem_id, id:$guest}).Row(){\r\n                    DBUpdate(ecosystemKeys, $guest, {\"blocked\": 0})\r\n                }else{\r\n                    // create guest account\r\n                    var guestAccount map\r\n                    guestAccount = DBFind(\"@1keys\").Where({ecosystem:1, id:$guest}).Row()\r\n                    guestAccount[\"maxpay\"] = 0\r\n                    guestAccount[\"multi\"] = 0\r\n                    guestAccount[\"deleted\"] = 0\r\n                    guestAccount[\"amount\"] = 0\r\n                    guestAccount[\"blocked\"] = 0\r\n                    guestAccount[\"ecosystem\"] = $ecosystem_id\r\n                    DBInsert(ecosystemKeys, guestAccount)\r\n                }\r\n            }\r\n        }\r\n        DBUpdate(ecosystemKeys, $founder, {\"+amount\": $Amount})\r\n\r\n        var h map\r\n        h[\"sender_id\"] = 0\r\n        h[\"recipient_id\"] = $founder\r\n        h[\"amount\"] = $Amount\r\n        h[\"comment\"] = Sprintf(\"emission id %v\", $Id)\r\n        h[\"block_id\"] = $block\r\n        h[\"txhash\"] = $txhash\r\n        h[\"ecosystem\"] = $ecosystem_id\r\n        DBInsert(\"@1history\", h)\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "TeTypeChange",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract TeTypeChange {\r\n    data {\r\n        Id int\r\n    }\r\n    conditions {\r\n        MainCondition()\r\n        $item = DBFind(\"@1tokens\").Where({id:$Id}).Row()\r\n        if !$item {\r\n            error \"Emission not found\"\r\n        }\r\n        $SINGLETIME = 1\r\n        $MULTI = 2\r\n        if $item[\"type_emission\"] != $MULTI {\r\n            error \"Emission type error\"\r\n        }\r\n    }\r\n    action {\r\n        DBUpdate(\"@1tokens\", $Id, {type_emission:$SINGLETIME})\r\n    }\r\n}",
            "Type": "contracts"
        }
    ]
}