{
    "name": "Events",
    "conditions": "ContractConditions(\"@1DeveloperCondition\")",
    "data": [
        {
            "Name": "default_menu",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "MenuItem(Title:$e_events$, Page:e_events, Icon:\"icon-credit-card\")",
            "Type": "menu"
        },
        {
            "Name": "e_create_event",
            "Trans": "{\"en\": \"Create event\", \"ru\": \"Создать мероприятие\"}",
            "Type": "languages"
        },
        {
            "Name": "e_distribution_flyers",
            "Trans": "{\"en\": \"Distribution flyers\", \"ru\": \"Распространение листовок\"}",
            "Type": "languages"
        },
        {
            "Name": "e_event_address",
            "Trans": "{\"en\": \"Event address\", \"ru\": \"Адрес мероприятия\"}",
            "Type": "languages"
        },
        {
            "Name": "e_events",
            "Trans": "{\"en\": \"Events\", \"ru\": \"Мероприятия\"}",
            "Type": "languages"
        },
        {
            "Name": "e_meeting",
            "Trans": "{\"en\": \"Meeting\", \"ru\": \"Митинг\"}",
            "Type": "languages"
        },
        {
            "Name": "e_moskow",
            "Trans": "{\"en\": \"Moskow\", \"ru\": \"Москва\"}",
            "Type": "languages"
        },
        {
            "Name": "e_picket",
            "Trans": "{\"en\": \"Picket\", \"ru\": \"Пикет\"}",
            "Type": "languages"
        },
        {
            "Name": "e_region",
            "Trans": "{\"en\": \"Region\", \"ru\": \"Регион\"}",
            "Type": "languages"
        },
        {
            "Name": "e_responsible",
            "Trans": "{\"en\": \"Responsible\", \"ru\": \"Ответственный\"}",
            "Type": "languages"
        },
        {
            "Name": "e_spb",
            "Trans": "{\"en\": \"Saint-Petersburg\", \"ru\": \"Санкт-Петербург\"}",
            "Type": "languages"
        },
        {
            "Name": "e_starting_date",
            "Trans": "{\"en\": \"Starting date\", \"ru\": \"Дата начала\"}",
            "Type": "languages"
        },
        {
            "Name": "e_type",
            "Trans": "{\"en\": \"Type\", \"ru\": \"Тип\"}",
            "Type": "languages"
        },
        {
            "Name": "e_events",
            "Columns": "[\n    {\n        \"conditions\": \"true\",\n        \"name\": \"name\",\n        \"type\": \"varchar\"\n    },\n    {\n        \"conditions\": \"true\",\n        \"name\": \"description\",\n        \"type\": \"text\"\n    },\n    {\n        \"conditions\": \"true\",\n        \"name\": \"type\",\n        \"type\": \"number\"\n    },\n    {\n        \"conditions\": \"true\",\n        \"name\": \"starting_date\",\n        \"type\": \"number\"\n    },\n    {\n        \"conditions\": \"true\",\n        \"name\": \"region\",\n        \"type\": \"number\"\n    },\n    {\n        \"conditions\": \"true\",\n        \"name\": \"event_address\",\n        \"type\": \"text\"\n    },\n    {\n        \"conditions\": \"true\",\n        \"name\": \"responsible\",\n        \"type\": \"number\"\n    },\n    {\n        \"conditions\": \"false\",\n        \"name\": \"created_at\",\n        \"type\": \"number\"\n    },\n    {\n        \"conditions\": \"true\",\n        \"name\": \"deleted_at\",\n        \"type\": \"number\"\n    }\n]",
            "Permissions": "{\"insert\":\"true\",\"update\":\"true\",\"new_column\":\"true\"}",
            "Type": "tables"
        },
        {
            "Name": "e_regions",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "e_moskow,e_spb",
            "Type": "app_params"
        },
        {
            "Name": "e_types",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "e_meeting,e_picket,e_distribution_flyers",
            "Type": "app_params"
        },
        {
            "Name": "e_event_form",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "SetVar(this_page, e_event_form).(back_page, e_events)\nDBFind(@1applications).Where({ecosystem:#ecosystem_id#, name:\"Events\"}).Columns(\"name,id\").Vars(application)\nAppParam(App: #application_id#, Name:e_regions, Source:regions)\nAppParam(App: #application_id#, Name:e_types, Source:types)\nForm(){\n    If(#Id#>0){\n        Input(Name: Id, Type: hidden, Value: #Id#)\n    }\n    Div(row mb-sm){\n        Div(col-md-4 mt-sm text-right text-bold){\n            LangRes(@1name)\n        }\n        Div(col-md-8 text-left){\n            Input(Name: Name)\n        }\n    }\n    Div(row mb-sm){\n        Div(col-sm-4 mt text-bold text-right){\n            LangRes(@1description)\n        }\n        Div(col-sm-8 text-left){\n            Input(Name: Description, Type: textarea)\n        }\n    }\n    Div(row mb-sm){\n        Div(col-sm-4 mt-sm text-right text-bold){\n            LangRes(e_type)\n        }\n        Div(col-sm-8 text-left){\n            Select(Name: Type, Source: types, NameColumn: name, ValueColumn: id, Value: #Type#)\n        }\n    }\n    Div(row mb-sm){\n        Div(col-sm-4 mt-sm text-right text-bold){\n            LangRes(e_region)\n        }\n        Div(col-sm-8 text-left){\n            Select(Name: Region, Source: regions, NameColumn: name, ValueColumn: id, Value: #Type#)\n        }\n    }\n    Div(row mb-sm){\n        Div(col-sm-4 mt text-bold text-right){\n            LangRes(e_event_address)\n        }\n        Div(col-sm-8 text-left){\n            Input(Name: Description, Type: textarea)\n        }\n    }\n    Div(row mb-sm){\n        Div(col-sm-4 mt text-bold text-right){\n            LangRes(e_responsible)\n        }\n        Div(col-sm-8 text-left){\n            Input(Name: Responsible, Type: number)\n        }\n    }\n    Div(row mb-sm){\n        Div(col-sm-4 mt-sm text-right text-bold){\n            LangRes(e_starting_date)\n        }\n        Div(col-sm-8 text-left){\n            Div(row){\n                Div(col-sm-6){\n                    Input(Name:StartingDate, Type:date)\n                }\n                Div(col-sm-6){\n                    Input(Name:StartingTime, Type:time, Value: \"00:00\")\n                }\n            }\n        }\n    }\n    Button(Body: $@1send$, Class: btn btn-primary pull-right mt, Page: #back_page#, Contract: EEvent)\n    Button(Body: LangRes(@1back), Class: btn btn-default pull-right mt, Page: #back_page#)\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "e_events",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "SetVar(this_page, e_events).(this_table, e_events)\nDBFind(@1applications).Where({ecosystem:#ecosystem_id#, name:\"Events\"}).Columns(\"name,id\").Vars(application)\nInclude(@1pager_header)\n\nSetTitle(\"$e_events$\")\nSetVar(i_can_create_event, 1)\nIf(#i_can_create_event#==1){\n    AddToolButton(Title:$@1create$, Page: e_event_form, Icon: icon-calendar).Popup(Header: $create_event$, Width: \"50\")\n}\n\nIf(And(GetVar(Type)!=\"\",GetVar(Region)!=\"\")){\n    SetVar(where, {type:#Type#, region:#Region#})\n}.ElseIf(GetVar(Type)!=\"\"){\n    SetVar(where, {type:#Type#})\n}.ElseIf(GetVar(Region)!=\"\"){\n    SetVar(where, {region:#Region#})\n}.Else{\n    SetVar(where, {id:{$neq:0}}).(Type,0).(Region,0)\n}\n\nAppParam(App: #application_id#, Name:e_regions, Source:regions, Ecosystem:#ecosystem_id#)\nAppParam(App: #application_id#, Name:e_types, Source:types, Ecosystem:#ecosystem_id#)\nDBFind(#this_table#, src).Where(#where#).Order({\"starting_date\": -1}).Limit(#pager_limit#).Offset(#pager_offset#).Custom(_address){\n    Address(#event_address#)\n}.Custom(_date){\n    If(#starting_date#>0){\n        Span(Class:text-muted, Body:DateTime(#starting_date#, Format: YYYY-MM-DD HH:MI:SS))\n    }\n}.Count(count)\nDiv(fullscreen mh-lg){\n    SetVar(Filter,1)\n    If(#Filter#==1){\n        Form(input-group){\n            Div(row){\n                Div(col-sm-2){\n                    Button(Class: btn btn-default fa fa-filter, Page: #this_page#)\n                }\n                Div(col-sm-4 text-muted){\n                    $e_type$\n                }\n                Div(col-sm-4 text-muted){\n                    $e_region$\n                }\n            }\n            Div(row){\n                Div(col-sm-4 col-sm-offset-2){\n                    Select(Name: Type, Source: types, NameColumn: name, ValueColumn: id, Value: #Type#)\n                }\n                Div(col-sm-4){\n                    Select(Name: Region, Source: regions, NameColumn: name, ValueColumn: id, Value: #Type#)\n\n                }\n                Div(col-sm-2){\n                    Button(Class: btn bg-gray-lighter fa fa-play, Page: #this_page#, PageParams: \"Type=Val(Type),Region=Val(Region)\")\n                }\n            }\n        }\n    }.Else{\n        Button(Class: btn btn-default fa fa-filter, Page: #this_page#, PageParams: \"Filter=1\")\n    }\n    Div(table-responsive){\n        Div(list-group-item mt-lg){\n            If(#count# > 0){\n                Table(src, \"$@1id$=id,$@1name$=name,$@1description$=description,$e_date$=_date,$@1type$=type,$e_region$=region,$@1address$=event_address,$e_responsible$=responsible\")\n            }.Else{\n                Div(Class: text-center h4 text-muted, Body: \"$e_events$ $@1not_founded$\")\n            }\n        }.Style(\n            tbody > tr:nth-of-type(odd) {\n                background-color: #f8f9fc;\n            }\n        )\n    }\n}\nDiv(mt-sm ml-lg mr-sm mb-sm){\n    Include(@1pager)\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "EEvent",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract EEvent {\n    data {\n        Id int \"optional\"\n        Name string\n        Description string\n        Type int\n        StartingDate string\n        StartingTime string\n        Region int\n        EventAddress string\n        Responsible int\n    }\n\n    func dateAddTime(d, t string) string {\n        var dt string\n        if Contains(d, \"T00:00:00Z\") {\n            d = Replace(d, \"T00:00:00Z\", \"\")\n        }\n        if Size(t) == 5 {\n            dt = Sprintf(\"%v %v:00\", d, t)\n        }\n        return dt\n    }\n    conditions{\n        if $Id > 0 {\n            if !DBFind(\"e_events\").WhereId($Id).Row(){\n                error \"Event not founded\"\n            }\n        }\n        $date = UnixDateTime(dateAddTime($StartingDate, $StartingTime))\n        if $date == 0 {\n            error \"Invalid date\"\n        }\n    }\n\n    action {\n        var m map\n        m = {description:$Description, type:$Type, starting_date:$date, region:$Region, event_address:$EventAddress, responsible:$Responsible}\n        if $Id > 0 {\n            DBUpdate(\"e_events\", $Id, m)\n        }else{\n            m[\"created_at\"] = $block_time\n            DBInsert(\"e_events\", m)\n        }\n    }\n}\n",
            "Type": "contracts"
        }
    ]
}