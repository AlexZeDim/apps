contract TaTransferAdmin {
    data {
        WalletId int
        Amount string
        CurrencyType int
        AmountApl money
        TransferredDate string
        TransferredTime string
    }
    func getRoleId(name string) int{
        var rid int
        rid = Int(EcosysParam(name))
        if rid == 0{
            warning Sprintf(LangRes("@1role_not_set_application_parameter", "en"), name)
        }
        return rid
    }
    func trimZeroTime(s string) string {
        if Contains(s, "T00:00:00Z") {
            s = s Replace(s, "T00:00:00Z", "")
        }
        return s
    }
    func dateAddTime(d, t string) string {
        var dt string
        if Size(t) == 5 {
            dt = Sprintf("%v %v:00", trimZeroTime(d), t)
        }
        return dt
    }
    conditions{
        $WAITING_MANAGER = 1
        $WAITING_SELLER = 2
        $FINISHED = 3
        $REJECTED = 4
        if $AmountApl <= 0{
            warning "invalid amount APL"
        }
        if $Amount <= 0.0{
            warning "invalid amount"
        }

        $transferredAt = UnixDateTime(dateAddTime($TransferredDate, $TransferredTime))
        if $transferredAt == 0 {
            warning "invalid transfer datetime"
        }
        $appId = Int(DBFind("@1applications").Where({ecosystem:$ecosystem_id, name:"Tokens sale"}).One("id"))
        if $appId == 0{
            warning LangRes("@1app_not_found", "en")
        }
        $roleAplManager = getRoleId("role_sale_apl_manager")
        $currentRole = getRoleId("role_sale_apl_admin")
        if !RoleAccess($currentRole){
            warning "this action allowed only for role id #" + $currentRole
        }

        $wallet = DBFind("wallets").Where({id:$WalletId}).Row()
        if !$wallet{
            warning "Buyer wallet not found"
        }
        if $CurrencyType <= 0 || $CurrencyType > 3{
            warning "Invalid Currency Type"
        }
    }

    action {
        var sale map saleId int
        sale["key_id_buyer"] = $wallet["key_id_buyer"]
        sale["currency_type"] = $CurrencyType
        sale["amount"] = $Amount
        sale["amount_apl"] = $AmountApl
        sale["key_id_sale_apl_admin"] = $key_id
        sale["created_at"] = $time
        sale["buyer_transferred_at"] = $transferredAt
        sale["status"] = $WAITING_MANAGER

        saleId = DBInsert("sales", sale)

        // role Apla sales manager notification
        var params map title page string
        title = Sprintf("Check sale id %v", saleId)
        page = "ts_transfer_manager"
        params["sale_id"] = saleId
        @1NotificationsSend("rid,sender,text_header,page_name,params_map,closure_type,current_role_id", $roleAplManager, 2, title, page, params, 1, $currentRole)

    }
}