{
    "name": "Power of attorney",
    "data": [
        {
            "Name": "PoaParamsTokensTransfer",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "Div(mb row){\n    Div(col-sm-4 mt-sm){\n        LangRes(amount_max)\n        Input(Name: Params, Value: amount_max, Type:hidden)\n    }\n    Div(col-sm-6){\n        Input(Name: Values)\n    }\n    Div(col-sm-2){\n        Button(Class: fa fa-trash btn btn-link, PageParams: \"Id=#Id#,current_index=#current_index#\", Page: #this_page#, Contract: PoaParamDelete, Params: \"Id=#Id#,Param=#key#\")\n    }\n}\nDiv(mb row){\n    Div(col-sm-4 mt-sm){\n        LangRes(amount_max_day)\n        Input(Name: Params, Value: amount_max_day, Type:hidden)\n    }\n    Div(col-sm-6){\n        Input(Name: Values)\n    }\n    Div(col-sm-2){\n        Button(Class: fa fa-trash btn btn-link, PageParams: \"Id=#Id#,current_index=#current_index#\", Page: #this_page#, Contract: PoaParamDelete, Params: \"Id=#Id#,Param=#key#\")\n    }\n}\nDiv(mb row){\n    Div(col-sm-4 mt-sm){\n        LangRes(amount_max_month)\n        Input(Name: Params, Value: amount_max_month, Type:hidden)\n    }\n    Div(col-sm-6){\n        Input(Name: Values)\n    }\n    Div(col-sm-2){\n        Button(Class: fa fa-trash btn btn-link, PageParams: \"Id=#Id#,current_index=#current_index#\", Page: #this_page#, Contract: PoaParamDelete, Params: \"Id=#Id#,Param=#key#\")\n    }\n}",
            "Type": "blocks"
        },
        {
            "Name": "PoaTokensTransfer",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "DBFind(power_of_attorney,src_poa).Where({key_id_attorney:#key_id#, deleted:0}).Columns(\"address\").Count(poa_count).Custom(_id){\n    #address#\n}.Custom(_name){\n    DBFind(keys).WhereId(#address#).Columns(\"amount\").Vars(key)\n    Address(#address#) (#key_amount#)\n}\nIf(GetVar(this_page)==\"\"){\n    SetVar(this_page,\"profile_view\")\n}\nIf(#poa_count#>0){\n    Div(list-group-item mb){\n        Div(text-center text-bold h4 m0){\n            LangRes(poa_tokens_transfer)\n        }\n        Div(form-group){\n            Div(row){\n                Div(col-md-12 text-center){\n                    Div(text-muted m0 h5){\n                        LangRes(tokens)\n                    }\n                    Strong(Class: h5, Body: Money(#key_amount#) APL)\n                }\n            }\n            Div(row){\n                Div(col-md-12 mt-lg text-center){\n                    Div(text-muted m0 h5){\n                        LangRes(wallet_address)\n                    }\n                    Span(Class: h5, Body: Address(#member_id#))\n                }\n            }\n        }\n        Div(text-center){\n            Div(row){\n                Div(col-md-3 mt-sm text-right){\n                    Strong(Class: h6, Body: LangRes(recipient))\n                }\n                Div(col-md-9 mb-sm text-left){\n                    Input(Name: Recipient_Account, Placeholder: \"xxxx-xxxx-xxxx-xxxx-xxxx\")\n                }\n            }\n            Div(row){\n                Div(col-md-3 mt-sm text-right){\n                    Strong(Class: h6, Body: LangRes(amount))\n                }\n                Div(col-md-9 text-left){\n                    Input(Name: Amount, Type: Number)\n                }\n            }\n        }\n        Div(row){\n            Div(col-md-12 text-right){\n                Button(Body: LangRes(poa_send_tokens), Class: btn btn-default, Page: #this_page#, Contract: PoaTokensTransferWrapper).Alert(Text: $want_send_tokens$, ConfirmButton: $yes$, CancelButton: $no$, Icon: question)\n            }\n        }\n    }\n}",
            "Type": "blocks"
        },
        {
            "Name": "admin_menu",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "MenuItem(Title:$poa_list$, Page:poa_list_admin, Icon:\"icon-list\")",
            "Type": "menu"
        },
        {
            "Name": "default_menu",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "MenuItem(Title:$poa_list$, Page:poa_list, Icon:\"icon-list\")",
            "Type": "menu"
        },
        {
            "Name": "power_of_attorney",
            "Columns": "[\n    {\n        \"conditions\": \"true\",\n        \"name\": \"params\",\n        \"type\": \"json\"\n    },\n    {\n        \"conditions\": \"true\",\n        \"name\": \"address\",\n        \"type\": \"varchar\"\n    },\n    {\n        \"conditions\": \"true\",\n        \"name\": \"date_expiration\",\n        \"type\": \"varchar\"\n    },\n    {\n        \"conditions\": \"true\",\n        \"name\": \"key_id_attorney\",\n        \"type\": \"varchar\"\n    },\n    {\n        \"conditions\": \"true\",\n        \"name\": \"date_last_transaction\",\n        \"type\": \"varchar\"\n    },\n    {\n        \"conditions\": \"true\",\n        \"name\": \"rid\",\n        \"type\": \"varchar\"\n    },\n    {\n        \"conditions\": \"true\",\n        \"name\": \"type\",\n        \"type\": \"varchar\"\n    },\n    {\n        \"conditions\": \"true\",\n        \"name\": \"deleted\",\n        \"type\": \"varchar\"\n    },\n    {\n        \"conditions\": \"true\",\n        \"name\": \"contract\",\n        \"type\": \"varchar\"\n    }\n]",
            "Permissions": "{\"insert\": \"ContractAccess(\\\"PoaStore\\\")\", \"update\": \"ContractAccess(\\\"PoaStore\\\",\\\"PoaDelete\\\", \\\"PoaTokensTransferWrapper\\\")\", \"new_column\": \"ContractConditions(\\\"MainCondition\\\")\"}",
            "Type": "tables"
        },
        {
            "Name": "attorney_contracts",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "TokensTransfer",
            "Type": "app_params"
        },
        {
            "Name": "poa_list",
            "Conditions": "true",
            "Value": "SetTitle($poa_list$)\nAddToolButton(Page: poa_store, Title:$poa_add$)\n\nDBFind(power_of_attorney, src_attorney).Where({address:#key_id#, deleted:0}).Count(attorney_count).Custom(_date_expiration){\n    If(#date_expiration#>0){\n        DateTime(#date_expiration#,\"YYYY-MM-DD\")\n    }.Else{\n        LangRes(poa_unlimited)\n    }\n}.Custom(_action){\n    Div(text-right){\n        Button(Body: View, Class: btn btn-primary, Page: poa_view, PageParams: \"Id=#id#\")\n    }\n}.Custom(_key_id_attorney){\n    LinkPage(Body: Address(#key_id_attorney#), Page: profile_view, PageParams: \"v_member_id=#key_id_attorney#\")\n}\n\nDiv(content-wrapper){\n    Form(panel panel-primary){\n        Div(panel-body){\n            If(#attorney_count#>0){\n                Div(table-responsive){\n                    Table(src_attorney, \"Contract=contract,Attorney=_key_id_attorney,Expiration date=_date_expiration,=_action\")\n                }\n            }.Else{\n                Div(h3 text-center){\n                    $not_found$\n                }\n            }\n        }\n    }\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "poa_list_admin",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "SetTitle($poa_list$)\nSetVar(this_page,poa_list_admin)\nSetVar(where,{id:{\"$gt\":0}})\nIf(GetVar(Search)!=\"\"){\n    If(GetVar(SearchFor)!=\"\"){\n        SetVar(where,{#SearchFor#:{\"$like\":#Search#}})\n    }\n}.Else{\n    SetVar(Search,).(SearchFor,)\n}\nSetVar(order,{deleted:\"-1\", id:\"1\"})\nIf(GetVar(Order)==\"\"){\n    SetVar(Order,)\n}\nIf(GetVar(Dir)==\"\"){\n    SetVar(Dir,\"1\")\n}\nIf(GetVar(Order)!=\"\"){\n    If(#Order#==#O2#){\n        If(#Dir#>0){\n            SetVar(Dir,-1)\n        }.Else{\n            SetVar(Dir,1)\n        }\n    }\n    SetVar(order,{#Order#:#Dir#})\n}\n\nData(src_select, \"id,name\"){\n    ,\"for ...\"\n    address,\"Address\"\n    key_id_attorney,\"Attorney\"\n    contract,\"Contract\"\n}\nData(src_order, \"id,name\"){\n    ,\"Order by ...\"\n    deleted,\"Deleted\"\n    address,\"Address\"\n    key_id_attorney,\"Attorney\"\n    contract,\"Contract\"\n    date_expiration,\"Expiration date\"\n}\n\nDBFind(power_of_attorney, src_attorney).Where(#where#).Order(#order#).Count(attorney_count).Custom(_date_expiration){\n    SetVar(DeletedClass,)\n    If(#deleted#>0){\n        SetVar(DeletedClass,\"text-muted\")\n    }\n    Div(#DeletedClass#){\n        If(#date_expiration#>0){\n            DateTime(#date_expiration#,\"YYYY-MM-DD\")\n        }.Else{\n            LangRes(poa_unlimited)\n        }\n    }\n}.Custom(_action){\n    Div(text-right #DeletedClass#){\n        Button(Class: btn btn-primary icon-eye, Page: poa_view, PageParams: \"back_page=#this_page#,Id=#id#\")\n    }\n}.Custom(_key_id_attorney){\n    Div(#DeletedClass#){\n        LinkPage(Body: #key_id_attorney#, Page: profile_view, PageParams: \"back_page=#this_page#,v_member_id=#key_id_attorney#\")\n    }\n}.Custom(_address){\n    Div(#DeletedClass#){\n        LinkPage(Body: #address#, Page: profile_view, PageParams: \"back_page=#this_page#,v_member_id=#address#\")\n    }\n}.Custom(_deleted){\n    Div(#DeletedClass#){\n        If(#deleted#>0){\n            DateTime(#deleted#,\"YYYY-MM-DD HH:MI\")\n        }\n    }\n}.Custom(_contract){\n    Div(#DeletedClass#){\n        #contract#\n    }\n}\n\nDiv(content-wrapper){\n    Form(input-group mb){\n        Div(input-group-addon){\n            LangRes(search)\n        }\n        Div(flex){\n            Input(Name:Search)\n            Select(Name:SearchFor, Source: src_select, NameColumn: name, ValueColumn: id)\n        }\n        Div(input-group-btn){\n            Button(Class: btn btn-primary icon-magnifier, Page: poa_list_admin, PageParams: \"Search=Val(Search),SearchFor=Val(SearchFor),Order=#Order#,O2=#O2#,Dir=#Dir#\")\n            If(GetVar(Search)!=\"\"){\n                Button(Class: btn btn-default icon-close, Page: poa_list_admin)\n            }\n        }\n        Div(flex ml-lg){\n            Select(Name:Order, Source: src_order, NameColumn: name, ValueColumn: id)\n        }\n        Div(input-group-btn){\n            If(#Dir#>0){\n                Button(Class: btn btn-primary fa fa-sort-amount-desc, Page: poa_list_admin, PageParams: \"Search=#Search#,SearchFor=#SearchFor#,Order=Val(Order),O2=#Order#,Dir=1\")\n            }.Else{\n                Button(Class: btn btn-primary fa fa-sort-amount-asc, Page: poa_list_admin, PageParams: \"Search=#Search#,SearchFor=#SearchFor#,Order=Val(Order),O2=#Order#,Dir=-1\")\n            }\n        }\n    }.Style(\n        max-width: 800px;\n        .flex {\n            display:flex;\n        }\n        input {\n            padding: 6px;\n        }\n    )\n    Form(panel panel-primary){\n        Div(panel-body){\n            If(#attorney_count#>0){\n                Div(table-responsive){\n                    Table(src_attorney, \"Contract=_contract,Address=_address,Attorney=_key_id_attorney,Expiration date=_date_expiration,Deleted=_deleted,=_action\")\n                }\n            }.Else{\n                Div(h3 text-center){\n                    $not_found$\n                }\n            }\n        }\n    }\n}\nIf(){\n    TODO: Доверенность может быть отозвана (del):\n    1. на странице владельца кошелька, на который выписана доверенность\n    2. в списке доверенностей\n    2. на странице кошелька пользователя с доверенностью (кнопка \"Delete my power of attorney\")\n}",
            "Menu": "admin_menu",
            "Type": "pages"
        },
        {
            "Name": "poa_popup",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "DBFind(applications).Columns(\"name,id\").Where({name:\"Power of attorney\"}).Vars(application)\nAppParam(App:#application_id#, Name: attorney_contracts, Source: src_contracts)\nSetVar(this_page,poa_popup)\nIf(GetVar(back_page)==\"\"){\n    SetVar(back_page,poa_store)\n}\nForm(){\n    If(#Select#==\"contract\"){\n        Div(row){\n            Div(col-sm-4 text-right){\n                Label(LangRes(poa_contract))\n            }\n            Div(col-sm-8 text-left){\n                Select(Name: Name, Source: src_contracts, NameColumn: name, ValueColumn: name)\n            }\n        }\n        Div(){\n            Button(Body: LangRes(back), Class: btn btn-default, Page: #back_page#)\n            Button(Body: LangRes(done), Class: btn btn-primary pull-right, Page: #back_page#, PageParams: \"poa_contract=Val(Name)\")\n        }\n    }\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "poa_store",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "DBFind(applications).Columns(\"name,id\").Where({name:\"Power of attorney\"}).Vars(application)\nAppParam(App:#application_id#, Name: attorney_contracts, Source: src_contracts)\nDBFind(roles, src_roles)\nDBFind(keys, src_keys).Where({id:{\"$neq\":#key_id#}}).Custom(_name){\n    DBFind(members).WhereId(#id#).Columns(\"member_name\").Vars(member)\n    If(Or(#member_id#>0,#member_id#<0)){\n        #id# (#member_member_name#)\n    }.Else{\n        #id# (Address(#id#))\n    }\n\n}\n\n\nSetVar(this_page,poa_store)\n\nSetTitle($poa_add$)\nIf(GetVar(poa_contract)==\"\"){\n    SetVar(poa_contract,)\n}\nIf(GetVar(poa_date_expiration)!=\"\"){\n    SetVar(poa_date_expiration, DateTime(#poa_date_expiration#, \"YYYY-MM-DD\"))\n}.Else{\n    SetVar(poa_date_expiration,)\n}\nSetVar(poa_params,).(poa_role_id_attorney,).(poa_key_id_attorney,#key_id#)\nIf(#Id#>0){\n    SetTitle($poa_edit$)\n    DBFind(power_of_attorney).WhereId(#Id#).Vars(poa)\n    JsonToSource(src_params, #poa_params#)\n}.Else{\n    SetVar(Id,0)\n}\n\nDiv(content-wrapper){\n    Div(breadcrumb){\n        LinkPage(Body: $poa_list$, Page: poa_list)\n        Span(/, mh)\n        Span(#this_page#, text-muted)\n    }\n    Div(row){\n        Div(col-sm-8 col-sm-offset-2 col-lg-6 col-lg-offset-3){\n            Form(panel panel-primary){\n                Div(panel-heading){\n                    LangRes(poa_issue)\n                }\n                Div(panel-body){\n                    If(){\n                        Div(form-group){\n                            Div(row){\n                                Div(col-sm-4 text-right mt-sm){\n                                    Label(LangRes(role))\n                                }\n                                Div(col-sm-8 text-left){\n                                    Select(Name: RoleId, Source: src_roles, NameColumn: role_name, ValueColumn: id, Value: #poa_role_id_attorney#)\n                                }\n                            }\n                        }\n                    }\n                    Div(form-group){\n                        Div(row){\n                            Div(col-sm-4 text-right mt-sm){\n                                Label(LangRes(poa_key_id_attorney))\n                            }\n                            Div(col-sm-8 text-left){\n                                Select(Name: MemberId, Source: src_keys, NameColumn: _name, ValueColumn: id, Value: #poa_key_id_attorney#)\n                            }\n                        }\n                    }\n                    Div(form-group){\n                        Div(row){\n                            Div(col-sm-4 text-right mt-sm){\n                                Label(LangRes(poa_contract))\n                            }\n                            Div(col-sm-8 clearfix){\n                                Div(pull-left mt-sm){\n                                    #poa_contract#\n                                    Input(Name: NameContract, Value:#poa_contract#, Type:hidden)\n                                }\n                                Div(pull-right){\n                                    Button(Body: LangRes(poa_contract_select), Class: btn btn-default, Page: poa_popup, PageParams: \"Select=contract\").Popup(50, $poa_contract_select$)\n                                }\n                            }\n                        }\n                    }\n                    Div(form-group){\n                        Div(row){\n                            Div(col-sm-4 text-right mt-sm){\n                                Label(LangRes(expiration_date))\n                            }\n                            Div(col-sm-8 text-left){\n                                Input(Name: ExpireAt, Type:date, Value: #poa_date_expiration#)\n                            }\n                        }\n                    }\n                    If(GetVar(current_index)==\"\"){\n                        SetVar(current_index,0)\n                    }\n                    SetVar(prev_index, Calculate(#current_index#-1))\n                    SetVar(next_index, Calculate(#current_index#+1))\n                    SetVar(hidden,\"hidden\")\n                    If(#current_index#>0){\n                        SetVar(hidden,)\n                    }\n                    Div(list-group-item){\n                        Div(clearfix){\n                            Div(h4 pull-left){\n                                LangRes(poa_params)\n                            }\n                            Div(pull-right){\n                                Button(Class: fa fa-minus btn btn-default #hidden#, Page: #this_page#, PageParams: \"Id=#Id#,current_index=#prev_index#\")\n                                LinkPage(Class:fa fa-plus btn btn-info, Page: #this_page#, PageParams: \"Id=#Id#,current_index=#next_index#\")\n                            }\n                        }\n                        If(#Id#>0){\n                            ForList(src_params){\n                                Div(mb row){\n                                    Div(col-sm-4){\n                                        Input(Name: Params, Value: #key#)\n                                    }\n                                    Div(col-sm-6){\n                                        Input(Name: Values, Value: #value#)\n                                    }\n                                    Div(col-sm-2){\n                                        Button(Class: fa fa-trash btn btn-link, PageParams: \"Id=#Id#,current_index=#current_index#\", Page: #this_page#, Contract: PoaParamDelete, Params: \"Id=#Id#,Param=#key#\")\n                                    }\n                                }\n                            }\n                        }.Else{\n                            If(#poa_contract#==\"TokensTransfer\"){\n                                Include(PoaParamsTokensTransfer)\n                            }\n                        }\n                        Div(row text-muted text-center #hidden#){\n                            Div(col-sm-4){\n                                Label(LangRes(name))\n                            }\n                            Div(col-sm-6){\n                                Label(LangRes(value))\n                            }\n                        }\n                        Range(params_range, 0, #current_index#)\n                        ForList(params_range){\n                            Div(mb row){\n                                Div(col-sm-4){\n                                    Input(Name: Params)\n                                }\n                                Div(col-sm-6){\n                                    Input(Name: Values)\n                                }\n                            }\n                        }\n                    }\n                }\n                Div(panel-footer text-right){\n                    Button(Body: LangRes(issue), Class: btn btn-primary, Page: poa_list, Contract: PoaStore, Params: \"Id=#Id#,NameContract=#poa_contract#\")\n                }\n            }\n        }\n    }\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "poa_view",
            "Conditions": "true",
            "Value": "If(#notific_id#>0){\r\n    DBFind(notifications).Columns(\"id,page_params->id\").Where(\"id=#notific_id#\").Vars(notific)\r\n    SetVar(Id, #notific_page_params_id#)\r\n}\r\n\r\nSetTitle($poa_view$ ##Id#)\r\nIf(GetVar(back_page)==\"\"){\r\n    SetVar(back_page,poa_list)\r\n}\r\nDBFind(power_of_attorney).WhereId(#Id#).Vars(poa)\r\nJsonToSource(src_params, #poa_params#)\r\nSetVar(params_count,0)\r\nForList(src_params){\r\n    SetVar(params_count,Calculate(#params_count#+1))\r\n}\r\nDiv(content-wrapper){\r\n    Div(breadcrumb){\r\n        LinkPage(Body: $poa_list$, Page: #back_page#)\r\n        Span(/,mh)\r\n        Span($poa_view$, text-muted)\r\n    }\r\n    Form(row){\r\n        Div(col-sm-8 col-sm-offset-2 col-lg-6 col-lg-offset-3){\r\n            Div(panel panel-primary){\r\n                Div(panel-heading){\r\n                    LangRes(poa_info)\r\n                }\r\n                Div(panel-body){\r\n                    Div(row mb){\r\n                        Div(col-sm-4 text-right){\r\n                            Label(LangRes(poa_key_id_attorney))\r\n                        }\r\n                        Div(col-sm-8 text-left){\r\n                            #poa_key_id_attorney#\r\n                        }\r\n                    }\r\n                    Div(row mb){\r\n                        Div(col-sm-4 text-right){\r\n                            Label(LangRes(poa_contract))\r\n                        }\r\n                        Div(col-sm-8 text-left){\r\n                            #poa_contract#\r\n                        }\r\n                    }\r\n                    Div(row mb){\r\n                        Div(col-sm-4 text-right){\r\n                            Label(LangRes(poa_date_expiration))\r\n                        }\r\n                        Div(col-sm-8 text-left){\r\n                            DateTime(#poa_date_expiration#, \"YYYY-MM-DD\")\r\n                        }\r\n                    }\r\n                    If(#params_count#>0){\r\n                        Div(h4){\r\n                            LangRes(poa_params)\r\n                        }\r\n                        Div(row text-muted text-center mt-lg){\r\n                            Div(col-sm-4){\r\n                                Label(LangRes(name))\r\n                            }\r\n                            Div(col-sm-8){\r\n                                Label(LangRes(value))\r\n                            }\r\n                        }\r\n                        ForList(src_params){\r\n                            Div(row text-muted mt-lg){\r\n                                Div(col-sm-3 col-sm-offset-1){\r\n                                    #key#\r\n                                }\r\n                                Div(col-sm-8 text-center){\r\n                                    #value#\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                Div(panel-footer text-left){\r\n                    Button(Body: LangRes(back), Class: btn, Page: #back_page#)\r\n                    Div(pull-right){\r\n                        If(#notific_id#>0){\r\n                            Button(Body: LangRes(informed), Class: btn btn-success, Contract: NotificationsClose, Params: \"notific_id=#notific_id#\")\r\n                        }\r\n                        If(#poa_address#==#key_id#){\r\n                            Button(Body: LangRes(delete), Class: btn btn-danger, Contract: PoaDelete, Params: \"Id=#Id#\", Page: #back_page#).Alert(Text: $sure_want_delete$, ConfirmButton: $yes$, CancelButton: $no$, Icon: question)\r\n                            Button(Body: LangRes(edit), Class: btn btn-primary, Page: poa_store, PageParams: \"Id=#Id#\")\r\n                        }.ElseIf(#poa_key_id_attorney#==#key_id#){\r\n                            Button(Body: LangRes(poa_delete_my_attorney), Class: btn btn-danger, Contract: PoaDelete, Params: \"Id=#Id#\", Page: #back_page#).Alert(Text: $sure_want_delete$, ConfirmButton: $yes$, CancelButton: $no$, Icon: question)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "PoaCondition",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract PoaCondition {\n    data {\n        Name string\n        Wallet int\n    }\n\n    conditions {\n        var attorney map\n        attorney = DBFind(\"power_of_attorney\").Where({deleted:0, \"$or\":[{date_expiration:0}, {\"$gt\":{date_expiration:$time}}], \"contract\":$Name, \"address\":$Wallet, \"$or\":[{key_id_attorney:$key_id}, {rid:$role_id}]}).Row()\n        if !attorney{\n            warning Sprintf(\"You don't have access to wallet %s\", $Wallet)\n        }\n        if attorney[\"date_expiration\"] != 0{\n            if attorney[\"date_expiration\"] < $time{\n                warning \"The power of attorney expired\"\n            }\n        }\n        $result = attorney\n    }\n}",
            "Type": "contracts"
        },
        {
            "Name": "PoaDelete",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract PoaDelete {\n    data {\n        Id int\n    }\n    conditions {\n        if !DBFind(\"power_of_attorney\").Where({id:$Id, \"$or\":[{\"address\":$key_id}, {key_id_attorney:$key_id}], deleted:0}).One(\"id\") {\n            warning \"Power of attorney does not exists\"\n        }\n    }\n    action {\n        DBUpdate(\"power_of_attorney\", $Id, {deleted:$time})\n    }\n}",
            "Type": "contracts"
        },
        {
            "Name": "PoaParamDelete",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract PoaParamDelete {\n    data {\n        Id int\n        Param string\n    }\n    conditions {\n        $attorney = DBFind(\"power_of_attorney\").Where({id:$Id, \"address\":$key_id, deleted:0}).Row()\n        if !$attorney {\n            warning \"Power of attorney does not exists\"\n        }\n    }\n    action {\n        var params newParams map keys array i lenKeys int key string\n        params = JSONDecode($attorney[\"params\"])\n        keys = GetMapKeys(params)\n        lenKeys = Len(keys)\n        while i < lenKeys{\n            key = keys[i]\n            if key != $Param{\n                newParams[key] = params[key]\n            }\n            i = i + 1\n        }\n        DBUpdate(\"power_of_attorney\", $Id, {params:\"{}\"})\n        DBUpdate(\"power_of_attorney\", $Id, {params:newParams})\n    }\n}",
            "Type": "contracts"
        },
        {
            "Name": "PoaStore",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract PoaStore {\n    data {\n        Id string \"optional\"\n        MemberId int\n        NameContract string \"optional\" // manual catch\n        ExpireAt string \"optional\"\n        Params array \"optional\"\n        Values array \"optional\"\n    }\n    func dateAddTime(d string) string {\n        if Size(d) == 10{\n            return d + \" 00:00:00\"\n        }\n        return d\n    }\n    conditions {\n        $Id = Int($Id)\n        if $Id > 0 {\n            if !DBFind(\"power_of_attorney\").Where({id:$Id, \"address\":$key_id, deleted:0}).One(\"id\") {\n                warning \"Power of attorney does not exists\"\n            }\n        }\n        if !DBFind(\"keys\").WhereId($MemberId).One(\"id\") {\n            warning \"Attorney not found\"\n        }\n        Println(\"NameContract\",$NameContract)\n        Println(\"ExpireAt\",$ExpireAt)\n        $ExpireAt = dateAddTime($ExpireAt)\n        if GetContractByName($NameContract) == 0{\n            warning \"Contract for power of attorney not found\"\n        }\n        if Len($Params) > Len($Values) {\n            error \"Incorrect params list\"\n        }\n    }\n    action {\n        // amount_max - максимальная сумма для одноразового перевода\n        // amount_max_day - максимальная сумма для перевода в день\n        // amount_day - переведено в текущий день\n        // date_day - учетный день\n        // amount_max_month - максимальная сумма для перевода в месяц\n        // amount_month переведено в текущий месяц\n        // date_month - учетный месяц\n\n        var params map i id lenKeys int\n        lenKeys = Len($Params)\n        while i < lenKeys {\n            params[$Params[i]] = $Values[i]\n            i = i + 1\n        }\n        var m map\n        m[\"key_id_attorney\"] = $MemberId\n        m[\"contract\"] = $NameContract\n        m[\"date_expiration\"] = UnixDateTime($ExpireAt)\n        m[\"params\"] = JSONEncode(params)\n        if $Id > 0 {\n            DBUpdate(\"power_of_attorney\", $Id, m)\n        }else{\n            m[\"address\"] = $key_id\n            m[\"deleted\"] = 0\n            id = DBInsert(\"power_of_attorney\", m)\n\n            var n map\n            n[\"member_id\"] = $MemberId\n            n[\"sender\"] = 1\n            n[\"text_header\"] = \"You got new power of attorney\"\n            n[\"page_name\"] = \"attorney_add\"\n            n[\"params_map\"] = Sprintf(`{\"id\":\"%v\"}`, id)\n            CallContract(\"NotificationsSend\", n)\n        }\n    }\n}",
            "Type": "contracts"
        },
        {
            "Name": "PoaTokensTransferWrapper",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract PoaTokensTransferWrapper {\n    data {\n        Amount money\n        Sender_AccountId int\n        Recipient_AccountId int\n        Comment string \"optional\"\n    }\n    func checkLimit(num, lim int, s string){\n        if num > lim {\n            warning Sprintf(\"Maximum %v transfer limit exceeded\", s)\n        }\n    }\n    conditions {\n        var attorney ap map\n        if $Sender_AccountId != $key_id{\n            attorney = PoaCondition(\"Name,Wallet\", \"TokensTransfer\", $Sender_AccountId)\n        }\n        ap = JSONDecode(attorney[\"params\"])\n        ap[\"amount_max\"] = Int(ap[\"amount_max\"])\n        ap[\"amount_max_day\"] = Int(ap[\"amount_max_day\"])\n        ap[\"amount_day\"] = Int(ap[\"amount_day\"])\n        ap[\"date_day\"] = Int(ap[\"date_day\"])\n        ap[\"amount_max_month\"] = Int(ap[\"amount_max_month\"])\n        ap[\"amount_month\"] = Int(ap[\"amount_month\"])\n        ap[\"date_month\"] = Int(ap[\"date_month\"])\n\n        var curMonth curDay int bt string\n        bt = BlockTime()\n        curMonth = Int(Substr(bt, 5, 2))\n        curDay = Int(Substr(bt, 8, 2))\n        \n        if ap[\"date_day\"] != curDay {\n            ap[\"amount_day\"] = 0\n        }\n        if ap[\"date_month\"] != curMonth {\n            ap[\"amount_month\"] = 0\n        }\n\n        checkLimit($Amount, ap[\"amount_max\"], \"\")\n        checkLimit($Amount + ap[\"amount_day\"], ap[\"amount_max_day\"], \"day\")\n        checkLimit($Amount + ap[\"amount_month\"], ap[\"amount_max_month\"], \"month\")\n\n        ap[\"amount_day\"] = ap[\"amount_day\"] + $Amount\n        ap[\"amount_month\"] = ap[\"amount_month\"] + $Amount\n        ap[\"date_day\"] = curDay\n        ap[\"date_month\"] = curMonth\n\n        $params = JSONEncode(ap)\n        $id = Int(attorney[\"id\"])\n    }\n\n    action {\n        return\n        TokensTransfer(\"Amount,Sender_AccountId,Recipient_AccountId,Comment\", $Amount, $Sender_AccountId, $Recipient_AccountId, $Comment)\n        DBUpdate(\"power_of_attorney\", $id, {params:$params, date_last_transaction:$time})\n    }\n}",
            "Type": "contracts"
        }
    ]
}