contract Notifications_Roles_Send_New {
    data {
        role_id int
        closure_type int

        icon_name string
        text_header string
        text_body string
        page_name string
        params_val string 
    }

    conditions {
		$assign_id = DBFind("roles_assign").Where("role_id=$ and delete=$", $role_id, 0).One("id")
        if ($assign_id == nil){
			warning "Role does not contain members"
		}
    }

    action {
        //closure_type - Single
        if ($closure_type == 1){
			$role_name = DBFind("roles_list").Where("id=$", $role_id).One("role_name")
		

            //====================================================
            $gloval_application_str = ""

            if ($params_val != ""){
                var myarr array
                myarr = Split($params_val, ",")

                $i_role = 0
                while($i_role < Len(myarr)){
                    var vals_myarr map
                    vals_myarr = myarr[$i_role]

                    if ($params_val != ""){
                        var my_v array
                        my_v = Split(vals_myarr, "=")

                        $vals_name = my_v[0]
                        $vals_value = my_v[1]

                        if(Str($vals_name) == "application_id"){
                            $gloval_application_str = $vals_value
                        }
                    }
                    $i_role = $i_role + 1
                }
            }

            if ($gloval_application_str != ""){
                $notification_id = DBInsert("notifications", "icon,header_text,body_text,page_name,notification_type,role_id,role_name,timestamp date_create,page_params,application_id", 
                    $icon_name, $text_header, $text_body, $page_name, 2, $role_id, $role_name, $block_time, $params_val, Int($gloval_application_str))
            } else {
                $notification_id = DBInsert("notifications", "icon,header_text,body_text,page_name,notification_type,role_id,role_name,timestamp date_create,page_params", 
                    $icon_name, $text_header, $text_body, $page_name, 2, $role_id, $role_name, $block_time, $params_val)
            }
            //====================================================

        } 
		//closure_type - Multiple 
		else {
            $ret_role = DBFind("roles_assign").Columns("member_id").Where("role_id = $ and delete = $", $role_id, 0).Order("id")

            $len_role = Len($ret_role)
            $i_role = 0
            while($i_role < $len_role){
                var vals_role map
                vals_role = $ret_role[$i_role] 

                Notifications_Single_Send("member_id,icon_name,text_header,text_body,page_name,params_val", 
                                vals_role["member_id"], $icon_name, $text_header, $text_body, $page_name, $params_val)

                $i_role = $i_role + 1
            }
        }
    }
}