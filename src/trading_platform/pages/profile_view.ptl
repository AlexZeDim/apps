Div(content-wrapper){
    If(Or(#v_member_id#>0,#v_member_id#<0)){
    }.Else{
        SetVar(Name: v_member_id, Value: #key_id#)
    }
    DBFind(Name: members, Source: src_member).Columns("id,image_id,member_name,name_first,name_middle,name_last,company_name,company_position,member_info->information").Where("id=#v_member_id#").Vars(prefix)
    DBFind(roles).Where("id=#role_id#").Columns("role_name").Vars(r)
    DBFind(applications).Columns("id").Where("name='Trading Platform' AND deleted=0").Vars(application)
    If(Or(#prefix_id#>0,#prefix_id#<0)){
        Div(row){
            Div(Class: col-sm-3 mt-sm text-center){
                If(#prefix_image_id#>0){
                    Image(Src: Binary().ById(#prefix_image_id#)).Style(margin-bottom: 15px; height: 228px; border: 2px solid #cfdbe2;)
                }.Else{
                    Span(Class: fa icon-user fa-5x text-primary).Style(margin-bottom: 15px;)
                }
            }
            Div(Class: col-md-4 mt-sm){
                Div(Class: panel panel-primary) {
                    Div(Class: list-group-item text-center) {
                        Span(Class: h4, Body: Системное имя: #prefix_member_name#)
                    }
                    Div(list-group-item text-left){
                        Div(row){
                            Div(col-md-12 ){
                                P(Class: h5 m0, Body: Имя: #prefix_name_first#)
                                P(Class: h5, Body: Фамилия: #prefix_name_middle#)
                                P(Class: h5, Body: Отчество: #prefix_name_last#)
                                P(Class: h5, Body: Компания: #prefix_company_name#)
                                P(Class: h5, Body: Должность: #prefix_company_position#)
                            }
                        }
                        Div(row){
                            Div(col-md-12 text-center){
                                If(#prefix_id# == #key_id#){
                                    If(#isMobile# == 0){
                                        Button(Class: btn btn-link, Page: profile_edit, Body: Редактировать)
                                    }.Else{
                                        Button(Class: btn btn-default, Page: profile_edit, Body: Редактировать)
                                    }
                                }
                            }
                        }
                    }
                }.Style(height: 228px;)
            }
            Div(Class: col-md-5 mt-sm){
                Div(Class: panel panel-primary){
                    DBFind(Name: roles_participants, Source: src_check).Columns("id").Where("member->member_id='#v_member_id#' and deleted=0").Vars(check)
                    If(#check_id#>0){
                        Div(Class: list-group-item text-center) {
                            Span(Class: h4){
                                If(#r_role_name#=="Seller"){
                                    Текущая роль: Продавец
                                }
                                If(#r_role_name#=="Buyer"){
                                    Текущая роль: Покупатель
                                }
                                If(#r_role_name#=="Admin"){
                                    Текущая роль: Администратор
                                }
                            }
                        }
                        DBFind(Name: keys, Source: src_keys).Where("id=#v_member_id#").Vars(tokens)
                        Div(Class: list-group-item text-left) {
                            Div(row){
                                Div(col-md-12 text-left){
                                    P(Class: h5 m0, Body: Аккаунт: Address(#tokens_id#))
                                    SetVar(dd, Money(#tokens_amount#))
                                    P(Class: h5, Body: Баланс: Calculate(#dd#,money,0))
                                    P(Class: h5, Body: Депозит: Money(#tokens_deposit#))
                                    DBFind(Name: roles_participants, Source: src_roles).Columns("role->id,role->name").Where("member->member_id='#v_member_id#' and deleted=0").Order("id")
                                    ForList(src_roles){
                                        If(#src_roles_index# == 1){
                                            Span(Body: Роли:)
                                        } 
                                        LinkPage(Page: roles_view, PageParams: "v_role_id=#role.id#"){
                                            Span(Class: h5, Body: LangRes(#role.name#)).Style(margin-left: 5px; margin-right: 5px;)
                                        }
                                    }
                                }
                            }
                        }
                    }
                    If(#prefix_id# == #key_id#){
                        Div(Class: list-group-item) {
                            Div(row){
                                Div(col-md-12 text-center){
                                    DBFind(Name: roles_participants, Source: src_roles).Columns("role->id,role->name").Where("member->member_id='#v_member_id#' and deleted=0").Vars(valid)
                                    If(And(#valid_role_name#=="Seller",#valid_role_name#=="Buyer")){
                                    }.Else{
                                        If(#isMobile# == 0){
                                            Button(Class: btn btn-link, Page: platform_role_selection, Body: Подать заявку на роль).Popup(35, Выбор роли)
                                        }.Else{
                                            Button(Class: btn btn-default, Page: platform_role_selection, Body: Подать заявку на роль).Popup(35, Выбор роли)
                                        }
                                    }
                                    If(#isMobile# == 0){
                                        Button(Class: btn btn-link, Page: tokens_transfer, Body: Перевод средств).Popup(50, Укажите адресата)
                                    }.Else{
                                        Button(Class: btn btn-default, Page: tokens_transfer, Body: Перевод средств).Popup(50, Укажите адресата)
                                    }
                                }
                            }
                        }.Style(height: 64px;)
                    }
                }.Style(height: 228px;)
            }
        }
    }.Else{
        Div(row){
            Div(col-sm-8 col-sm-offset-2 col-lg-6 col-lg-offset-3){
                Form(panel panel-primary){
                    Div(list-group-item){
                        P(Class: text-center text-bold h4 m0, Body: LangRes(user_info))
                        Div(panel-body){
                            Div(form-group){
                                Div(row){
                                    Div(col-md-12 mt-sm text-center){
                                        If(Or(#prefix_id#>0,#prefix_id#<0)){
                                            If(#prefix_id# == #key_id#){
                                                Button(Class: btn btn-link, Page: profile_edit, PageParams: "v_member_id=#key_id#"){
                                                    If(#prefix_image_id#>0){
                                                        Image(Src: Binary().ById(#prefix_image_id#), Class: img-circle).Style(width: 80px; border: 1px solid #5A5D63;)
                                                    }.Else{
                                                        Span(Class: fa icon-user fa-5x text-primary)
                                                    }
                                                    Div(m0 h4 text-bold){#prefix_member_name#}
                                                }
                                            }.Else{
                                                If(#prefix_image_id#>0){
                                                    Image(Src: Binary().ById(#prefix_image_id#), Class: img-circle).Style(width: 80px; border: 1px solid #5A5D63;)
                                                }.Else{
                                                    Span(Class: fa icon-user fa-5x)
                                                }
                                                Div(m0 h4 text-bold){#prefix_member_name#}
                                            }
                                            Div(Class: h5 text-muted m0, Body: #prefix_member_info_information#)
                                        }.Else{
                                            Button(Class: btn btn-link, Page: profile_add){
                                                Span(Class: h4 text-bold, Body: LangRes(editing_profile))
                                            }
                                        }
                                    }
                                }
                            }
                            Div(list-group-item text-center){
                                Div(text-muted m0 h5, Body: LangRes(roles))
                                DBFind(Name: roles_participants, Source: src_check).Columns("id").Where("member->member_id='#v_member_id#' and deleted=0").Vars(check)
                                If(#check_id#>0){
                                    DBFind(Name: roles_participants, Source: src_roles).Columns("role->id,role->name").Where("member->member_id='#v_member_id#' and deleted=0").Order("id")
                                    ForList(src_roles){
                                        Span(){
                                            LinkPage(Page: roles_view, PageParams: "v_role_id=#role.id#"){
                                                Span(Class: h5, Body: "#role.name#")
                                            }
                                        }.Style(margin-right: 6px; margin-left: 6px;)
                                    }
                                }.Else{
                                    Span(LangRes(no))
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}