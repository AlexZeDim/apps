Div(content-wrapper){
    DBFind(buffer_data).Columns("value->id").Where("key='avatar' and member_id=#key_id#").Vars(avatar)
    If(#avatar_value_id#>0){
        SetVar(AvatarId,#avatar_value_id#)
    }.Else{
        SetVar(AvatarId,#prefix_image_id#)
    }

    Div(breadcrumb){
        If(#avatar_value_id#>0){
            Button(Body:Профиль, Page: profile_view, Class: btn btn-link p0, Contract:@1buffer_Manager, Params: "Action=clean,Key=avatar")
        }.Else{
            LinkPage(Профиль, profile_view)
        }
        Span(/).Style(margin-right: 10px; margin-left: 10px;)
        Span(Class: text-muted, Body: Редактирование)
    }


    Div(row){
        Div(col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3){
            Form(panel panel-primary){
                Div(panel-heading, Body: Редактирование профиля)
                Div(panel-body){
                Div(list-group-item){
                        Div(row){
                            Div(col-md-3 mt-sm text-right){
                                Label(For: name_middle){
                                    Span(Body: Фамилия)
                                    Span(Class: text-danger, Body:*)
                                }
                            }
                            Div(col-md-9 mc-sm text-left){
                                Input(Name: name_middle).Validate(minLength:3, maxLength:60)
                                InputErr(Name: name_middle, Value: "#prefix_name_middle#" minLength: "Значение не может быть менее 3-х букв!", maxLength: "Значение не может быть более 60-ти букв!")
                            }
                        }
                    }
                    Div(list-group-item){
                        Div(row){
                            Div(col-md-3 mt-sm text-right){
                                Label(For: name_first){
                                    Span(Body: Имя)
                                    Span(Class: text-danger, Body:*)
                                }
                            }
                            Div(col-md-9 mc-sm text-left){
                                Input(Name: name_first).Validate(minLength:3, maxLength:60)
                                InputErr(Name: name_first, Value: "#prefix_name_first#", minLength: "Значение не может быть менее 3-х букв!", maxLength: "Значение не может быть более 60-ти букв!")
                            }
                        }
                    }
                    Div(list-group-item){
                        Div(row){
                            Div(col-md-3 mt-sm text-right){
                                Label(For: name_last){
                                    Span(Body: Отчество)
                                    Span(Class: text-danger, Body:*)
                                }
                            }
                            Div(col-md-9 mc-sm text-left){
                                Input(Name: name_last).Validate(minLength:3, maxLength:60)
                                InputErr(Name: name_last, Value: "#prefix_name_last#", minLength: "Значение не может быть менее 3-х букв!", maxLength: "Значение не может быть более 60-ти букв!")
                            }
                        }
                    }
                    Div(list-group-item){
                        Div(row){
                            Div(col-md-3 mt-sm text-right){
                                Label(For: company_name){
                                    Span(Body: Компания)
                                    Span(Class: text-danger, Body:*)
                                }
                            }
                            Div(col-md-9 mc-sm text-left){
                                Input(Name: company_name).Validate(minLength:3, maxLength:60)
                                InputErr(Name: company_name, Value: "#prefix_company_name#", minLength: "Значение не может быть менее 3-х букв!", maxLength: "Значение не может быть более 60-ти букв!")
                            }
                        }
                    }
                    Div(list-group-item){
                        Div(row){
                            Div(col-md-3 mt-sm text-right){
                                Label(For: company_position){
                                    Span(Body: Должность)
                                    Span(Class: text-danger, Body:*)
                                }
                            }
                            Div(col-md-9 mc-sm text-left){
                                Input(Name: company_position).Validate(minLength:3, maxLength:60)
                                InputErr(Name: company_position, Value: "#prefix_company_position#", minLength: "Значение не может быть менее 3-х букв!", maxLength: "Значение не может быть более 60-ти букв!")
                            }
                        }
                    }
                    Div(list-group-item){
                        Div(row){
                            Div(col-md-3 mt-sm text-right){
                                Label(For: member_name){
                                    Span(Body: Системное имя)
                                    Span(Class: text-danger, Body:*)
                                }
                            }
                            Div(col-md-9 mc-sm text-left){
                                If(Or(#prefix_id#>0,#prefix_id#<0)){
                                    Input(Name: member_name, Value: #prefix_member_name#, Disabled: true)
                                }.Else{
                                    Input(Name: member_name).Validate(minLength:5, maxLength:20)
                                    InputErr(Name: member_name, minLength: "Значение не может быть менее 5-ти букв!", maxLength: "Значение не может быть более 20-ти букв!")
                                }
                            }
                        }
                    }
                    Div(list-group-item){
                        Div(row){
                            Div(col-md-3 mt-sm text-right){
                                Strong(Аватар)
                            }
                            Div(col-md-9 mc-sm text-left){
                                If(#AvatarId#>0){
                                    Image(Src:Binary().ById(#AvatarId#), Class: big_photo)
                                }
                                Div(mt-sm){
                                    If(#AvatarId#>0){
                                        Button(Body: "Загрузить новый аватар", Page: profile_upload_photo, PageParams: "From=add", Class: btn btn-link p0).Popup(45, "Загрузка изображения")
                                    }.Else{
                                        Button(Body: "Загрузить аватар", Page:  profile_upload_photo, PageParams: "From=add", Class: btn btn-link p0).Popup(45, "Загрузка изображения")
                                    }
                                }
                            }
                        }
                    }
                    Div(list-group-item){
                        Div(row){
                            Div(col-md-3 mt-lg text-right){
                                Label(For: information){
                                    Span(Body: Информация)
                                }
                            }
                            Div(col-md-9 mc-sm text-left){
                                If(GetVar(prefix_member_info_information)){
                                    Input(Name: information, Type: textarea, Value: #prefix_member_info_information#)
                                }.Else{
                                    Input(Name: information, Type: textarea)
                                }
                            }
                        }
                    }
                }
                Div(panel-footer text-right){
                    Button(Body: Отправить, Class: btn btn-primary, Contract: Profile_Edit, Page: profile_view, Params: "ismobile=#isMobile#,member_id=#key_id#,image_id=#AvatarId#").Alert(Text: Хотите внести изменения?, ConfirmButton: Да, CancelButton: Нет, Icon: question)
                }
            }
        }
    }
}.Style(
    .big_photo {height: 300px; max-width: 100%;}
)