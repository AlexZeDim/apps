contract lots_SellerAction {
    data {
        Action string
        Id string "optional"
        TypeId int
        Name string
        Description string
        Photo bytes "file"
        DateStart string "date"
        TimeStart string "date"
        DateEnd string "date"
        TimeEnd string "date"
        TypeBargain int
        AmountStarting money
        OrderMin string "optional"
        OrderMax string "optional"

        Location string
        Condition int

        Count int
        Weight string "optional"
        WeightType string "optional"
        Length string "optional"
        Width string "optional"
        Height string "optional"
    }
    func trimZeroTime(s string) string{
        if Contains(s, "T00:00:00Z"){
            s = s Replace(s, "T00:00:00Z", "")
        }
        return s
    }
    func appendAll(items ...)array{
        return items
    }
    func safeFloat(s string)float{
        if s > 0 || s < 0{
            return Float(s)
        }
        return 0.0
    }
    func notifyAdmin(lotId int){
        var rid closureType sender int textHeader pageName string params map
        closureType = 2
        sender = 1
        textHeader = "Новый лот: требуется подтверждение"
        pageName = "lots_view"
        params["lot_id"] = lotId
        params["lot_status"] = 0
        params = JSONEncode(params)
        rid = 1
        notifications_Send("rid,closure_type,sender,text_header,page_name,params_map", rid, closureType, sender, textHeader, pageName, params)
    }
    conditions {
        $OrderMin = Money($OrderMin)
        $OrderMax = Money($OrderMax)
        if $TypeBargain == 1 {
            if $OrderMin == 0 {
                info("Минимальная ставка не указана")
            }
            if $OrderMax == 0 {
                info("Максимальная ставка не указана")
            }
        }
        $Id = Int($Id)
        if !($Action == "create" || $Action == "edit") {
            warning "Lot: unknown action"
        }
        if $Action == "create" {
            RoleConditions("role", "Seller")
        }else{
            $lot = DBFind("lots").Where("id=? and deleted=0", $Id).Row()

            if !$lot {
                warning "Lot not found"
            }
            if $lot["status"] > 0 {
                warning "You cannot edit a confirmed lot"
            }
            if $lot["seller"] != $key_id {
                warning "You are not owner of the lot"
            }

        }

        $mapLocation = JSONDecode($Location)
        $Location = $mapLocation["address"]
        $Weight = safeFloat($Weight)
        $WeightType = Int($WeightType)
        $Length = safeFloat($Length)
        $Width = safeFloat($Width)
        $Height = safeFloat($Height)

        if $OrderMin > $OrderMax {
            warning "Минимальная ставка больше максимальной"
        }
        $dateStart = Sprintf("%v %v", trimZeroTime($DateStart), $TimeStart)
        $dateEnd = Sprintf("%v %v", trimZeroTime($DateEnd), $TimeEnd)
        $catId = Int(DBFind("lots_types").Where("id=?", $TypeId).One("category"))
    }

    action {
        var appId imageId contractFileId int imageName string
        appId = Int(DBFind("applications").Where("name = $ AND deleted = 0", "Trading Platform").One("id"))
        imageName = Sprintf("%v_%v", $key_id, $time)
        if $Id > 0 {
            imageName = DBFind("binaries").Where("id=?", $lot["photo"]).One("name")
        }
        imageId = @1UploadBinary("ApplicationId,Name,Data", appId, imageName, $Photo)

        var fields string args array id int
        if $TypeBargain == 1 {
            args = appendAll($Name, $Description, imageId, $dateStart, $dateEnd, $AmountStarting, $OrderMin, $OrderMax, contractFileId, $Count, $Weight, $WeightType, $Length, $Width, $Height, $TypeId, $catId, $Location, $Condition, $TypeBargain,$mapLocation)
            fields = "name,description,photo,date_start,date_end,amount_starting,order_min,order_max,contract_id,unit_count,weight_decimal,weight_type,length_decimal,width_decimal,height_decimal,lots_type_id,category,location,condition,type_bargain,map_location"
        }
        if $TypeBargain == 2 {
            args = appendAll($Name, $Description, imageId, $dateStart, $dateEnd, $AmountStarting, contractFileId, $Count, $Weight, $WeightType, $Length, $Width, $Height, $TypeId, $catId, $Location, $Condition, $TypeBargain,$mapLocation)
            fields = "name,description,photo,date_start,date_end,amount_starting,contract_id,unit_count,weight_decimal,weight_type,length_decimal,width_decimal,height_decimal,lots_type_id,category,location,condition,type_bargain,map_location"
        }
        if $Action == "create"{
            fields = Sprintf("%v,timestamp date_creation,seller", fields)
            args = Append(args,$block_time)
            args = Append(args,$key_id)
            id = DBInsert("lots", fields, args...)
            notifyAdmin(id)
            return
        }
        if $Action == "edit"{
            DBUpdate("lots", $Id, fields, args...)
            return
        }
    }
}