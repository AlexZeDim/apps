contract lots_Sign {
    data {
        lot_id int
        actions string
        notific_id string "optional"
    }
    conditions {
        $notific_id = Int($notific_id)
        $lot = DBFind("lots").Where("id=?", $lot_id).Row()
        if !$lot {
            warning "Не удается подписать контракт: лот не найден"
        }
        if $lot["status"] != 3 {
            warning "Не удается подписать контракт: контракт уже подписан"
        }
        $user = DBFind("keys").WhereId($key_id).Row()
        $lot = JSONDecode(JSONEncode($lot))
    }
    func storeHistory(id int){
        var vars map
        vars["lot_id"] = $lot_id
        vars["actions"] = $actions
        vars["notific_id"] = $notific_id
        DBInsert("lots_blocks", "block_id,block_time,txhash,contract_name,contract_params,lot_id", $block, $block_time, Sprintf("%x", $txhash), $this_contract, vars, id)
    }
    action {
        var params map
        params["lot_id"] = $lot_id

        if $actions == "buyer_accept" {
            if $lot["buyer"] == $key_id {
                //info($lot["type_bargain"])
                notifications_Send("member_id,sender,text_header,page_name,params_map", $lot["seller"], 1, "Покупатель подписал контракт", "lots_view_contract", JSONEncode(params))
                var buyer map
                buyer = DBFind("buyers").Columns("id,amount,buyer_id").Where("lot_id=? and buyer_id=? and status != -1", $lot_id, $lot["buyer"]).Order("amount DESC").Row()
                DBUpdate("buyers", Int(buyer["id"]), "status", 1)
                
                DBUpdate("keys", Int($lot["seller"]), "+amount", buyer["amount"])
                DBUpdate("keys", Int($lot["buyer"]), "-amount", buyer["amount"])
                
                if $lot["type_bargain"] == 2 {
                    DBUpdate("keys", Int(buyer["buyer_id"]), "-deposit", buyer["amount"])
                }
                if $lot["type_bargain"] == 1 {
                    var buyers array i int
                    buyers = DBFind("buyers").Columns("id,amount,buyer_id").Where("lot_id=?", $lot_id)
                    while i < Len(buyers) {
                        var buyer map
                        buyer = buyers[i]
                        $dep_check = DBFind("dep_user_list").Where("lot_id=$ and member_id=$",$lot_id,buyer["buyer_id"]).Row()
                        DBUpdate("keys",Int($dep_check["member_id"]),"-deposit",$dep_check["amount"])
                        DBUpdate("dep_user_list",Int($dep_check["id"]),"amount",0)
                        i = i + 1
                    }
                }
                var contract_hash string
                contract_hash = Sha256($lot["contract_text"])
                $lot["contract_text"] = Sprintf("%v \n Подпись покупателя: %v \n Дата подписания: %v", $lot["contract_text"], Sha256($user["pub"]), " ")
                $lot["contract_text"] = Sprintf("%v \n [%v]", $lot["contract_text"], contract_hash)
                DBUpdate("lots", $lot_id, "status,contract_text,contract_hash,buyer_sign,buyer_pub,timestamp date_sign", 4, $lot["contract_text"], contract_hash, 1, Sha256($user["pub"]), $time)
            }
        }
        if $actions == "buyer_reject" {
            if $lot["buyer"] == $key_id {
                if $lot["type_bargain"] == 2 {
                    var buyer map
				    buyer = DBFind("buyers").Columns("id,amount,buyer_id").Where("lot_id=? and buyer_id=? and status != -1", $lot_id, $lot["buyer"]).Order("amount DESC").Row()
                    DBUpdate("keys", Int(buyer["buyer_id"]), "-deposit", buyer["amount"])
                }
                if $lot["type_bargain"] == 1 {
                    var buyer map
                    buyer = DBFind("buyers").Columns("id,amount,buyer_id").Where("lot_id=? and buyer_id=? and status != -1", $lot_id, $lot["buyer"]).Order("amount DESC").Row()
                    DBUpdate("buyers", Int(buyer["id"]), "status", -1)
                    
                    $dep_check = DBFind("dep_user_list").Where("lot_id=$ and member_id=$",$lot_id,buyer["buyer_id"]).Row()
                    DBUpdate("keys",Int($dep_check["member_id"]),"-deposit",$dep_check["amount"])
                    DBUpdate("dep_user_list",Int($dep_check["id"]),"amount",0)
                    lots_Close("id", $lot_id)
                }
            }
        }
        if $actions == "seller_accept" {
            if $lot["seller"] == $key_id {
                var contract_text string
                contract_text = Sprintf("%v \n Подпись продавца: %v", $lot["contract_text"], Sha256($user["pub"]))
                DBUpdate("lots", $lot_id, "seller_sign,seller_pub,contract_text", 1, Sha256($user["pub"]), contract_text)
                notifications_Send("member_id,sender,text_header,page_name,params_map", $lot["buyer"], 1, "Продавец подписал контракт", "lots_view_contract", JSONEncode(params))
            }
        }
        if $actions == "seller_reject" {
            if $lot["seller"] == $key_id {
                DBUpdate("lots", $lot_id, "status", 5)
            }
            if $lot["type_bargain"] == 2 {
                var buyer map
                buyer = DBFind("buyers").Columns("id,amount,buyer_id").Where("lot_id=? and buyer_id=? and status != -1", $lot_id, $lot["buyer"]).Order("amount DESC").Row()
                DBUpdate("keys", Int(buyer["buyer_id"]), "-deposit", buyer["amount"])
            }
            if $lot["type_bargain"] == 1 {
                var buyers array i int
                buyers = DBFind("buyers").Columns("id,amount,buyer_id").Where("lot_id=?", $lot_id)
                while i < Len(buyers) {
                    var buyer map
                    buyer = buyers[i]
                    $dep_check = DBFind("dep_user_list").Where("lot_id=$ and member_id=$",$lot_id,buyer["buyer_id"]).Row()
                    DBUpdate("keys",Int($dep_check["member_id"]),"-deposit",$dep_check["amount"])
                    DBUpdate("dep_user_list",Int($dep_check["id"]),"amount",0)
                    i = i + 1
                }
            }
        }
        if $notific_id > 0{
            notifications_Close("notific_id", $notific_id)
        }
        storeHistory($lot_id)
    }
}