Div(content-wrapper){
    If(Or(#v_member_id#>0,#v_member_id#<0)){
    }.Else{
        SetVar(Name: v_member_id, Value: #key_id#)
    }
    DBFind(Name: members, Source: src_member).Columns("id,image_id,member_name,name_first,name_middle,name_last,company_name,company_position,member_info->information").Where("id=#v_member_id#").Vars(prefix)
    DBFind(Name: roles).Where("id=#role_id#").Columns("role_name").Vars(r)
    DBFind(Name: applications).Columns("id").Where("name='Trading Platform' AND deleted=0").Vars(application)
    If(Or(#prefix_id#>0,#prefix_id#<0)){
        Div(Class: col-xs-3 mt-sm text-center){
            If(#prefix_image_id#>0){
                Image(Src: Binary().ById(#prefix_image_id#))
            }.Else{
                Span(Class: fa icon-user fa-5x text-primary)
            }
        }
        Div(Class: list-group-item text-left) {
            Span(Class: text-left h4, Body: Системное имя: #prefix_member_name#)
        }

        Div(input-group mt-lg){
            Div(pr-sm){
                Фамилия:
            }
            Div(text-bold){
                #prefix_name_middle#
            }
        }
        Div(input-group){
            Div(pr-sm){
                Имя:
            }
            Div(text-bold){
                #prefix_name_first#
            }
        }
        Div(input-group){
            Div(pr-sm){
                Отчество:
            }
            Div(){
                #prefix_name_last#
            }
        }
        Div(input-group){
            Div(pr-sm){
                Компания:
            }
            Div(text-bold){
                #prefix_company_name#
            }
        }
        Div(input-group){
            Div(pr-sm){
                Должность:
            }
            Div(){
                #prefix_company_position#
            }
        }

        If(#prefix_id#==#key_id#){
            Div(row mt-lg){
                Button(Class: btn btn-default mt-lg, Page: profile_edit, Body: Редактировать)
            }
        }

        DBFind(Name: roles_participants).Columns("id").Where("member->member_id='#v_member_id#' and deleted=0").Vars(check)
        If(#check_id#>0){
            DBFind(Name: roles_participants, Source: src_roles).Columns("role->id,role->name").Where("member->member_id='#v_member_id#' and deleted=0").Order("id").Count(roles_count)
            Div(Class: list-group-item text-left mt-lg){
                Span(Class: h4){
                    If(#r_role_name#=="Seller"){
                        Текущая роль: Продавец
                    }
                    If(#r_role_name#=="Buyer"){
                        Текущая роль: Покупатель
                    }
                    If(#r_role_name#=="Admin"){
                        Текущая роль: Администратор
                    }
                }
            }
            Div(input-group mt){
                ForList(src_roles){
                    If(#src_roles_index# == 1){
                        Div(pr-sm){
                            Роли:
                        }
                    }
                    Div(input-group pr-sm){
                        LinkPage(Class: input-group, Page: roles_view, PageParams: "v_role_id=#role.id#"){
                            If(#roles_count#!=#src_roles_index#){
                                #role.name#,
                            }.Else{
                                #role.name#
                            }
                        }
                    }
                }
            }
        }.Else{
            Div(Class: list-group-item text-left mt-lg){
                Span(Class: h4){
                    Текущая роль: Span(Class:text-muted, Body: [нет])
                }
            }
        }
        If(#prefix_id# == #key_id#){
            DBFind(Name: roles_participants, Source: src_roles).Columns("role->id,role->name").Where("member->member_id='#v_member_id#' and deleted=0").Vars(valid)
            If(Or(#valid_role_name#=="Seller",#valid_role_name#=="Buyer")){
            }.Else{
                Div(row mt-lg){
                    Button(Class: btn btn-default, Page: platform_role_selection, Body: Подать заявку на роль).Popup(35, Выбор роли)
                }
            }
        }

        DBFind(Name: keys, Source: src_keys).Where("id=#v_member_id#").Vars(tokens)
        SetVar(money_tokens_deposit, Money(#tokens_deposit#))
        SetVar(money_amount, Money(#tokens_amount#))
        SetVar(money_tokens_balance, Calculate(Exp: #money_amount#, Type: money, Prec: 0))
        Div(list-group-item mt-lg) {
            Span(Class:h4){
                Аккаунт: Address(#tokens_id#)
            }
        }
        Div(input-group mb-lg){
            If(#prefix_id# == #key_id#){
                Div(input-group){
                    Div(pr-sm){
                        Баланс:
                    }
                    Div(text-bold h4){
                        Span(#money_tokens_balance#, h4 text-bold)
                    }
                }
            }
            Div(input-group){
                Div(pr-sm){
                    Депозит:
                }
                Div(){
                    Span(#money_tokens_deposit#, h4 text-bold)
                }
            }
        }
        Button(Class: btn btn-default, Page: tokens_transfer, Body: Перевод средств).Popup(50, Укажите адресата)
    }.Else{
        Div(row){
            Div(col-xs-8 col-xs-offset-2 col-lg-6 col-lg-offset-3){
                Form(panel panel-primary){
                    Div(list-group-item){
                        P(Class: text-center text-bold h4 m0, Body: Профиль пользователя)
                        Div(panel-body){
                            Div(form-group){
                                Div(row){
                                    Div(col-xs-12 mt-sm text-center){
                                        If(Or(#prefix_id#>0,#prefix_id#<0)){
                                            If(#prefix_id# == #key_id#){
                                                Button(Class: btn btn-link, Page: profile_edit, PageParams: "v_member_id=#key_id#"){
                                                    If(#prefix_image_id#>0){
                                                        Image(Src: Binary().ById(#prefix_image_id#), Class: img-circle)
                                                    }.Else{
                                                        Span(Class: fa icon-user fa-5x text-primary)
                                                    }
                                                    Div(m0 h4 text-bold){#prefix_member_name#}
                                                }
                                            }.Else{
                                                If(#prefix_image_id#>0){
                                                    Image(Src: Binary().ById(#prefix_image_id#), Class: img-circle)
                                                }.Else{
                                                    Span(Class: fa icon-user fa-5x)
                                                }
                                                Div(m0 h4 text-bold){#prefix_member_name#}
                                            }
                                            Div(Class: h5 text-muted m0, Body: #prefix_member_info_information#)
                                        }.Else{
                                            Div(Class: h5 text-muted, Body: "Чтобы принять участие в аукционе или создать новый лот, внесите ваши персональные данные и подайте заявку на соответствующую роль")
                                            Button(Class: btn btn-primary, Page: profile_add, Body: Внести данные)
                                        }
                                    }
                                }
                            }
                            Div(list-group-item text-center){
                                Div(text-muted m0 h5, Body: Роли)
                                DBFind(Name: roles_participants, Source: src_check).Columns("id").Where("member->member_id='#v_member_id#' and deleted=0").Vars(check)
                                If(#check_id#>0){
                                    DBFind(Name: roles_participants, Source: src_roles).Columns("role->id,role->name").Where("member->member_id='#v_member_id#' and deleted=0").Order("id")
                                    ForList(src_roles){
                                        Span(){
                                            LinkPage(Page: roles_view, PageParams: "v_role_id=#role.id#"){
                                                Span(Class: h5, Body: "#role.name#")
                                            }
                                        }
                                    }
                                }.Else{
                                    Span(Class: h5, Body: "Нет")
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}