contract MembershipAdd {
    data {
        memberskeys string
    }
    conditions {
        var admin_id int
        admin_id = EcosysParam("role_admin")
       
        if !RoleAccess(Int(admin_id)) {
            warning LangRes("@1access_denied", "en")
        }

        if ($ecosystem_id == 1) {
            error LangRes("@1impossible_for_platform_ecosystem", "en")
        }
        
    }
    action {
        if $memberskeys == "" {
            warning LangRes("@1public_key_empty", "en")
        }

        $memberskeys = Replace($memberskeys, " ", "")

        if Contains($memberskeys, ",") {
            var keys_array array
            keys_array = Split($memberskeys, ",")
            var i int
            while i < Len(keys_array) {
                $arraymemberskeys = Str(keys_array[i])
                if HasPrefix($arraymemberskeys, "04") {
                    $arraymemberskeys = Substr($arraymemberskeys, 2, Size($arraymemberskeys) - 2)
                }
                
                if Size($arraymemberskeys) < 128 {
                    error LangRes("@1key_too_short", "en")+$arraymemberskeys
                }
                if Size($arraymemberskeys) > 128 {
                    error LangRes("@1key_too_long", "en")+$arraymemberskeys
                }
                $userKey = PubToID($arraymemberskeys)

                if $userKey == 0 {
                    warning LangRes("@1public_key_invalid", "en")
                }
                $check_user = DBFind("keys").Where({id:$userKey})
                if $check_user {
                    error LangRes("@1key_already_exists", "en") +$arraymemberskeys
                }
                
                DBInsert("@1keys",{id:$userKey,pub:$arraymemberskeys,ecosystem:$ecosystem_id})
                i = i + 1
            }
        } else {
            if HasPrefix($memberskeys, "04") {
                $memberskeys = Substr($memberskeys, 2, Size($memberskeys) - 2)
            }
            if Size($memberskeys) < 128 {
                error LangRes("@1key_too_short", "en")
            }
            if Size($memberskeys) > 128 {
                error LangRes("@1key_too_long", "en")
            }
            $userKey = PubToID($memberskeys)
            
            if $userKey == 0 {
                warning LangRes("@1public_key_invalid", "en")
            }

            $check_user = DBFind("@1keys").Where({id:$userKey})
            if $check_user {
                error LangRes("@1key_already_exists", "en") +$memberskeys
            }

            DBInsert("@1keys",{id:$userKey,pub:$memberskeys,ecosystem:$ecosystem_id})
        }
    }
}