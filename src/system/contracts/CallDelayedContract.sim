contract CallDelayedContract {
    data {
        Id int
        Lang string "optional"
    }
    conditions {
        var rows array
        rows = DBFind("@1delayed_contracts").Where({id: $Id, deleted: "false"})

        if !Len(rows) {
            error Sprintf(LangRes("@1template_delayed_contract_not_exist", $Lang), $Id)
        }
        $cur = rows[0]

        if $key_id != Int($cur["key_id"]) {
            error LangRes("@1access_denied", $Lang)
        }

        if $block < Int($cur["block_id"]) {
            error Sprintf(LangRes("@1template_delayed_contract_error", $Lang), $Id, $cur["block_id"], $block)
        }
    }
    action {
        var limit, counter, block_id int

        limit = Int($cur["limit"])
        counter = Int($cur["counter"]) + 1
        block_id = $block

        if limit == 0 || limit > counter {
            block_id = block_id + Int($cur["every_block"])
        }
        DBUpdate("@1delayed_contracts", $Id, {"counter": counter, "block_id": block_id})

        var params map
        CallContract($cur["contract"], params)
    }
}