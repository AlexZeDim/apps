contract CallDelayedContract {
    data {
        Id int
    }
    
    conditions {
        var rows array
        rows = DBFind("@1delayed_contracts").Where({id: $Id, deleted: 0})

        if !Len(rows) {
            error Sprintf(LangRes("@1template_delayed_contract_not_exist", "en"), $Id)
        }
        $cur = rows[0]
        $limit = Int($cur["limit"])
        $counter = Int($cur["counter"])

        if $key_id != Int($cur["key_id"]) {
            error LangRes("@1access_denied", "en")
        }

        if $block < Int($cur["block_id"]) {
            error Sprintf(LangRes("@1template_delayed_contract_error", "en"), $Id, $cur["block_id"], $block)
        }

        if $limit > 0 && $counter >= $limit {
            error Sprintf(LangRes("@1template_delayed_contract_limited", "en"), $Id)    
        }
    }
    
    action {
        $counter = $counter + 1

        var block_id int
        block_id = $block
        if $limit == 0 || $limit > $counter {
            block_id = block_id + Int($cur["every_block"])
        }

        DBUpdate("@1delayed_contracts", $Id, {"counter": $counter, "block_id": block_id})

        var params map
        CallContract($cur["contract"], params)
    }
}