Div(Class: content-wrapper){

	SetTitle($accounts$)
	Div(Class: breadcrumb){
		Span(Class: text-muted, Body: LangRes(accounts))
	}

    If(GetVar(isSearch) == 1){
        SetVar(Name: v_Where, Value: "member_name='#v_Search#'")
    }.Else{
        SetVar(Name: v_Where, Value: "id>0")
        SetVar(Name: v_Search, Value: "")
    }

    DBFind(Name: accounts, Source: src_accounts).Custom(custom_id){
        If(#onhold# == 0){
            Span(Body: #id#)  
        }.Else{
            Span(Class: text-muted, Body: #id#)
        }
    }.Custom(custom_member){
		If(And(#account_type#!=4,#account_type#!=5)){
			If(#onhold# == 0){
				Button(Class: btn btn-link, Page: profile_view, PageParams: "v_member_id=#member_id#"){
					Image(Src: "#member_avatar#", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)
					Span(Class: h5 text-bold, Body: #member_name#)
				}
			}.Else{
				Div(){
					Image(Src: "#member_avatar#", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)
					Span(Class: h5 text-muted, Body: #member_name#)
				}
			}
		}
    }.Custom(custom_address){
        If(And(#account_type#!=4,#account_type#!=5)){
            If(#onhold# == 0){
                Span(Body: Address(#member_id#))
            }.Else{
                Span(Class: text-muted, Body: Address(#member_id#))
            }
        }
	}.Custom(custom_type){
        If(#onhold# == 0){
            Span(Body: EcosysParam(Name: tokens_accounts_systype, Index: #account_type#))
        }.Else{
            Span(Class: text-muted, Body: EcosysParam(Name: tokens_accounts_systype, Index: #account_type#))
        }
    }.Custom(custom_status){
        If(#onhold# == 0){
            Span(Body: LangRes(active))
        }.Else{
            Span(Class: text-muted, Body: LangRes(onhold))
        }
	}.Custom(custom_amount){
        If(#onhold# == 0){
            Span(Body: #amount#)
        }.Else{
            Span(Class: text-muted, Body: #amount#)
        }
    }.Custom(actions){
        If(And(#account_type#!=4,#account_type#!=5)){
            If(#onhold# == 0){
                Button(Body: Em(Class: fa fa-trash), Class: btn btn-danger, Contract: Tokens_Account_Close, Params: "row_id=#id#", Page: tokens_accounts_list)
            }
        }
    }.Where(#v_Where#).Order("onhold ASC, account_type DESC, id ASC")

    Div(Class: panel panel-primary){
        Form(){

            Div(Class: list-group-item){
                Div(Class: row df f-valign){
                    Div(Class: col-md-1 mt-sm text-right){
                        Label(For: Search){
                            Span(Body: LangRes(member))
                        }
                    }
                    Div(Class: col-md-11 mc-sm){
                        Div(Class: input-group){
                            Input(Class: form-control, Type: text, Name: Search, Value: #v_Search#)
                            Div(Class: input-group-btn){
                                Button(Body: Em(Class: fa fa-search), Class: btn btn-default, Page: tokens_accounts_list, PageParams: "isSearch=1,v_Search=Val(Search)")
                            }
                        }
                    }
                }  
            }

            Div(Class: list-group-item){ 
                Table(Source: src_accounts, Columns: "$id$=custom_id,$member$=custom_member,$member_id$=custom_address,$type$=custom_type,$status$=custom_status,$amount$=custom_amount,$actions$=actions")
                If(GetVar(isSearch) == 1){
                    Div(Class: text-center){  
                        Button(Body: $view_all$, Class: btn btn-primary, Page: tokens_accounts_list, PageParams: "isSearch=0")
                    }
                }
            }

            Div(Class: panel-footer clearfix){
                Div(Class: pull-right){
                    Button(Body: LangRes(create), Class: btn btn-primary, Page: tokens_accounts_add)
                }
            }
            
        }           
    }

}