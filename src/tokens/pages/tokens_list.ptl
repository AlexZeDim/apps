Div(Class: content-wrapper){

	SetTitle($tokens$)
	Div(Class: breadcrumb){
		Span(Class: text-muted, Body: LangRes(tokens))
	}

    If(GetVar(isSearch) == 1){
        SetVar(Name: v_Where, Value: "name_tokens='#v_Search#'")
    }.Else{
        SetVar(Name: v_Where, Value: "id>0")
        SetVar(Name: v_Search, Value: "")
    }

    DBFind(Name: accounts_tokens, Source: src_accounts_tokens).Custom(custom_id){
        If(#delete# == 0){
            Span(Body: #id#)  
        }.Else{
            Span(Class: text-muted, Body: #id#)
        }
    }.Custom(custom_name_tokens){
        If(#delete# == 0){
            Span(Body: #name_tokens#)  
        }.Else{
            Span(Class: text-muted, Body: #name_tokens#)
        }
    }.Custom(custom_rollback){
        If(#delete# == 0){
            Span(Body: EcosysParam(Name: tokens_rollback_tokens, Index: #flag_rollback_tokens#))
        }.Else{
            Span(Class: text-muted, Body: EcosysParam(Name: tokens_rollback_tokens, Index: #flag_rollback_tokens#))
        }
    }.Custom(custom_date){
        If(#delete# == 0){
            Div(Body: DateTime(DateTime: #date_create#, Format: "DD.MM.YYYY HH:MI"))
            If(#date_expiration# == NULL){
                Div(Body: unlimited)   
            }.Else{
                Div(Body: DateTime(DateTime: #date_expiration#, Format: "DD.MM.YYYY HH:MI"))
            }
        }.Else{
            Div(Class: text-muted, Body: DateTime(DateTime: #date_create#, Format: "DD.MM.YYYY HH:MI"))
            If(#date_expiration# == NULL){
                Div(Class: text-muted, Body: unlimited)  
            }.Else{
                Div(Class: text-muted, Body: DateTime(DateTime: #date_expiration#, Format: "DD.MM.YYYY HH:MI"))
            }
        }
    }.Custom(custom_status){
        If(#delete# == 0){
            Span(Body: LangRes(active))
        }.Else{
            Span(Class: text-muted, Body: LangRes(onhold))
        }
    }.Custom(custom_emission){
        If(#delete# == 0){
            If(#type_emission# == 2){
                Button(Body: LangRes(emission), Class: btn btn-primary, Page: tokens_emission)
            }.Else{
                Span(Body: EcosysParam(Name: tokens_type_emission, Index: #type_emission#))
            }  
        }.Else{
            Span(Class: text-muted, Body: EcosysParam(Name: tokens_type_emission, Index: #type_emission#))
        }
    }.Custom(custom_amount){
        If(#delete# == 0){
            Span(Body: #amount#)
        }.Else{
            Span(Class: text-muted, Body: #amount#)
        }
    }.Custom(actions){
        If(#delete# == 0){
            Button(Body: Em(Class: fa fa-trash), Class: btn btn-danger, Contract: Tokens_Close, Params: "tokens_id=#id#", Page: tokens_list)
        }
    }.Where(#v_Where#).Order("delete ASC, id ASC")

    Div(Class: panel panel-primary){
        Form(){
            Div(Class: list-group-item){
                Div(Class: row df f-valign){
                    Div(Class: col-md-1 mt-sm text-right){
                        Label(For: Search){
                            Span(Body: LangRes(name))
                        }
                    }
                    Div(Class: col-md-11 mc-sm){
                        Div(Class: input-group){
                            Input(Class: form-control, Type: text, Name: Search, Value: #v_Search#)
                            Div(Class: input-group-btn){
                                Button(Body: Em(Class: fa fa-search), Class: btn btn-default, Page: tokens_list, PageParams: "isSearch=1,v_Search=Val(Search)")
                            }
                        }
                    }
                }  
            }

            Div(Class: list-group-item){ 
                Table(Source: src_accounts_tokens, Columns: "$id$=custom_id,$name$=custom_name_tokens,$rollback$=custom_rollback,$emission$=custom_emission,$created$ / $expiration$=custom_date,$status$=custom_status,$amount$=custom_amount,$actions$=actions")
                If(GetVar(isSearch) == 1){
                    Div(Class: text-center){  
                        Button(Body: $view_all$, Class: btn btn-primary, Page: tokens_list, PageParams: "isSearch=0")
                    }
                }
            }

            Div(Class: panel-footer clearfix){
                Div(Class: pull-right){
                    Button(Body: LangRes(create), Class: btn btn-primary, Page: tokens_create)
                }
            }
            
        }           
    }

}