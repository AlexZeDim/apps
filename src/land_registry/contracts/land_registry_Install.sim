contract land_registry_Install{
    data{}
    
    func conditions{
        MainCondition()
    }
    
    func action{
        var roleName string
        var m, isAssigned, role map
        var amount int
        var members, fMembers array
        amount = 1000000
        var i int
        
        // fake members
        // fMembers[0] = "0022-5368-9996-5437-2905"
        // fMembers[1] = "0099-6231-3856-5867-2293"
        // fMembers[2] = "1823-8019-6419-0516-5483"
        // fMembers[3] = "0702-8968-3827-9121-2498"
        // DBUpdate("keys", $key_id, "amount", 1000000000000)
        // var keyIdOriginal int
        // keyIdOriginal = $key_id
        // while i<Len(fMembers){
        //     $key_id = keyIdOriginal
        //     @1MoneyTransfer("Recipient,Amount,Comment", fMembers[i], amount, "")
            
        //     $key_id = AddressToId(fMembers[i])
        //     var fName string
        //     fName = Sprintf("fake_member_%v",i)
        //     Profile_Edit("member_name,avatar", fName, "")
            
        //     i=i+1
        // }
        
        members = DBFind("members")
        i=0
        while i< Len(members){
            m = members[i]
            isAssigned = DBFind("land_registry_accounts").Where("member_id=?", m["id"]).Row()
            if isAssigned {
                DBUpdate("land_registry_accounts", Int(isAssigned["id"]), "member_id,member_avatar,member_name,amount_money,amount,onhold", m["id"],m["avatar"],m["member_name"], amount, amount,0)
            }else{
                DBInsert("land_registry_accounts", "member_id,member_avatar,member_name,amount_money,amount", m["id"],m["avatar"],m["member_name"], amount, amount)
            }
            i=i+1
        }
        var where string
        where = "role_name=? and role_type=1 and company_id=0 and delete=0"
        i = 0
        while i < 4{
            if i==3{
                roleName = "land_bank"
            }else{
                roleName = Sprintf("land_depart%v", i+1)
            }
            role = DBFind("roles_list").Where(where, roleName).Row()
            if !role {
                // create required roles
                // role_type==1 must be assigned_role
                Roles_Create("role_name,role_type,company_id", roleName, 1, 0)
                role = DBFind("roles_list").Where(where, roleName).Row()
            }
            isAssigned = DBFind("roles_assign").Where("role_id=? and delete=0", role["id"]).Row()
            if isAssigned{
                var roleCreatorId int
                $key_id = Int(DBFind("roles_list").Where("id=?", role["id"]).One("creator_id"))
                Roles_Unassign("row_id", Int(isAssigned["id"]))
            }
            var j int
            if i < Len(members){
                j = i
            }
            m = members[j]
            Roles_Assign("role_id,member_id", Int(role["id"]), Int(m["id"]))
            i=i+1
        }
    }
}