contract land_registry_PurchaseAccept{
    data{
        LandId int
        NotificId int
    }
    conditions{
        $roleId = DBFind("roles_list").Where("role_name=? and delete=0", "land_bank").One("id")
        if $roleId == nil{
            info "Banker not found"
        }
    }
    action{
        var ownership map
        ownership = DBFind("land_registry_ownership").Where("lend_object_id=?", $LandId).Row()
        var ownershipId, buyerId int
        ownershipId = Int(ownership["id"])
        buyerId = Int(ownership["owner_new_id"])
        
        DBUpdate("land_registry_ownership", ownershipId, "step", 1)
        
        // notify buyer
        var icon, header, body, page, params string
        icon = "fa-bell"
        header = "$purchase_approved$"
        body = "$waiting_bank$"
        page = "land_registry_view"
        params = Sprintf("LandId=%v", $LandId)
        
        Notifications_Single_Send("member_id,icon_name,text_header,text_body,page_name,params_val", buyerId, icon, header, body, page, params)
        
        // notify bank
        var roleId, closureType int
        header = "$new_land$"
        body = "$need_your_processing$"
        closureType = 2
        page = "land_registry_bank"
        Notifications_Roles_Send("role_id,closure_type,icon_name,text_header,text_body,page_name,params_val",Int($roleId),closureType,icon,header,body,page,params)
        
        // closing notify for owner
        Notifications_Single_Close("notific_id", $NotificId)
    }
}