contract land_registry_BankAction{    
    data{
        LandId int
    }
    action{
        var where string
        where = Sprintf("page_params='LandId=%v'", $LandId)
        var notes array
        notes = DBFind("notifications").Where(where)
        var i int
        while i < Len(notes) {
            var note map
            note = notes[i]
            Notifications_Single_Close("notific_id", Int(note["id"]))
            i = i + 1
        }
        var ownershipTable string
        ownershipTable = "land_registry_ownership"
        var ownership map
        ownership = DBFind(ownershipTable).Where("lend_object_id=?", $LandId).Row()
        var ownershipId, ownerId, buyerId int
        ownershipId = Int(ownership["id"])
        ownerId = Int(ownership["owner_id"])
        buyerId = Int(ownership["owner_new_id"])
        
        var land map
        land = DBFind("land_registry").WhereId($LandId).Row()
        var landPrice int
        landPrice = Int(land["price"])
        landPrice = landPrice * 105 / 100
        
        //перевод денег с эмиссии покупателю(персональный счет)
        var buyerAccount map
        buyerAccount = DBFind("land_registry_accounts").Where("member_id=? and onhold=0", buyerId).Row()
        if !buyerAccount {
            info "Buyers account not found"
        }
        var buyerAccountId, bankAccountId int
        bankAccountId = 1
        buyerAccountId = Int(buyerAccount["id"])
        land_registry_TokensTransfer("sender_id,recipient_id,amount", buyerAccountId, bankAccountId, landPrice)
        
        DBUpdate(ownershipTable, ownershipId, "step", 2)
        
        //уведомляем продавца
        var icon, header, body, page, params string
        icon = "fa-bell"
        header = "$new_purchase$"
        body = "$need_your_processing$"
        page = "land_registry_view"
        params = Sprintf("LandId=%v",$LandId)
        Notifications_Single_Send("member_id,icon_name,text_header,text_body,page_name,params_val",
        ownerId, icon, header, body, page, params)
    }
}