contract TaBuyerAction {
    data {
        Action string
    }
    conditions{
        var basicAppId int
        basicAppId = Int(DBFind("@1applications").Where({ecosystem_id:1, name:"Basic"}).One("id"))
        if basicAppId == 0{
            warning LangRes("@1app_not_found", "en")
        }
        $roleConsensus = Int(AppParam(basicAppId, "role_apla_consensus_asbl", 1)
        if $roleConsensus == 0{
            warning Sprintf(LangRes("@1role_not_set_application_parameter", "en"), "role_apla_consensus_asbl")
        }
        $wallet = DBFind("wallets").Where({key_id_buyer:$key_id, rejected_at:0}).Row()
        if !$wallet{
            warning "Buyer wallet not found"
        }
    }

    action {
        if $Action == "accept"{
            DBUpdate("wallets", Int($wallet["id"]), {signed_at:$time})
            // role Apla Consensus notification
            var params map title string
            title = Sprintf("Buyer %v signed contract", IdToAddress($key_id))
            params["wallet_id"] = $wallet["id"]
            @1NotificationsSend("rid,sender,text_header,page_name,params_map,closure_type", $roleConsensus, 2, title, "ta_asbl_contract", params, 1)

        }elif $Action == "reject"{
            DBUpdate("wallets", Int($wallet["id"]), {rejected_at:$time})
        }
    }
}
