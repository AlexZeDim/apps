{
    "name": "System",
    "data": [
        {
            "Type": "blocks",
            "Name": "admin_link",
            "Value": "If(#sort#==1){\r\n\tSetVar(sort_name, \"id asc\")\r\n}.ElseIf(#sort#==2){\r\n\tSetVar(sort_name, \"id desc\")\r\n}.ElseIf(#sort#==3){\r\n\tSetVar(sort_name, \"name asc\")\r\n}.ElseIf(#sort#==4){\r\n\tSetVar(sort_name, \"name desc\")\r\n}.Else{\r\n\tSetVar(sort, \"1\")\r\n\tSetVar(sort_name, \"id asc\") \r\n}\r\n\r\nIf(Or(#width#==12,#width#==6,#width#==4)){\r\n}.Else{\r\n\tSetVar(width,6)\r\n}\r\n\r\nDiv(clearfix){\r\n\tDiv(pull-left){\r\n\t\tIf(#width#==12){\r\n\t\t\tSpan(Button(Body: Em(Class: fa fa-bars), Class: btn bg-gray-lighter, Page: #admin_page#, PageParams: \"sort=#sort#,width=12,current_page=#current_page#,this_app_id=#this_app_id#\")).Style(margin-left:10px;)\r\n\t\t}.Else{\r\n\t\t\tSpan(Button(Body: Em(Class: fa fa-bars), Class: btn bg-gray, Page: #admin_page#, PageParams: \"sort=#sort#,width=12,current_page=#current_page#,this_app_id=#this_app_id#\")).Style(margin-left:10px;)\r\n\t\t}\r\n\t\tIf(#width#==6){\r\n\t\t\tSpan(Button(Body: Em(Class: fa fa-th-large), Class: btn bg-gray-lighter, Page: #admin_page#, PageParams: \"sort=#sort#,width=6,current_page=#current_page#,this_app_id=#this_app_id#\")).Style(margin-left:5px;)\r\n\t\t}.Else{\r\n\t\t\tSpan(Button(Body: Em(Class: fa fa-th-large), Class: btn bg-gray, Page: #admin_page#, PageParams: \"sort=#sort#,width=6,current_page=#current_page#,this_app_id=#this_app_id#\")).Style(margin-left:5px;)\r\n\t\t}\r\n\t\tIf(#width#==4){\r\n\t\t\tSpan(Button(Body: Em(Class: fa fa-th), Class: btn bg-gray-lighter, Page: #admin_page#, PageParams: \"sort=#sort#,width=4,current_page=#current_page#,this_app_id=#this_app_id#\")).Style(margin-left:5px;)\r\n\t\t}.Else{\r\n\t\t\tSpan(Button(Body: Em(Class: fa fa-th), Class: btn bg-gray, Page: #admin_page#, PageParams: \"sort=#sort#,width=4,current_page=#current_page#,this_app_id=#this_app_id#\")).Style(margin-left:5px;)\r\n\t\t}\r\n\t}\r\n\tDiv(pull-right){\r\n\t\tIf(#sort#==1){\r\n\t\t\tSpan(Button(Body: Em(Class: fa fa-long-arrow-down) Sort by ID, Class: btn bg-gray-lighter, Page: #admin_page#, PageParams: \"sort=2,width=#width#,current_page=#current_page#,this_app_id=#this_app_id#\")).Style(margin-right:5px;)\r\n\t\t}.ElseIf(#sort#==2){\r\n\t\t\tSpan(Button(Body: Em(Class: fa fa-long-arrow-up) Sort by ID, Class: btn bg-gray-lighter, Page: #admin_page#, PageParams: \"sort=1,width=#width#,current_page=#current_page#,this_app_id=#this_app_id#\")).Style(margin-right:5px;)\r\n\t\t}.Else{\r\n\t\t\tSpan(Button(Body: Sort by ID, Class: btn bg-gray, Page: #admin_page#, PageParams: \"sort=1,width=#width#,current_page=#current_page#,this_app_id=#this_app_id#\")).Style(margin-right:5px;)\r\n\t\t}\r\n\r\n\t\tIf(#sort#==3){\r\n\t\t\tSpan(Button(Body: Em(Class: fa fa-long-arrow-down) Sort by NAME, Class: btn bg-gray-lighter, Page: #admin_page#, PageParams: \"sort=4,width=#width#,current_page=#current_page#,this_app_id=#this_app_id#\")).Style(margin-right:10px;)\r\n\t\t}.ElseIf(#sort#==4){\r\n\t\t\tSpan(Button(Body: Em(Class: fa fa-long-arrow-up) Sort by NAME, Class: btn bg-gray-lighter, Page: #admin_page#, PageParams: \"sort=3,width=#width#,current_page=#current_page#,this_app_id=#this_app_id#\")).Style(margin-right:10px;)\r\n\t\t}.Else{\r\n\t\t\tSpan(Button(Body: Sort by NAME, Class: btn bg-gray, Page: #admin_page#, PageParams: \"sort=3,width=#width#,current_page=#current_page#,this_app_id=#this_app_id#\")).Style(margin-right:10px;)\r\n\t\t}\r\n\t}\r\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "blocks",
            "Name": "export_info",
            "Value": "DBFind(Name: buffer_data, Source: src_buffer).Columns(\"value->app_id,value->app_name,value->menu_name,value->menu_id,value->count_menu\").Where(\"key='export' and member_id=-5170274876521810367\").Vars(buffer)\r\n\r\nIf(#buffer_value_app_id# > 0){\r\n    DBFind(pages, src_pages).Where(\"app_id=#buffer_value_app_id#\").Limit(250).Order(\"name\").Count(count_pages)\r\n    DBFind(blocks, src_blocks).Where(\"app_id=#buffer_value_app_id#\").Limit(250).Order(\"name\").Count(count_blocks)\r\n    DBFind(app_params, src_parameters).Where(\"app_id=#buffer_value_app_id#\").Limit(250).Order(\"name\").Count(count_parameters)\r\n    DBFind(languages, src_languages).Where(\"app_id=#buffer_value_app_id#\").Limit(250).Order(\"name\").Count(count_languages)\r\n    DBFind(contracts, src_contracts).Where(\"app_id=#buffer_value_app_id#\").Limit(250).Order(\"name\").Count(count_contracts)\r\n    DBFind(tables, src_tables).Where(\"app_id=#buffer_value_app_id#\").Limit(250).Order(\"name\").Count(count_tables)\r\n}\r\n\r\nDiv(panel panel-primary){\r\n    If(#buffer_value_app_id# > 0){\r\n\t    Div(panel-heading, \"Export - #buffer_value_app_name#\")\r\n    }.Else{\r\n        Div(panel-heading, \"Export\") \r\n    }\r\n\tForm(){\r\n\t\tDiv(list-group-item){\r\n\t\t\tDiv(row){\r\n\t\t\t\tDiv(col-md-10 mc-sm text-left){\r\n                    Span(\"Pages\")\r\n\t\t\t\t}\r\n\t\t\t\tDiv(col-md-2 mc-sm text-right){\r\n                    If(#count_pages# > 0){\r\n                        Span(\"(#count_pages#)\")\r\n                    }.Else{\r\n                        Span(\"(0)\")  \r\n                    }\r\n\t\t\t\t} \r\n\t\t\t}\r\n\t\t\tDiv(row){\r\n\t\t\t\tDiv(col-md-12 mc-sm text-left){\r\n                    If(#count_pages# > 0){\r\n                        ForList(src_pages){\r\n                            Span(Class: text-muted h6, Body: \"#name#, \")\r\n                        }\r\n                    }.Else{\r\n                        Span(Class: text-muted h6, Body: \"Nothing selected\")\r\n                    }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tDiv(list-group-item){\r\n\t\t\tDiv(row){\r\n\t\t\t\tDiv(col-md-10 mc-sm text-left){\r\n                    Span(\"Blocks\")\r\n\t\t\t\t}\r\n\t\t\t\tDiv(col-md-2 mc-sm text-right){\r\n                    If(#count_blocks# > 0){\r\n                        Span(\"(#count_blocks#)\")\r\n                    }.Else{\r\n                        Span(\"(0)\")  \r\n                    }\r\n\t\t\t\t} \r\n\t\t\t}\r\n\t\t\tDiv(row){\r\n\t\t\t\tDiv(col-md-12 mc-sm text-left){\r\n                    If(#count_blocks# > 0){\r\n                        ForList(src_blocks){\r\n                            Span(Class: text-muted h6, Body: \"#name#, \")\r\n                        }\r\n                    }.Else{\r\n                        Span(Class: text-muted h6, Body: \"Nothing selected\")\r\n                    }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tDiv(list-group-item){\r\n\t\t\tDiv(row){\r\n\t\t\t\tDiv(col-md-10 mc-sm text-left){\r\n\t\t\t\t\tSpan(\"Menu\")\r\n\t\t\t\t}\r\n\t\t\t\tDiv(col-md-2 mc-sm text-right){\r\n                    If(#buffer_value_app_id# > 0){\r\n                        Span(\"(#buffer_value_count_menu#)\")\r\n                    }.Else{\r\n                        Span(\"(0)\")\r\n                    }\r\n\t\t\t\t} \r\n\t\t\t}\r\n\t\t\tDiv(row){\r\n\t\t\t\tDiv(col-md-12 mc-sm text-left){\r\n                    If(And(#buffer_value_app_id#>0,#buffer_value_count_menu#>0)){\r\n                        Span(Class: text-muted h6, Body:\"#buffer_value_menu_name#\")\r\n                    }.Else{\r\n                        Span(Class: text-muted h6, Body:\"Nothing selected\")\r\n                    }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tDiv(list-group-item){\r\n\t\t\tDiv(row){\r\n\t\t\t\tDiv(col-md-10 mc-sm text-left){\r\n                    Span(\"Parameters\")\r\n\t\t\t\t}\r\n\t\t\t\tDiv(col-md-2 mc-sm text-right){\r\n                    If(#count_parameters# > 0){\r\n                        Span(\"(#count_parameters#)\")\r\n                    }.Else{\r\n                        Span(\"(0)\")  \r\n                    }\r\n\t\t\t\t} \r\n\t\t\t}\r\n\t\t\tDiv(row){\r\n\t\t\t\tDiv(col-md-12 mc-sm text-left){\r\n                    If(#count_parameters# > 0){\r\n                        ForList(src_parameters){\r\n                            Span(Class: text-muted h6, Body: \"#name#, \")\r\n                        }\r\n                    }.Else{\r\n                        Span(Class: text-muted h6, Body: \"Nothing selected\")\r\n                    }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tDiv(list-group-item){\r\n\t\t\tDiv(row){\r\n\t\t\t\tDiv(col-md-10 mc-sm text-left){\r\n                    Span(\"Language resources\")\r\n\t\t\t\t}\r\n\t\t\t\tDiv(col-md-2 mc-sm text-right){\r\n                    If(#count_languages# > 0){\r\n                        Span(\"(#count_languages#)\")\r\n                    }.Else{\r\n                        Span(\"(0)\")  \r\n                    }\r\n\t\t\t\t} \r\n\t\t\t}\r\n\t\t\tDiv(row){\r\n\t\t\t\tDiv(col-md-12 mc-sm text-left){\r\n                    If(#count_languages# > 0){\r\n                        ForList(src_languages){\r\n                            Span(Class: text-muted h6, Body: \"#name#, \")\r\n                        }\r\n                    }.Else{\r\n                        Span(Class: text-muted h6, Body: \"Nothing selected\")\r\n                    }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tDiv(list-group-item){\r\n\t\t\tDiv(row){\r\n\t\t\t\tDiv(col-md-10 mc-sm text-left){\r\n                    Span(\"Contracts\")\r\n\t\t\t\t}\r\n\t\t\t\tDiv(col-md-2 mc-sm text-right){\r\n                    If(#count_contracts# > 0){\r\n                        Span(\"(#count_contracts#)\")\r\n                    }.Else{\r\n                        Span(\"(0)\")  \r\n                    }\r\n\t\t\t\t} \r\n\t\t\t}\r\n\t\t\tDiv(row){\r\n\t\t\t\tDiv(col-md-12 mc-sm text-left){\r\n                    If(#count_contracts# > 0){\r\n                        ForList(src_contracts){\r\n                            Span(Class: text-muted h6, Body: \"#name#, \")\r\n                        }\r\n                    }.Else{\r\n                        Span(Class: text-muted h6, Body: \"Nothing selected\")\r\n                    }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tDiv(list-group-item){\r\n\t\t\tDiv(row){\r\n\t\t\t\tDiv(col-md-10 mc-sm text-left){\r\n                    Span(\"Tables\")\r\n\t\t\t\t}\r\n\t\t\t\tDiv(col-md-2 mc-sm text-right){\r\n                    If(#count_tables# > 0){\r\n                        Span(\"(#count_tables#)\")\r\n                    }.Else{\r\n                        Span(\"(0)\")  \r\n                    }\r\n\t\t\t\t} \r\n\t\t\t}\r\n\t\t\tDiv(row){\r\n\t\t\t\tDiv(col-md-12 mc-sm text-left){\r\n                    If(#count_tables# > 0){\r\n                        ForList(src_tables){\r\n                            Span(Class: text-muted h6, Body: \"#name#, \")\r\n                        }\r\n                    }.Else{\r\n                        Span(Class: text-muted h6, Body: \"Nothing selected\")\r\n                    }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n        If(#buffer_value_app_id# > 0){\r\n            Div(panel-footer clearfix){\r\n                Div(pull-left){\r\n                    Button(Body: Em(Class: fa fa-refresh), Class: btn btn-default, Contract: Export_NewApp, Params: \"app_id=#buffer_value_app_id#\", Page: export_resources)\r\n                }\r\n                Div(pull-right){\r\n                    Button(Body: Export, Class: btn btn-primary, Page: export_download, Contract: Export)\r\n                }\r\n            }\r\n        }\r\n\t}\r\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "blocks",
            "Name": "export_link",
            "Value": "If(And(#res_type#!=\"pages\",#res_type#!=\"blocks\",#res_type#!=\"menu\",#res_type#!=\"parameters\",#res_type#!=\"languages\",#res_type#!=\"contracts\",#res_type#!=\"tables\")){\n\tSetVar(res_type, \"pages\")\n}\n\nDiv(breadcrumb){\n\tIf(#res_type#==\"pages\"){\n\t\tSpan(Class: text-muted, Body: \"Pages\")\n\t}.Else{\n\t\tLinkPage(Body: \"Pages\", Page: export_resources,, \"res_type=pages\")\n\t}\n\tSpan(|).Style(margin-right: 10px; margin-left: 10px;)\n\tIf(#res_type#==\"blocks\"){\n\t\tSpan(Class: text-muted, Body: \"Blocks\")\n\t}.Else{\n\t\tLinkPage(Body: \"Blocks\", Page: export_resources,, \"res_type=blocks\")\n\t}\n\tSpan(|).Style(margin-right: 10px; margin-left: 10px;)\n\tIf(#res_type#==\"menu\"){\n\t\tSpan(Class: text-muted, Body: \"Menu\")\n\t}.Else{\n\t   LinkPage(Body: \"Menu\", Page: export_resources,, \"res_type=menu\")\n\t}\n\tSpan(|).Style(margin-right: 10px; margin-left: 10px;)\n\tIf(#res_type#==\"parameters\"){\n\t\tSpan(Class: text-muted, Body: \"Application parameters\")\n\t}.Else{\n\t   LinkPage(Body: \"Application parameters\", Page: export_resources,, \"res_type=parameters\")\n\t}\n\tSpan(|).Style(margin-right: 10px; margin-left: 10px;)\n\tIf(#res_type#==\"languages\"){\n\t\tSpan(Class: text-muted, Body: \"Language resources\")\n\t}.Else{\n\t   LinkPage(Body: \"Language resources\", Page: export_resources,, \"res_type=languages\")\n\t}\n\tSpan(|).Style(margin-right: 10px; margin-left: 10px;)\n\tIf(#res_type#==\"contracts\"){\n\t\tSpan(Class: text-muted, Body: \"Contracts\")\n\t}.Else{\n\t   LinkPage(Body: \"Contracts\", Page: export_resources,, \"res_type=contracts\")\n\t} \n\tSpan(|).Style(margin-right: 10px; margin-left: 10px;)\n\tIf(#res_type#==\"tables\"){\n\t\tSpan(Class: text-muted, Body: \"Tables\")\n\t}.Else{\n\t   LinkPage(Body: \"Tables\", Page: export_resources,, \"res_type=tables\")\n\t}\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "blocks",
            "Name": "pager",
            "Value": "DBFind(#pager_table#, src_records).Where(#pager_where#).Count(records_count)\n\nSetVar(previous_page, Calculate(Exp: #current_page# - 1, Type: int))\nSetVar(next_page, Calculate(Exp: #current_page# + 1, Type: int))\nSetVar(count_div_limit_int, Calculate(Exp: (#records_count# / #pager_limit#), Type: int))\nSetVar(remainder, Calculate(Exp: (#records_count# / #pager_limit#) - #count_div_limit_int#, Type: float))\n\nIf(#remainder# != 0){\n\tSetVar(last_page, Calculate(Exp: #count_div_limit_int# + 1, Type: int))\n}.Else{\n\tSetVar(last_page, #count_div_limit_int#)\n}\n\nSetVar(last_page_plus_one, Calculate(Exp: #last_page# + 1, Type: int))\nSetVar(delta_last_page, Calculate(Exp: #last_page# - #current_page#))\nSetVar(range_l, Calculate(Exp: #current_page# - 4, Type: int))\nSetVar(range_r, Calculate(Exp: #current_page# + 6, Type: int))\nSetVar(range_l_max, Calculate(Exp: #last_page# - #pager_limit#, Type: int))\nSetVar(pager_limit_plus_one, Calculate(Exp: #pager_limit# + 1, Type: int))\n\nIf(#current_page# < 5){\n\tIf(#last_page# >= 10){\n\t\tRange(src_pages, 1, 11)\n\t}.Else{\n\t\tRange(src_pages, 1, #last_page_plus_one#) \n\t}\n}.ElseIf(#delta_last_page# < 6){\n\tIf(#range_l_max# > 0){\n\t\tRange(src_pages, #range_l_max#, #last_page_plus_one#)\n\t}.Else{\n\t\tRange(src_pages, 1, #last_page_plus_one#)\n\t}\n}.Else{\n\tRange(src_pages, #range_l#, #range_r#)\n}\n\nDiv(){\n\tSpan(){\n\t\tIf(#current_page# == 1){\n\t\t\tButton(Body: Em(Class: fa fa-angle-double-left), Class: btn btn-default disabled)\n\t\t}.Else{\n\t\t\tButton(Body: Em(Class: fa fa-angle-double-left), Class: btn btn-default, Page: #pager_page#, PageParams: \"current_page=1,sort=#sort#,width=#width#\")\n\t\t}\n\t}\n\tSpan(){\n\t\tIf(#current_page# == 1){\n\t\t\tButton(Body: Em(Class: fa fa-angle-left), Class: btn btn-default disabled)\n\t\t}.Else{\n\t\t\tButton(Body: Em(Class: fa fa-angle-left), Class: btn btn-default, Page: #pager_page#, PageParams: \"current_page=#previous_page#,sort=#sort#,width=#width#\")\n\t\t}\n\t}\n\tForList(src_pages){\n\t\tSpan(){\n\t\t\tIf(#id# == #current_page#){\n\t\t\t\tButton(Class: btn btn-primary float-left, Page: #pager_page#, PageParams: \"current_page=#id#,sort=#sort#,width=#width#\", Body: #id#)\n\t\t\t}.Else{\n\t\t\t\tButton(Class: btn btn-default float-left, Page: #pager_page#, PageParams: \"current_page=#id#,sort=#sort#,width=#width#\", Body: #id#)\n\t\t\t}\n\t\t}\n\t}\n\tSpan(){\n\t\tIf(#current_page# == #last_page#){\n\t\t\tButton(Body: Em(Class: fa fa-angle-right), Class: btn btn-default disabled)\n\t\t}.Else{\n\t\t\tButton(Body: Em(Class: fa fa-angle-right), Class: btn btn-default, Page: #pager_page#, PageParams: \"current_page=#next_page#,sort=#sort#,width=#width#\")\n\t\t}\n\t}\n\tSpan(){\n\t\tIf(#current_page# == #last_page#){\n\t\t\tButton(Body: Em(Class: fa fa-angle-double-right), Class: btn btn-default disabled)\n\t\t}.Else{\n\t\t\tButton(Body: Em(Class: fa fa-angle-double-right), Class: btn btn-default, Page: #pager_page#, PageParams: \"current_page=#last_page#,sort=#sort#,width=#width#\")\n\t\t}\n\t}\n}.Style(\"div {display:inline-block;}\")",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "blocks",
            "Name": "pager_header",
            "Value": "If(#current_page# > 0){}.Else{\n\tSetVar(current_page, 1)\n}\nSetVar(pager_offset, Calculate(Exp: (#current_page# - 1) * #pager_limit#, Type: int))\nSetVar(current_page, #current_page#)",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "blocks",
            "Name": "apps_select",
            "Value": "If(And(GetVar(this_page),#this_app_id#>0)){\r\n    DBFind(applications,apps)\r\n    Form(row form-group){\r\n        Div(col-sm-4){\r\n            Div(input-group){\r\n                Select(Name:AppId, Source:apps, NameColumn: name, ValueColumn: id, Value: #this_app_id#)\r\n                Div(input-group-btn){\r\n                    Button(Page:#this_page#, Class:btn btn-default fa fa-arrow-right, PageParams: \"this_app_id=Val(AppId)\")\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Conditions": "true"
        },
        {
            "Type": "contracts",
            "Name": "MainCondition",
            "Value": "contract MainCondition {\r\n    conditions {\r\n        if EcosysParam(\"founder_account\")!=$key_id && false {\r\n            warning \"MainCondition: Sorry, you do not have access to this action\"\r\n        }\r\n    }\r\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "contracts",
            "Name": "DelApplication",
            "Value": "contract DelApplication {\n    data {\n        ApplicationId int\n        Value int \"optional\"\n    }\n\n    conditions {\n        RowConditions(\"applications\", $ApplicationId, false)\n    }\n\n    action {\n        if $Value == 1 {\n            DBUpdate(\"applications\", $ApplicationId, \"deleted\", 1)\n        }\n        else {\n            DBUpdate(\"applications\", $ApplicationId, \"deleted\", 0)\n        } \n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "contracts",
            "Name": "EditAppParam",
            "Value": "contract EditAppParam {\n\tdata {\n\t\tId int\n\t\tValue string \"optional\"\n\t\tConditions string \"optional\"\n\t}\n\tfunc onlyConditions() bool {\n\t\treturn $Conditions && !$Value\n\t}\n\t\n\tconditions {\n\t\tRowConditions(\"app_params\", $Id, onlyConditions())\n\t\tif $Conditions {\n\t\t\tValidateCondition($Conditions, $ecosystem_id)\n\t\t}\n\t}\n\t\n\taction {\n\t\tvar pars, vals array\n\t\tif $Value {\n\t\t\tpars[0] = \"value\"\n\t\t\tvals[0] = $Value\n\t\t}\n\t\tif $Conditions {\n\t\t\tpars[Len(pars)] = \"conditions\"\n\t\t\tvals[Len(vals)] = $Conditions\n\t\t}\n\t\tif Len(vals) > 0 {\n\t\t\tDBUpdate(\"app_params\", $Id, Join(pars, \",\"), vals...)\n\t\t}\n\t}\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "contracts",
            "Name": "EditApplication",
            "Value": "contract EditApplication {\n    data {\n        ApplicationId int\n        Conditions string \"optional\"\n    }\n\tfunc onlyConditions() bool {\n\t\treturn $Conditions && false\n\t}\n\n    conditions {\n\t\tRowConditions(\"applications\", $ApplicationId, onlyConditions())\n\t\tif $Conditions {\n\t\t\tValidateCondition($Conditions, $ecosystem_id)\n\t\t}\n    }\n\n    action {\n\t\tvar pars, vals array\n\t\tif $Conditions {\n\t\t\tpars[0] = \"conditions\"\n\t\t\tvals[0] = $Conditions\n\t\t}\n\t\tif Len(vals) > 0 {\t\n\t\t\tDBUpdate(\"applications\", $ApplicationId, Join(pars, \",\"), vals...)\n\t\t}\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "contracts",
            "Name": "EditColumn",
            "Value": "contract EditColumn {\n\tdata {\n\t\tTableName string\n\t\tName string\n\t\tPermissions string\n\t}\n\t\n\tconditions {\n\t\tColumnCondition($TableName, $Name, \"\", $Permissions)\n\t}\n\t\n\taction {\n\t\tPermColumn($TableName, $Name, $Permissions)\n\t}\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "contracts",
            "Name": "EditLang",
            "Value": "contract EditLang {\n\tdata {\n        Id int\n\t\tTrans string \"optional\"\n\t\tValue array \"optional\"\n\t\tIdLanguage array \"optional\"\n\t}\n\t\n\tconditions {\n\t\tvar j int\n\t\twhile j < Len($IdLanguage) {\n\t\t\tif ($IdLanguage[j] == \"\"){\n\t\t\t\tinfo(\"Locale empty\")\n\t\t\t}\n\t\t\tif ($Value[j] == \"\"){\n\t\t\t\tinfo(\"Value empty\")\n\t\t\t}\n\t\t\tj = j + 1\n\t\t}\n\t\tEvalCondition(\"parameters\", \"changing_language\", \"value\")\n\t}\n\t\n\taction {\n\t\tvar i,len int\n\t\tvar res,langarr string\n\t\tlen = Len($IdLanguage)\n\t\twhile i < len {\n\t\t\tif (i + 1 == len){\n\t\t\t\tres = res + Sprintf(\"%q: %q\", $IdLanguage[i],$Value[i])\n\t\t\t}\n\t\t\telse {\n\t\t\t\tres = res + Sprintf(\"%q: %q, \", $IdLanguage[i],$Value[i])\n\t\t\t}\n\t\t\ti = i + 1\n\t\t}\n\t\tif (len > 0){\n\t\t\tlangarr = Sprintf(\"{\"+\"%v\"+\"}\", res)\n\t\t\t$Trans = langarr\n\t\t\tDBUpdate(\"languages\", $Id, \"res\", $Trans)\n\t\t\t//UpdateLang($Id, $Trans)\n\t\t}\n\t\telse {\n\t\t\tDBUpdate(\"languages\", $Id, \"res\", $Trans)\n\t\t\t//UpdateLang($Id, $Trans)\n\t\t}\n\t}\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "contracts",
            "Name": "EditParameter",
            "Value": "contract EditParameter {\n\tdata {\n\t\tId int\n\t\tValue string \"optional\"\n\t\tConditions string \"optional\"\n\t}\n\tfunc onlyConditions() bool {\n\t\treturn $Conditions && !$Value\n\t}\n\n\tconditions {\n\t\tRowConditions(\"parameters\", $Id, onlyConditions())\n\t\tif $Conditions {\n\t\t\tValidateCondition($Conditions, $ecosystem_id)\n\t\t}\n\t}\n\t\n\taction {\n\t\tvar pars, vals array\n\t\tif $Value {\n\t\t\tpars[0] = \"value\"\n\t\t\tvals[0] = $Value\n\t\t}\n\t\tif $Conditions {\n\t\t\tpars[Len(pars)] = \"conditions\"\n\t\t\tvals[Len(vals)] = $Conditions\n\t\t}\n\t\tif Len(vals) > 0 {\n\t\t\tDBUpdate(\"parameters\", $Id, Join(pars, \",\"), vals...)\n\t\t}\n\t}\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "contracts",
            "Name": "NewTable",
            "Value": "contract NewTable {\n    data {\n        ApplicationId int \"optional\"\n        Name string \"optional\"\n        Columns string \"optional\"\n        Permissions string \"optional\"\n        TableName string \"optional\"\n        Id array \"optional\"\n        Shareholding array \"optional\"\n        Insert_con string \"optional\"\n        Update_con string \"optional\"\n        New_column_con string \"optional\"\n    }\n    conditions {\n        if $ApplicationId == 0 {\n            warning \"Application id cannot equal 0\"\n        }\n\t}\n    \n    action {\n        if Size($Name) > 0 && Size($Columns) > 0 && Size($Permissions) > 0{\n            CreateTable($Name, $Columns, $Permissions, $ApplicationId)\n        } else {\n            var i,len int\n            var res string\n            len = Len($Id)\n\t\t\t\n            while i < len {\n                if i + 1 == len {\n                    res = res + Sprintf(\"{\\\"name\\\":%q,\\\"type\\\":%q,\\\"conditions\\\":\\\"true\\\"}\", $Id[i],$Shareholding[i])\n                }\n                else {\n                    res = res + Sprintf(\"{\\\"name\\\":%q,\\\"type\\\":%q,\\\"conditions\\\":\\\"true\\\"},\", $Id[i],$Shareholding[i])\n                }\n\t\t\t\ti = i + 1\n            }\n\n            $Name = $TableName\n            $Columns = Sprintf(\"[\"+\"%v\"+\"]\", res)\n            $Permissions = Sprintf(\"{\\\"insert\\\":%q,\\\"update\\\":%q,\\\"new_column\\\":%q}\",$Insert_con,$Update_con,$New_column_con)\n            CreateTable($Name, $Columns, $Permissions, $ApplicationId)\n        }\n    }\n    func rollback() {\n        RollbackTable($Name)\n    }\n    func price() int {\n        return SysParamInt(\"table_price\")\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "contracts",
            "Name": "UploadBinary",
            "Value": "contract UploadBinary {\n    data {\n        ApplicationId int \"optional\"\n        Name string\n        Data bytes \"file\"\n        DataMimeType string \"optional\"\n    }\n\n    conditions {\n        $Id = Int(DBFind(\"binaries\").Columns(\"id\").Where(\"app_id = ? AND member_id = ? AND name = ?\", $ApplicationId, $key_id, $Name).One(\"id\"))\n\t\t\n\t\tif $Id == 0 {\n\t\t\tif $ApplicationId == 0 {\n\t\t\t\twarning \"Application id cannot equal 0\"\n\t\t\t}\n\t\t}\n    }\n    action {\n        var hash string\n        hash = MD5($Data)\n\n        if $DataMimeType == \"\" {\n            $DataMimeType = \"application/octet-stream\"\n        }\n\n        if $Id != 0 {\n            DBUpdate(\"binaries\", $Id, \"data,hash,mime_type\", $Data, hash, $DataMimeType)\n        } else {\n            $Id = DBInsert(\"binaries\", \"app_id,member_id,name,data,hash,mime_type\", $ApplicationId, $key_id, $Name, $Data, hash, $DataMimeType)\n        }\n\n        $result = $Id\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "contracts",
            "Name": "Export",
            "Value": "contract Export {\n\n    func ReplaceValue(s string) string {\n\t\ts = Replace(s, `\\`, `\\\\`)\n        s = Replace(s, `\t`, `\\t`)\n        s = Replace(s, \"\\n\", `\\n`)\n        s = Replace(s, \"\\r\", `\\r`)\n        s = Replace(s, `\"`, `\\\"`)\n        return s\n    }\n\n    func AssignAll(app_name string, all_blocks string, all_contracts string, all_data string, all_languages string, all_menus string, all_pages string, all_parameters string, all_tables string) string {\n\n        var res_str string\n        res_str = res_str + all_blocks\n\n        if  Size(res_str)>0 && Size(all_contracts)>0  {\n            res_str = res_str + \",\"\n        }\n        res_str = res_str + all_contracts\n\n        if  Size(res_str)>0 && Size(all_data)>0  {\n            res_str = res_str + \",\"\n        }\n        res_str = res_str + all_data\n\n        if  Size(res_str)>0 && Size(all_languages)>0  {\n            res_str = res_str + \",\"\n        }\n        res_str = res_str + all_languages\n\n        if  Size(res_str)>0 && Size(all_menus)>0  {\n            res_str = res_str + \",\"\n        }\n        res_str = res_str + all_menus\n\n        if  Size(res_str)>0 && Size(all_pages)>0  {\n            res_str = res_str + \",\"\n        }\n        res_str = res_str + all_pages\n\n        if  Size(res_str)>0 && Size(all_parameters)>0  {\n            res_str = res_str + \",\"\n        }\n        res_str = res_str + all_parameters\n\n        if  Size(res_str)>0 && Size(all_tables)>0  {\n            res_str = res_str + \",\"\n        }\n        res_str = res_str + all_tables\n\n        res_str = Sprintf(`{\n    \"name\": \"%v\",\n    \"data\": [%v\n    ]\n}`, app_name, res_str)\n\n        return res_str\n    }\n\n    func AddPage(page_name string, page_value string, page_conditions string, page_menu string) string {\n        var s string\n        s = Sprintf(`        {\n            \"Type\": \"pages\",\n            \"Name\": \"%v\",\n            \"Value\": \"%v\",\n            \"Conditions\": \"%v\",\n            \"Menu\": \"%v\"\n        }`, page_name, page_value, page_conditions, page_menu)\n        return s\n    }\n\n    func AddMenu(menu_name string, menu_value string, menu_title string, menu_conditions string) string {\n        var s string\n        s = Sprintf(`        {\n            \"Type\": \"menu\",\n            \"Name\": \"%v\",\n            \"Value\": \"%v\",\n            \"Title\": \"%v\",\n            \"Conditions\": \"%v\"\n        }`, menu_name, menu_value, menu_title, menu_conditions)\n        return s\n    }\n\n    func AddContract(contract_name string, contract_value string, contract_conditions string) string {\n        var s string\n        s = Sprintf(`        {\n            \"Type\": \"contracts\",\n            \"Name\": \"%v\",\n            \"Value\": \"%v\",\n            \"Conditions\": \"%v\"\n        }`, contract_name, contract_value, contract_conditions)\n        return s\n    }\n\n    func AddBlock(block_name string, block_value string, block_conditions string) string {\n        var s string\n        s = Sprintf(`        {\n            \"Type\": \"blocks\",\n            \"Name\": \"%v\",\n            \"Value\": \"%v\",\n            \"Conditions\": \"%v\"\n        }`, block_name, block_value, block_conditions)\n        return s\n    }\n\n    func AddLanguage(language_name string, language_conditions string, language_trans string) string {\n        var s string\n        s = Sprintf(`        {\n            \"Type\": \"languages\",\n            \"Name\": \"%v\",\n            \"Conditions\": \"%v\",\n            \"Trans\": \"%v\"\n        }`, language_name, language_conditions, language_trans)\n        return s\n    }\n\n    func AddParameter(parameter_name string, parameter_value string, parameter_conditions string) string {\n        var s string\n        s = Sprintf(`        {\n            \"Type\": \"app_params\",\n            \"Name\": \"%v\",\n            \"Value\": \"%v\",\n            \"Conditions\": \"%v\"\n        }`, parameter_name, parameter_value, parameter_conditions)\n        return s\n    }\n\n    func AddTable(table_name string, table_columns string, table_permissions string) string {\n        var s string\n        s = Sprintf(`        {\n            \"Type\": \"tables\",\n            \"Name\": \"%v\",\n            \"Columns\": \"%v\",\n            \"Permissions\": \"%v\"\n        }`, table_name, table_columns, table_permissions)\n        return s\n    }\n\n    func AddTypeForColumns(table_name string, table_columns string) string {\n\t\tvar result string\n\n\t\ttable_columns = Replace(table_columns, \"{\", \"\")\n\t\ttable_columns = Replace(table_columns, \"}\", \"\")\n\t\ttable_columns = Replace(table_columns, \" \", \"\")\n\n\t\tvar columns_arr array\n\t\tcolumns_arr = Split(table_columns, \",\")\n\n\t\tvar i int\n\t\twhile (i < Len(columns_arr)){\n\t\t\tvar s_split string\n\t\t\ts_split = Str(columns_arr[i])\n\n\t\t\tif Size(s_split) > 0 {\n\t\t\t\tvar clm array\n\t\t\t\tclm = Split(s_split, \":\")\n\n\t\t\t\tvar s string\n\n\t\t\t\tif Len(clm) == 2 {\n\t\t\t\t\tvar col_name string\n\t\t\t\t\tvar col_cond string\n\t\t\t\t\tvar col_type string\n\n\t\t\t\t\tcol_name = Replace(Str(clm[0]), `\"`, \"\")\n\t\t\t\t\tcol_cond = Str(clm[1])\n\t\t\t\t\tcol_type = GetColumnType(table_name, col_name)\n\n\t\t\t\t\ts = Sprintf(`{\"name\":\"%v\",\"type\":\"%v\",\"conditions\":%v}`, col_name, col_type, col_cond)\n\t\t\t\t}\n\n                if Size(result) > 0 {\n                    result = result + \",\"\n\t\t\t\t}\n\t\t\t\tresult = result + s\n\t\t\t}\n\t\t\ti = i + 1\n\t\t}\n\n\t\tresult = Sprintf(\"[%v]\", result)\n\t\treturn result\n    }\n\n\n    data {}\n\n    conditions {\n        var buffer_map map\n        buffer_map = DBFind(\"buffer_data\").Columns(\"id,value->app_id,value->app_name\").Where(\"member_id=$ and key=$\", $key_id, \"export\").Row()\n        if !buffer_map{\n            warning \"Application not found\"\n        }\n        $ApplicationID = Int(buffer_map[\"value.app_id\"])\n        $ApplicationName = Str(buffer_map[\"value.app_name\"])\n    }\n\n    action {\n        //warning $ApplicationID\n\n        var full_result string\n        var i int\n\n        var all_blocks string\n        var all_contracts string\n        var all_data string\n        var all_languages string\n        var all_menus string\n        var all_pages string\n        var all_parameters string\n        var all_tables string\n\n        //=====================================================================================================\n        //------------------------------------Export pages-----------------------------------------------------\n        var string_for_menu string\n\n        i = 0\n        var pages_array array\n        pages_array = DBFind(\"pages\").Limit(250).Where(\"app_id=?\", $ApplicationID)\n        while i < Len(pages_array) {\n            var page_map map\n            page_map = pages_array[i]\n\n            var page_name string\n            var page_value string\n            var page_conditions string\n            var page_menu string\n\n            page_name = ReplaceValue(Str(page_map[\"name\"]))\n            page_value = ReplaceValue(Str(page_map[\"value\"]))\n            page_conditions = ReplaceValue(Str(page_map[\"conditions\"]))\n            page_menu = ReplaceValue(Str(page_map[\"menu\"]))\n\n            if Size(all_pages) > 0 {\n                all_pages = all_pages + \",\\r\\n\"\n            } else {\n                all_pages = all_pages + \"\\r\\n\"\n            }\n\n            if Size(string_for_menu) > 0 {\n                string_for_menu = string_for_menu + \",\"\n            }\n            string_for_menu = string_for_menu + Sprintf(\"'%v'\", page_menu)           \n\n            all_pages = all_pages + AddPage(page_name, page_value, page_conditions, page_menu)\n            i = i + 1\n        }\n\n        //=====================================================================================================\n        //------------------------------------Export menus-----------------------------------------------------\n        if Size(string_for_menu) > 0 {\n\n            var where_for_menu string\n            where_for_menu = Sprintf(\"name in (%v)\", string_for_menu)\n            //warning where_for_menu \n\n            i = 0\n            var menus_array array\n            menus_array = DBFind(\"menu\").Limit(250).Where(where_for_menu)\n            while i < Len(menus_array) {\n                var menu_map map\n                menu_map = menus_array[i]\n\n                var menu_name string\n                var menu_value string\n                var menu_title string\n                var menu_conditions string\n\n                menu_name = ReplaceValue(Str(menu_map[\"name\"]))\n                menu_value = ReplaceValue(Str(menu_map[\"value\"]))\n                menu_title = ReplaceValue(Str(menu_map[\"title\"]))\n                menu_conditions = ReplaceValue(Str(menu_map[\"conditions\"]))\n\n                if Size(all_menus) > 0 {\n                    all_menus = all_menus + \",\\r\\n\"\n                } else {\n                    all_menus = all_menus + \"\\r\\n\"\n                }\n\n                all_menus = all_menus + AddMenu(menu_name, menu_value, menu_title, menu_conditions)\n                i = i + 1\n            }\n\n        }\n\n        //=====================================================================================================\n        //------------------------------------Export contracts-------------------------------------------------\n\n        i = 0\n        var contracts_array array\n        contracts_array = DBFind(\"contracts\").Limit(250).Where(\"app_id=?\", $ApplicationID)\n        while i < Len(contracts_array) {\n            var contract_map map\n            contract_map = contracts_array[i]\n\n            var contract_name string\n            var contract_value string\n            var contract_conditions string\n\n            contract_name = ReplaceValue(Str(contract_map[\"name\"]))\n            contract_value = ReplaceValue(Str(contract_map[\"value\"]))\n            contract_conditions = ReplaceValue(Str(contract_map[\"conditions\"]))\n\n            if Size(all_contracts) > 0 {\n                all_contracts = all_contracts + \",\\r\\n\"\n            } else {\n                all_contracts = all_contracts + \"\\r\\n\"\n            }\n\n            all_contracts = all_contracts + AddContract(contract_name, contract_value, contract_conditions)\n            i = i + 1\n        }\n\n        //=====================================================================================================\n        //------------------------------------Export blocks----------------------------------------------------\n\n        i = 0\n        var blocks_array array\n        blocks_array = DBFind(\"blocks\").Limit(250).Where(\"app_id=?\", $ApplicationID)\n        while i < Len(blocks_array) {\n            var block_map map\n            block_map = blocks_array[i]\n\n            var block_name string\n            var block_value string\n            var block_conditions string\n\n            block_name = ReplaceValue(Str(block_map[\"name\"]))\n            block_value = ReplaceValue(Str(block_map[\"value\"]))\n            block_conditions = ReplaceValue(Str(block_map[\"conditions\"]))\n\n            if Size(all_blocks) > 0 {\n                all_blocks = all_blocks + \",\\r\\n\"\n            } else {\n                all_blocks = all_blocks + \"\\r\\n\"\n            }\n\n            all_blocks = all_blocks + AddBlock(block_name, block_value, block_conditions)\n            i = i + 1\n        }\n\n        //=====================================================================================================\n        //------------------------------------Export languages-------------------------------------------------\n\n        i = 0\n        var languages_array array\n        languages_array = DBFind(\"languages\").Limit(250).Where(\"app_id=?\", $ApplicationID)\n        while i < Len(languages_array) {\n            var language_map map\n            language_map = languages_array[i]\n\n            var language_name string\n            var language_conditions string\n            var language_trans string\n\n            language_name = ReplaceValue(Str(language_map[\"name\"]))\n            language_conditions = ReplaceValue(Str(language_map[\"conditions\"]))\n            language_trans = ReplaceValue(Str(language_map[\"res\"]))\n\n            if Size(all_languages) > 0 {\n                all_languages = all_languages + \",\\r\\n\"\n            } else {\n                all_languages = all_languages + \"\\r\\n\"\n            }\n\n            all_languages = all_languages + AddLanguage(language_name, language_conditions, language_trans)\n            i = i + 1\n        }\n\n        //=====================================================================================================\n        //------------------------------------Export params----------------------------------------------------\n\n        i = 0\n        var parameters_array array\n        parameters_array = DBFind(\"app_params\").Limit(250).Where(\"app_id=?\", $ApplicationID)\n        while i < Len(parameters_array) {\n            var parameter_map map\n            parameter_map = parameters_array[i]\n\n            var parameter_name string\n            var parameter_value string\n            var parameter_conditions string\n\n            parameter_name = ReplaceValue(Str(parameter_map[\"name\"]))\n            parameter_value = ReplaceValue(Str(parameter_map[\"value\"]))\n            parameter_conditions = ReplaceValue(Str(parameter_map[\"conditions\"]))\n\n            if Size(all_parameters) > 0 {\n                all_parameters = all_parameters + \",\\r\\n\"\n            } else {\n                all_parameters = all_parameters + \"\\r\\n\"\n            }\n\n            all_parameters = all_parameters + AddParameter(parameter_name, parameter_value, parameter_conditions)\n            i = i + 1\n        }\n\n        //=====================================================================================================\n        //------------------------------------Export tables----------------------------------------------------\n\n        i = 0\n        var tables_array array\n        tables_array = DBFind(\"tables\").Limit(250).Where(\"app_id=?\", $ApplicationID)\n        while i < Len(tables_array) {\n            var table_map map\n            table_map = tables_array[i]\n\n            var table_name string\n            var table_columns string\n            var table_permissions string\n\n            table_name = Str(table_map[\"name\"])\n            table_columns = Str(table_map[\"columns\"])\n\t\t\ttable_permissions = Str(table_map[\"permissions\"])\n\n\t\t\ttable_columns = AddTypeForColumns(table_name, table_columns)\n            \n\t\t\ttable_name = ReplaceValue(table_name)\n\t\t\ttable_columns = ReplaceValue(table_columns)\n\t\t\ttable_permissions = ReplaceValue(table_permissions)\n\n            if Size(all_tables) > 0 {\n                all_tables = all_tables + \",\\r\\n\"\n            } else {\n                all_tables = all_tables + \"\\r\\n\"\n            }\n\n            all_tables = all_tables + AddTable(table_name, table_columns, table_permissions)\n            i = i + 1\n        }\n\n        //=====================================================================================================\n\n        full_result = AssignAll($ApplicationName, all_blocks, all_contracts, all_data, all_languages, all_menus, all_pages, all_parameters, all_tables)\n        UploadBinary(\"Name,Data,ApplicationId,DataMimeType\", \"export\", full_result, 1, \"application/json\")\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "contracts",
            "Name": "EditTable",
            "Value": "contract EditTable {\n\tdata {\n\t\tName string\n\t\tPermissions string \"optional\"\n        Insert_con string \"optional\"\n    \tUpdate_con string \"optional\"\n    \tNew_column_con string \"optional\"\n\t}\n\t\n\tconditions {\n        var permissions string\n        permissions = Sprintf(\"{\\\"insert\\\":%q,\\\"update\\\":%q,\\\"new_column\\\":%q}\",$Insert_con,$Update_con,$New_column_con)\n        $Permissions = permissions\n\t\tTableConditions($Name, \"\", $Permissions)\n\t}\n\t\n\taction {\n\t\tPermTable($Name, $Permissions )\n\t}\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "contracts",
            "Name": "Import_Upload",
            "Value": "contract Import_Upload {\r\n    data {\r\n        input_file string \"file\"\r\n    }\r\n\r\n    conditions {\r\n        $input_file = BytesToString($input_file)\r\n        $limit = 20 // data piece size of import\r\n\r\n        // init buffer_data, cleaning old buffer\r\n        var initJson map\r\n        $import_id = DBFind(\"buffer_data\").Where(\"member_id=$ and key=$\", $key_id, \"import\").One(\"id\")\r\n        if $import_id {\r\n            $import_id = Int($import_id)\r\n            DBUpdate(\"buffer_data\", $import_id, \"value\", initJson)\r\n        } else {\r\n            $import_id = DBInsert(\"buffer_data\", \"member_id,key,value\", $key_id, \"import\", initJson)\r\n        }\r\n\r\n        $info_id = DBFind(\"buffer_data\").Where(\"member_id=$ and key=$\", $key_id, \"import_info\").One(\"id\")\r\n        if $info_id {\r\n            $info_id = Int($info_id)\r\n            DBUpdate(\"buffer_data\", $info_id, \"value\", initJson)\r\n        } else {\r\n            $info_id = DBInsert(\"buffer_data\", \"member_id,key,value\", $key_id, \"import_info\", initJson)\r\n        }\r\n    }\r\n\r\n    action {\r\n        var input map\r\n        input = JSONDecode($input_file)\r\n        var arr_data array\r\n        arr_data = input[\"data\"]\r\n\r\n        var pages_arr, blocks_arr, menu_arr, parameters_arr, languages_arr, contracts_arr, tables_arr array\r\n        \r\n        // import info\r\n        var i int\r\n        while i<Len(arr_data){\r\n            var tmp_object map\r\n            tmp_object = arr_data[i]\r\n\r\n            if tmp_object[\"Type\"] == \"pages\" {\r\n                pages_arr[Len(pages_arr)] = Str(tmp_object[\"Name\"])\r\n            }\r\n            if tmp_object[\"Type\"] == \"blocks\" {\r\n                blocks_arr[Len(blocks_arr)] = Str(tmp_object[\"Name\"])\r\n            }\r\n            if tmp_object[\"Type\"] == \"menu\" {\r\n                menu_arr[Len(menu_arr)] = Str(tmp_object[\"Name\"])\r\n            }\r\n            if tmp_object[\"Type\"] == \"app_params\" {\r\n                parameters_arr[Len(parameters_arr)] = Str(tmp_object[\"Name\"])\r\n            }\r\n            if tmp_object[\"Type\"] == \"languages\" {\r\n                languages_arr[Len(languages_arr)] = Str(tmp_object[\"Name\"])\r\n            }\r\n            if tmp_object[\"Type\"] == \"contracts\" {\r\n                contracts_arr[Len(contracts_arr)] = Str(tmp_object[\"Name\"])\r\n            }\r\n            if tmp_object[\"Type\"] == \"tables\" {\r\n                tables_arr[Len(tables_arr)] = Str(tmp_object[\"Name\"])\r\n            }\r\n\r\n            i = i + 1\r\n        }\r\n\r\n        var info_map map\r\n        info_map[\"app_name\"] = input[\"name\"]\r\n        info_map[\"pages\"] = Join(pages_arr, \", \")\r\n        info_map[\"pages_count\"] = Len(pages_arr)\r\n        info_map[\"blocks\"] = Join(blocks_arr, \", \")\r\n        info_map[\"blocks_count\"] = Len(blocks_arr)\r\n        info_map[\"menu\"] = Join(menu_arr, \", \")\r\n        info_map[\"menu_count\"] = Len(menu_arr)\r\n        info_map[\"parameters\"] = Join(parameters_arr, \", \")\r\n        info_map[\"parameters_count\"] = Len(parameters_arr)\r\n        info_map[\"languages\"] = Join(languages_arr, \", \")\r\n        info_map[\"languages_count\"] = Len(languages_arr)\r\n        info_map[\"contracts\"] = Join(contracts_arr, \", \")\r\n        info_map[\"contracts_count\"] = Len(contracts_arr)\r\n        info_map[\"tables\"] = Join(tables_arr, \", \")\r\n        info_map[\"tables_count\"] = Len(tables_arr)\r\n\r\n        if 0 == Len(pages_arr) + Len(blocks_arr) + Len(menu_arr) + Len(parameters_arr) + Len(languages_arr) + Len(contracts_arr) + Len(tables_arr) {\r\n            warning \"Invalid or empty import file\"\r\n        }\r\n\r\n        // import data\r\n        i=0\r\n        var sliced array\r\n        var arr_data_len int\r\n        arr_data_len = Len(arr_data)\r\n        while i <arr_data_len{\r\n            var part array\r\n            var l int\r\n            while l < $limit && (i+l < arr_data_len) {\r\n                part[l] = arr_data[i+l]\r\n                l=l+1\r\n            }\r\n            var batch map\r\n            batch[\"Data\"] = JSONEncode(part)\r\n            sliced[Len(sliced)] = batch\r\n            i=i+$limit\r\n        }\r\n        input[\"data\"] = sliced\r\n\r\n        // storing\r\n        DBUpdate(\"buffer_data\", $import_id, \"value\", input)\r\n        DBUpdate(\"buffer_data\", $info_id, \"value\", info_map)\r\n\r\n        var app_id int\r\n        app_id = DBFind(\"applications\").Columns(\"id\").Where(\"name=$\", Str(input[\"name\"])).One(\"id\")\r\n\r\n        if !app_id {\r\n            DBInsert(\"applications\", \"name,conditions\", Str(input[\"name\"]), \"true\")\r\n        }\r\n    }\r\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "contracts",
            "Name": "NewAppParam",
            "Value": "contract NewAppParam {\n    data {\n        ApplicationId int \"optional\"\n        Name string\n        Value string\n        Conditions string\n    }\n\n    conditions {\n        ValidateCondition($Conditions, $ecosystem_id)\n\n        if $ApplicationId == 0 {\n            warning \"Application id cannot equal 0\"\n        }\n\n        if DBFind(\"app_params\").Columns(\"id\").Where(\"name = ?\", $Name).One(\"id\") {\n            warning Sprintf( \"Application parameter %s already exists\", $Name)\n        }\n    }\n\n    action {\n        DBInsert(\"app_params\", \"app_id,name,value,conditions\", $ApplicationId, $Name, $Value, $Conditions)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "contracts",
            "Name": "NewApplication",
            "Value": "contract NewApplication {\n    data {\n        Name string\n        Conditions string\n    }\n\n    conditions {\n        ValidateCondition($Conditions, $ecosystem_id)\n\t\n        if Size($Name) == 0 {\n            warning \"Application name missing\"\n        }\n\n        if DBFind(\"applications\").Columns(\"id\").Where(\"name = ?\", $Name).One(\"id\") {\n            warning Sprintf( \"Application %s already exists\", $Name)\n        }\n    }\n\n    action {\n        $result = DBInsert(\"applications\", \"name,conditions\", $Name, $Conditions)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "contracts",
            "Name": "NewBlock",
            "Value": "contract NewBlock {\n    data {\n        ApplicationId int \"optional\"\n        Name string\n        Value string\n        Conditions string\n    }\n\n    conditions {\n        ValidateCondition($Conditions, $ecosystem_id)\n\n        if $ApplicationId == 0 {\n            warning \"Application id cannot equal 0\"\n        }\n\n        if DBFind(\"blocks\").Columns(\"id\").Where(\"name = ?\", $Name).One(\"id\") {\n            warning Sprintf( \"Block %s already exists\", $Name)\n        }\n    }\n\n    action {\n        DBInsert(\"blocks\", \"name,value,conditions,app_id\", $Name, $Value, $Conditions, $ApplicationId)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "contracts",
            "Name": "NewColumn",
            "Value": "contract NewColumn {\n    data {\n        TableName string\n        Name string\n        Type string\n        Permissions string\n    }\n    conditions {\n        ColumnCondition($TableName, $Name, $Type, $Permissions)\n    }\n    action {\n        CreateColumn($TableName, $Name, $Type, $Permissions)\n    }\n    func rollback() {\n        RollbackColumn($TableName, $Name)\n    }\n    func price() int {\n        return SysParamInt(\"column_price\")\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "contracts",
            "Name": "NewContract",
            "Value": "contract NewContract {\n    data {\n        ApplicationId int \"optional\"\n        Value string\n        Conditions string\n        Wallet string \"optional\"\n        TokenEcosystem int \"optional\"\n    }\n\n    conditions {\n        ValidateCondition($Conditions,$ecosystem_id)\n\t\t\n        if $ApplicationId == 0 {\n            warning \"Application id cannot equal 0\"\n        }\n\t\t\n        $walletContract = $key_id\n        if $Wallet {\n            $walletContract = AddressToId($Wallet)\n            if $walletContract == 0 {\n                error Sprintf(\"wrong wallet %s\", $Wallet)\n            }\n        }\n        var list array\n        list = ContractsList($Value)\n\n        if Len(list) == 0 {\n            error \"must be the name\"\n        }\n\n        var i int\n        while i < Len(list) {\n            if IsObject(list[i], $ecosystem_id) {\n                warning Sprintf(\"Contract or function %s exists\", list[i])\n            }\n            i = i + 1\n        }\n\n        $contract_name = list[0]\n        if !$TokenEcosystem {\n            $TokenEcosystem = 1\n        } else {\n            if !SysFuel($TokenEcosystem) {\n                warning Sprintf(\"Ecosystem %d is not system\", $TokenEcosystem)\n            }\n        }\n    }\n\n    action {\n        var root, id int\n        root = CompileContract($Value, $ecosystem_id, $walletContract, $TokenEcosystem)\n        id = DBInsert(\"contracts\", \"name,value,conditions, wallet_id, token_id,app_id\", $contract_name, $Value, $Conditions, $walletContract, $TokenEcosystem, $ApplicationId)\n        FlushContract(root, id, false)\n        $result = id\n    }\n    func rollback() {\n        var list array\n        list = ContractsList($Value)\n        var i int\n        while i < Len(list) {\n            RollbackContract(list[i])\n            i = i + 1\n        }\n    }\n    func price() int {\n        return SysParamInt(\"contract_price\")\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "contracts",
            "Name": "NewLang",
            "Value": "contract NewLang {\r\n    data {\r\n        ApplicationId int \"optional\"\r\n        Name string\r\n        Trans string \"optional\"\r\n        Value array \"optional\"\r\n        IdLanguage array \"optional\"\r\n    }\r\n\r\n    conditions {\r\n        if $ApplicationId == 0 {\r\n            warning \"Application id cannot equal 0\"\r\n        }\r\n\r\n        if DBFind(\"languages\").Columns(\"id\").Where(\"name = ?\", $Name).One(\"id\") {\r\n            warning Sprintf( \"Language resource %s already exists\", $Name)\r\n        }\r\n\r\n        var j int\r\n        while j < Len($IdLanguage) {\r\n            if $IdLanguage[j] == \"\" {\r\n                info(\"Locale empty\")\r\n            }\r\n            if $Value[j] == \"\" {\r\n                info(\"Value empty\")\r\n            }\r\n            j = j + 1\r\n        }\r\n        EvalCondition(\"parameters\", \"changing_language\", \"value\")\r\n    }\r\n\r\n    action {\r\n        if Len($IdLanguage) > 0 {\r\n            var trans map\r\n            var i int\r\n            while i < Len($IdLanguage) {\r\n                var lang, val string\r\n                lang = $IdLanguage[i]\r\n                val = $Value[i]\r\n                trans[lang] = val\r\n                i = i + 1\r\n            }\r\n            $Id = DBInsert(\"languages\", \"name,res,app_id\", $Name, trans, $ApplicationId)\r\n        } else {\r\n            $Id = DBInsert(\"languages\", \"name,res,app_id\", $Name, $Trans, $ApplicationId)\r\n        }\r\n    }\r\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "contracts",
            "Name": "NewMenu",
            "Value": "contract NewMenu {\n    data {\n        Name string\n        Value string\n        Title string \"optional\"\n        Conditions string\n    }\n\n    conditions {\n        ValidateCondition($Conditions,$ecosystem_id)\n\n        if DBFind(\"menu\").Columns(\"id\").Where(\"name = ?\", $Name).One(\"id\") {\n            warning Sprintf( \"Menu %s already exists\", $Name)\n        }\n    }\n\n    action {\n        DBInsert(\"menu\", \"name,value,title,conditions\", $Name, $Value, $Title, $Conditions)\n    }\n    func price() int {\n        return SysParamInt(\"menu_price\")\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "contracts",
            "Name": "NewPage",
            "Value": "contract NewPage {\n    data {\n        ApplicationId int \"optional\"\n        Name string\n        Value string\n        Menu string\n        Conditions string\n        ValidateCount int \"optional\"\n    }\n    func preparePageValidateCount(count int) int {\n        var min, max int\n        min = Int(EcosysParam(\"min_page_validate_count\"))\n        max = Int(EcosysParam(\"max_page_validate_count\"))\n\n        if count < min {\n            count = min\n        } else {\n            if count > max {\n                count = max\n            }\n        }\n        return count\n    }\n\n    conditions {\n        ValidateCondition($Conditions,$ecosystem_id)\n\n        if $ApplicationId == 0 {\n            warning \"Application id cannot equal 0\"\n        }\n\n        if DBFind(\"pages\").Columns(\"id\").Where(\"name = ?\", $Name).One(\"id\") {\n            warning Sprintf( \"Block %s already exists\", $Name)\n        }\n\n        $ValidateCount = preparePageValidateCount($ValidateCount)\n    }\n\n    action {\n        DBInsert(\"pages\", \"name,value,menu,validate_count,conditions,app_id\", $Name, $Value, $Menu, $ValidateCount, $Conditions, $ApplicationId)\n    }\n    func price() int {\n        return SysParamInt(\"page_price\")\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "contracts",
            "Name": "NewParameter",
            "Value": "contract NewParameter {\n    data {\n        Name string\n        Value string\n        Conditions string\n    }\n    \n    conditions {\n        ValidateCondition($Conditions, $ecosystem_id)\n        \n        if DBFind(\"parameters\").Columns(\"id\").Where(\"name = ?\", $Name).One(\"id\") {\n            warning Sprintf(\"Parameter %s already exists\", $Name)\n        }\n    }\n    \n    action {\n        DBInsert(\"parameters\", \"name,value,conditions\", $Name, $Value, $Conditions)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "contracts",
            "Name": "Import",
            "Value": "contract Import {\r\n    data {\r\n        Data string\r\n    }\r\n\r\n    conditions {\r\n        $ApplicationId = 0\r\n\r\n        var app_map map\r\n        app_map = DBFind(\"buffer_data\").Columns(\"value->app_name\").Where(\"key='import_info' and member_id=$\", $key_id).Row()\r\n        if app_map{\r\n            var app_id int\r\n            app_id = DBFind(\"applications\").Columns(\"id\").Where(\"name=$\", Str(app_map[\"value.app_name\"])).One(\"id\")\r\n            if app_id {\r\n                $ApplicationId = Int(app_id)\r\n            }\r\n        }\r\n    }\r\n\r\n    action {\r\n        var editors, creators map\r\n        editors[\"pages\"] = \"EditPage\"\r\n        editors[\"blocks\"] = \"EditBlock\"\r\n        editors[\"menu\"] = \"EditMenu\"\r\n        editors[\"app_params\"] = \"EditAppParam\"\r\n        editors[\"languages\"] = \"EditLang\"\r\n        editors[\"contracts\"] = \"EditContract\"\r\n        editors[\"tables\"] = \"\" // nothing\r\n\r\n        creators[\"pages\"] = \"NewPage\"\r\n        creators[\"blocks\"] = \"NewBlock\"\r\n        creators[\"menu\"] = \"NewMenu\"\r\n        creators[\"app_params\"] = \"NewAppParam\"\r\n        creators[\"languages\"] = \"NewLang\"\r\n        creators[\"contracts\"] = \"NewContract\"\r\n        creators[\"tables\"] = \"NewTable\"\r\n\r\n        var dataImport array\r\n        dataImport = JSONDecode($Data)\r\n        var i int\r\n        while i<Len(dataImport){\r\n            var item, cdata map\r\n            cdata = dataImport[i]\r\n            cdata[\"ApplicationId\"] = $ApplicationId\r\n            $Type = cdata[\"Type\"]\r\n            $Name = cdata[\"Name\"]\r\n\r\n            Println(Sprintf(\"import %v: %v\",  $Type, cdata[\"Name\"]))\r\n\r\n            item = DBFind($Type).Where(\"name=?\", $Name).Row()\r\n            var contractName string\r\n            if item {\r\n                contractName = editors[$Type]\r\n                cdata[\"Id\"] = Int(item[\"id\"])\r\n                if $Type == \"menu\"{\r\n                    var menu menuItem string\r\n                    menu = Replace(item[\"value\"], \" \", \"\")\r\n                    menu = Replace(menu, \"\\n\", \"\")\r\n                    menu = Replace(menu, \"\\r\", \"\")\r\n                    menuItem = Replace(cdata[\"Value\"], \" \", \"\")\r\n                    menuItem = Replace(menuItem, \"\\n\", \"\")\r\n                    menuItem = Replace(menuItem, \"\\r\", \"\")\r\n                    if Contains(menu, menuItem) {\r\n                        // ignore repeated\r\n                        contractName = \"\"\r\n                    }else{\r\n                        cdata[\"Value\"] = item[\"value\"] + \"\\n\" + cdata[\"Value\"]\r\n                    }\r\n                }\r\n            } else {\r\n                contractName = creators[$Type]\r\n            }\r\n\r\n            if contractName != \"\"{\r\n                CallContract(contractName, cdata)\r\n            }\r\n            i=i+1\r\n        }\r\n        Println(Sprintf(\"> time: %v\", $time))\r\n    }\r\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "contracts",
            "Name": "Export_NewApp",
            "Value": "contract Export_NewApp {\n    data {\n        app_id int\n    }\n\n    conditions {\n        $app_map = DBFind(\"applications\").Columns(\"id,name\").Where(\"id=$\", $app_id).Row()\n        if !$app_map{\n            warning \"Application not found\"\n        }\n    }\n\n    action {\n\n        //=====================================================================================================\n        //------------------------------------Menu search------------------------------------------------------\n        var i int\n        var pages_array array\n        var menu_name_array array\n\t\tvar menu_id_array array\n\n        i = 0\n        var pages_ret array\n        pages_ret = DBFind(\"pages\").Where(\"app_id=?\", $app_id)\n        while i < Len(pages_ret) {\n            var page_map map\n            page_map = pages_ret[i]\n\n            pages_array[Len(pages_array)] = Sprintf(\"'%v'\", Str(page_map[\"menu\"]))\n            i = i + 1\n        }\n\n        if Len(pages_array) > 0 {\n            var where_for_menu string\n            where_for_menu = Sprintf(\"name in (%v)\", Join(pages_array, \",\"))\n\n            i = 0\n            var menu_ret array\n            menu_ret = DBFind(\"menu\").Where(where_for_menu)\n            while i < Len(menu_ret) {\n                var menu_map map\n                menu_map = menu_ret[i]\n\n                menu_name_array[Len(menu_name_array)] = Str(menu_map[\"name\"])\n\t\t\t\tmenu_id_array[Len(menu_id_array)] = Str(menu_map[\"id\"])\n                i = i + 1\n            }\n        }\n\n        //=====================================================================================================\n        //------------------------------------Creating settings------------------------------------------------\n    \n        var value map\n        value[\"app_id\"] = Str($app_id)\n        value[\"app_name\"] = Str($app_map[\"name\"])\n\t\t\n\t\tif Len(menu_name_array) > 0 {\n\t\t\tvalue[\"menu_id\"] = Str(Join(menu_id_array, \", \"))\n\t\t\tvalue[\"menu_name\"] = Str(Join(menu_name_array, \", \"))\n\t\t\tvalue[\"count_menu\"] = Str(Len(menu_name_array))\n\t\t} else {\n\t\t\tvalue[\"menu_id\"] = \"0\"\n\t\t\tvalue[\"menu_name\"] = \"\"\n\t\t\tvalue[\"count_menu\"] = \"0\"\n\t\t}\n\n        $buffer_id = DBFind(\"buffer_data\").Where(\"member_id=$ and key=$\", $key_id, \"export\").One(\"id\")\n        if !$buffer_id {\n            DBInsert(\"buffer_data\", \"member_id,key,value\", $key_id, \"export\", value)\n        } else {\n            DBUpdate(\"buffer_data\", Int($buffer_id), \"value\", value)\n        }\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "contracts",
            "Name": "EditBlock",
            "Value": "contract EditBlock {\n\tdata {\n\t\tId int\n\t\tValue string \"optional\"\n\t\tConditions string \"optional\"\n\t}\n\tfunc onlyConditions() bool {\n\t\treturn $Conditions && !$Value\n\t}\n\n\tconditions {\n\t\tRowConditions(\"blocks\", $Id, onlyConditions())\n\t\tif $Conditions {\n\t\t\tValidateCondition($Conditions, $ecosystem_id)\n\t\t}\n\t}\n\t\n\taction {\n\t\tvar pars, vals array\n\t\tif $Value {\n\t\t\tpars[0] = \"value\"\n\t\t\tvals[0] = $Value\n\t\t}\n\t\tif $Conditions {\n\t\t\tpars[Len(pars)] = \"conditions\"\n\t\t\tvals[Len(vals)] = $Conditions\n\t\t}\n\t\tif Len(vals) > 0 {\n\t\t\tDBUpdate(\"blocks\", $Id, Join(pars, \",\"), vals...)\n\t\t}\n\t}\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "contracts",
            "Name": "EditMenu",
            "Value": "contract EditMenu {\n\tdata {\n\t\tId int\n\t\tValue string \"optional\"\n\t\tTitle string \"optional\"\n\t\tConditions string \"optional\"\n\t}\n\tfunc onlyConditions() bool {\n\t\treturn $Conditions && !$Value && !$Title\n\t}\n\n\tconditions {\n\t\tRowConditions(\"menu\", $Id, onlyConditions())\n\t\tif $Conditions {\n\t\t\tValidateCondition($Conditions, $ecosystem_id)\n\t\t}\n\t}\n\t\n\taction {\n\t\tvar pars, vals array\n\t\tif $Value {\n\t\t\tpars[0] = \"value\"\n\t\t\tvals[0] = $Value\n\t\t}\n\t\tif $Title {\n\t\t\tpars[Len(pars)] = \"title\"\n\t\t\tvals[Len(vals)] = $Title\n\t\t}\n\t\tif $Conditions {\n\t\t\tpars[Len(pars)] = \"conditions\"\n\t\t\tvals[Len(vals)] = $Conditions\n\t\t}\n\t\tif Len(vals) > 0 {\n\t\t\tDBUpdate(\"menu\", $Id, Join(pars, \",\"), vals...)\n\t\t}\t\t\t\n\t}\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "contracts",
            "Name": "EditPage",
            "Value": "contract EditPage {\n\tdata {\n\t\tId int\n\t\tValue string \"optional\"\n\t\tMenu string \"optional\"\n\t\tConditions string \"optional\"\n\t\tValidateCount int \"optional\"\n\t\tValidateMode  string \"optional\"\n\t}\n\tfunc onlyConditions() bool {\n\t\treturn $Conditions && !$Value && !$Menu && !$ValidateCount \n\t}\n\tfunc preparePageValidateCount(count int) int {\n\t\tvar min, max int\n\t\tmin = Int(EcosysParam(\"min_page_validate_count\"))\n\t\tmax = Int(EcosysParam(\"max_page_validate_count\"))\n\t\tif count < min {\n\t\t\tcount = min\n\t\t} else {\n\t\t\tif count > max {\n\t\t\t\tcount = max\n\t\t\t}\n\t\t}\n\t\treturn count\n\t}\n\t\n\tconditions {\n\t\tRowConditions(\"pages\", $Id, onlyConditions())\n\t\tif $Conditions {\n\t\t\tValidateCondition($Conditions, $ecosystem_id)\n\t\t}\n\t\t$ValidateCount = preparePageValidateCount($ValidateCount)\n\t}\n\t\n\taction {\n\t\tvar pars, vals array\n\t\tif $Value {\n\t\t\tpars[0] = \"value\"\n\t\t\tvals[0] = $Value\n\t\t}\n\t\tif $Menu {\n\t\t\tpars[Len(pars)] = \"menu\"\n\t\t\tvals[Len(vals)] = $Menu\n\t\t}\n\t\tif $Conditions {\n\t\t\tpars[Len(pars)] = \"conditions\"\n\t\t\tvals[Len(vals)] = $Conditions\n\t\t}\n\t\tif $ValidateCount {\n\t\t\tpars[Len(pars)] = \"validate_count\"\n\t\t\tvals[Len(vals)] = $ValidateCount\n\t\t}\n\t\tif $ValidateMode {\n\t\t\tif $ValidateMode != \"1\" {\n\t\t\t\t$ValidateMode = \"0\"\n\t\t\t}\n\t\t\tpars[Len(pars)] = \"validate_mode\"\n\t\t\tvals[Len(vals)] = $ValidateMode\n\t\t}\n\t\tif Len(vals) > 0 {\n\t\t\tDBUpdate(\"pages\", $Id, Join(pars, \",\"), vals...)\n\t\t}\n\t}\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "contracts",
            "Name": "EditContract",
            "Value": "contract EditContract {\n\tdata {\n\t\tId int\n\t\tValue string \"optional\"\n\t\tConditions string \"optional\"\n\t\tWalletId string \"optional\"\n\t}\n\tfunc onlyConditions() bool {\n\t\treturn $Conditions && !$Value && !$WalletId\n\t}\n\n\tconditions {\n\t\tRowConditions(\"contracts\", $Id, onlyConditions())\n\t\tif $Conditions {\n\t\t\tValidateCondition($Conditions, $ecosystem_id)\n\t\t}\n\t\t$cur = DBFind(\"contracts\").Columns(\"id,value,conditions,active,wallet_id,token_id\").WhereId($Id).Row()\n\t\tif !$cur {\n\t\t\terror Sprintf(\"Contract %d does not exist\", $Id)\n\t\t}\n\t\tif $Value {\n\t\t\tvar list, curlist array\n\t\t\tlist = ContractsList($Value)\n\t\t\tcurlist = ContractsList($cur[\"value\"])\n\t\t\tif Len(list) != Len(curlist) {\n\t\t\t\terror \"Contracts cannot be removed or inserted\"\n\t\t\t}\n\t\t\tvar i int\n\t\t\twhile i < Len(list) {\n\t\t\t\tvar j int\n\t\t\t\tvar ok bool\n\t\t\t\twhile j < Len(curlist) {\n\t\t\t\t\tif curlist[j] == list[i] {\n\t\t\t\t\t\tok = true\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tj = j + 1 \n\t\t\t\t}\n\t\t\t\tif !ok {\n\t\t\t\t\terror \"Contracts or functions names cannot be changed\"\n\t\t\t\t}\n\t\t\t\ti = i + 1\n\t\t\t}\n\t\t}\n\t\tif $WalletId != \"\" {\n\t\t\t$recipient = AddressToId($WalletId)\n\t\t\tif $recipient == 0 {\n\t\t\t\terror Sprintf(\"New contract owner %s is invalid\", $WalletId)\n\t\t\t}\n\t\t\tif Int($cur[\"active\"]) == 1 {\n\t\t\t\terror \"Contract must be deactivated before wallet changing\"\n\t\t\t}\n\t\t} else {\n\t\t\t$recipient = Int($cur[\"wallet_id\"])\n\t\t}\n\t}\n\t\n\taction {\n\t\tvar root int\n\t\tvar pars, vals array\n\t\tif $Value {\n\t\t\troot = CompileContract($Value, $ecosystem_id, $recipient, Int($cur[\"token_id\"]))\n\t\t\tpars[0] = \"value\"\n\t\t\tvals[0] = $Value\n\t\t}\n\t\tif $Conditions {\n\t\t\tpars[Len(pars)] = \"conditions\"\n\t\t\tvals[Len(vals)] = $Conditions\n\t\t}\n\t\tif $WalletId != \"\" {\n\t\t\tpars[Len(pars)] = \"wallet_id\"\n\t\t\tvals[Len(vals)] = $recipient\n\t\t}\n\t\tif Len(vals) > 0 {\n\t\t\tDBUpdate(\"contracts\", $Id, Join(pars, \",\"), vals...)\n\t\t}\t\t\n\t\tif $Value {\n\t\t\tFlushContract(root, $Id, Int($cur[\"active\"]) == 1)\n\t\t} else {\n\t\t\tif $WalletId != \"\" {\n\t\t\t\tSetContractWallet($Id, $ecosystem_id, $recipient)\n\t\t\t}\n\t\t}\n\t}\n\tfunc rollback() {\n\t\tRollbackEditContract()\n\t}\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "contracts",
            "Name": "MoneyTransfer",
            "Value": "contract MoneyTransfer {\r\n\tdata {\r\n\t\tRecipient string\r\n\t\tAmount    string\r\n\t\tComment     string \"optional\"\r\n\t}\r\n\tconditions {\r\n\t\t$recipient = AddressToId($Recipient)\r\n\t\tif $recipient == 0 {\r\n\t\t\terror Sprintf(\"Recipient %s is invalid\", $Recipient)\r\n\t\t}\r\n\t\tvar total money\r\n\t\t$amount = Money($Amount) \r\n\t\tif $amount <= 0 {\r\n\t\t\terror \"Amount must be greater then zero\"\r\n\t\t}\r\n\r\n\t\tvar row map\r\n\t\trow = DBRow(\"keys\").Columns(\"amount\").WhereId($key_id)\r\n\t\ttotal = Money(row[\"amount\"])\r\n\t\tif $amount >= total {\r\n\t\t\terror Sprintf(\"Money is not enough %v < %v\",total, $amount)\r\n\t\t}\r\n\t}\r\n\taction {\r\n\t\tDBUpdate(\"keys\", $key_id,\"-amount\", $amount)\r\n\t\tif DBFind(\"keys\").Columns(\"id\").WhereId($recipient).One(\"id\") == nil {\r\n\t\t\tDBInsert(\"keys\", \"id,amount\",  $recipient, $amount)\r\n\t\t} else {\r\n\t\t\tDBUpdate(\"keys\", $recipient,\"+amount\", $amount)\r\n\t\t}\r\n\t\t//DBInsert(\"history\", \"sender_id,recipient_id,amount,comment,block_id,txhash\",\r\n\t\t//\t\t$key_id, $recipient, $amount, $Comment, $block, $txhash)\r\n\t}\r\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "contracts",
            "Name": "ActivateContract",
            "Value": "contract ActivateContract {\n\tdata {\n\t\tId  int\n\t}\n\tconditions {\n\t\t$cur = DBRow(\"contracts\").Columns(\"id,conditions,active,wallet_id\").WhereId($Id)\n\t\tif !$cur {\n\t\t\terror Sprintf(\"Contract %d does not exist\", $Id)\n\t\t}\n\t\tif Int($cur[\"active\"]) == 1 {\n\t\t\terror Sprintf(\"The contract %d has been already activated\", $Id)\n\t\t}\n\t\tEval($cur[\"conditions\"])\n\t\tif $key_id != Int($cur[\"wallet_id\"]) {\n\t\t\terror Sprintf(\"Wallet %d cannot activate the contract\", $key_id)\n\t\t}\n\t}\n\taction {\n\t\tDBUpdate(\"contracts\", $Id, \"active\", 1)\n\t\tActivate($Id, $ecosystem_id)\n\t}\n\tfunc rollback() {\n\t\tDeactivate($Id, $ecosystem_id)\n\t}\n\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "contracts",
            "Name": "NewEcosystem",
            "Value": "contract NewEcosystem {\n\tdata {\n\t\tName  string\n\t}\n\taction {\n\t\t$result = CreateEcosystem($key_id, $Name)\n\t}\n\tfunc price() int {\n\t\treturn  SysParamInt(\"ecosystem_price\")\n\t}\n\tfunc rollback() {\n\t\tRollbackEcosystem()\n\t}\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "contracts",
            "Name": "AppendMenu",
            "Value": "contract AppendMenu {\n\tdata {\n\t\tId     int\n\t\tValue      string\n\t}\n\tconditions {\n\t\tConditionById(\"menu\", false)\n\t}\n\taction {\n\t\tvar row map\n\t\trow = DBRow(\"menu\").Columns(\"value\").WhereId($Id)\n\t\tDBUpdate(\"menu\", $Id, \"value\", row[\"value\"] + \"\\r\\n\" + $Value)\n\t}\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "contracts",
            "Name": "AppendPage",
            "Value": "contract AppendPage {\n\tdata {\n\t\tId         int\n\t\tValue      string\n\t}\n\tconditions {\n\t\tRowConditions(\"pages\", $Id, false)\n\t}\n\taction {\n\t\tvar value string\n\t\tvar row map\n\t\trow = DBRow(\"pages\").Columns(\"value\").WhereId($Id)\n\t\tvalue = row[\"value\"]\n\t\tif Contains(value, \"PageEnd:\") {\n\t\t\tvalue = Replace(value, \"PageEnd:\", $Value) + \"\\r\\nPageEnd:\"\n\t\t} else {\n\t\t\tvalue = value + \"\\r\\n\" + $Value\n\t\t}\n\t\tDBUpdate(\"pages\", $Id, \"value\",  value )\n\t}\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "contracts",
            "Name": "NewSign",
            "Value": "contract NewSign {\n\tdata {\n\t\tName       string\n\t\tValue      string\n\t\tConditions string\n\t}\n\tconditions {\n\t\tValidateCondition($Conditions,$ecosystem_id)\n\t\tvar exist string\n\n\t\tvar row map\n\t\trow = DBRow(\"signatures\").Columns(\"id\").Where(\"name = ?\", $Name)\n\n\t\tif row {\n\t\t\terror Sprintf(\"The signature %s already exists\", $Name)\n\t\t}\n\t}\n\taction {\n\t\tDBInsert(\"signatures\", \"name,value,conditions\", $Name, $Value, $Conditions )\n\t}\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "contracts",
            "Name": "EditSign",
            "Value": "contract EditSign {\n\tdata {\n\t\tId         int\n\t\tValue      string \"optional\"\n\t\tConditions string \"optional\"\n\t}\n\n\tfunc onlyConditions() bool {\n\t\treturn $Conditions && !$Value\n\t}\n\tconditions {\n\t\tRowConditions(\"signatures\", $Id, onlyConditions())\n\t\tif $Conditions {\n\t\t\tValidateCondition($Conditions, $ecosystem_id)\n\t\t}\n\t}\n\taction {\n\t\tvar pars, vals array\n\t\tif $Value {\n\t\t\tpars[0] = \"value\"\n\t\t\tvals[0] = $Value\n\t\t}\n\t\tif $Conditions {\n\t\t\tpars[Len(pars)] = \"conditions\"\n\t\t\tvals[Len(vals)] = $Conditions\n\t\t}\n\t\tif Len(vals) > 0 {\n\t\t\tDBUpdate(\"signatures\", $Id, Join(pars, \",\"), vals...)\n\t\t}\n\t}\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "contracts",
            "Name": "DeactivateContract",
            "Value": "contract DeactivateContract {\n\tdata {\n\t\tId         int\n\t}\n\tconditions {\n\t\t$cur = DBRow(\"contracts\").Columns(\"id,conditions,active,wallet_id\").WhereId($Id)\n\t\tif !$cur {\n\t\t\terror Sprintf(\"Contract %d does not exist\", $Id)\n\t\t}\n\t\tif Int($cur[\"active\"]) == 0 {\n\t\t\terror Sprintf(\"The contract %d has been already deactivated\", $Id)\n\t\t}\n\t\tEval($cur[\"conditions\"])\n\t\tif $key_id != Int($cur[\"wallet_id\"]) {\n\t\t\terror Sprintf(\"Wallet %d cannot deactivate the contract\", $key_id)\n\t\t}\n\t}\n\taction {\n\t\tDBUpdate(\"contracts\", $Id, \"active\", 0)\n\t\tDeactivate($Id, $ecosystem_id)\n\t}\n\tfunc rollback() {\n\t\tActivate($Id, $ecosystem_id)\n\t}\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "contracts",
            "Name": "UpdateSysParam",
            "Value": "contract UpdateSysParam {\n\tdata {\n\t\tName  string\n\t\tValue string\n\t\tConditions string \"optional\"\n\t}\n\taction {\n\t\tDBUpdateSysParam($Name, $Value, $Conditions )\n\t}\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "contracts",
            "Name": "NewDelayedContract",
            "Value": "contract NewDelayedContract {\n\tdata {\n\t\tContract string\n\t\tEveryBlock int\n\t\tConditions string\n\t\tBlockID int \"optional\"\n\t\tLimit int \"optional\"\n\t}\n\tconditions {\n\t\tValidateCondition($Conditions, $ecosystem_id)\n\n\t\tif !HasPrefix($Contract, \"@\") {\n\t\t\t$Contract = \"@\" + Str($ecosystem_id) + $Contract\n\t\t}\n\n\t\tif GetContractByName($Contract) == 0 {\n\t\t\terror Sprintf(\"Unknown contract %s\", $Contract)\n\t\t}\n\n\t\tif $BlockID == 0 {\n\t\t\t$BlockID = $block + $EveryBlock\n\t\t}\n\n\t\tif $BlockID <= $block {\n\t\t\terror \"The blockID must be greater than the current blockID\"\n\t\t}\n\t}\n\taction {\n\t\tDBInsert(\"delayed_contracts\", \"contract,key_id,block_id,every_block,\\\"limit\\\",conditions\", $Contract, $key_id, $BlockID, $EveryBlock, $Limit, $Conditions)\n\t}\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "contracts",
            "Name": "EditDelayedContract",
            "Value": "contract EditDelayedContract {\n\tdata {\n\t\tId int\n\t\tContract string\n\t\tEveryBlock int\n\t\tConditions string\n\t\tBlockID int \"optional\"\n\t\tLimit int \"optional\"\n\t\tDeleted int \"optional\"\n\t}\n\tconditions {\n\t\tConditionById(\"delayed_contracts\", true)\n\n\t\tif !HasPrefix($Contract, \"@\") {\n\t\t\t$Contract = \"@\" + Str($ecosystem_id) + $Contract\n\t\t}\n\n\t\tif GetContractByName($Contract) == 0 {\n\t\t\terror Sprintf(\"Unknown contract %s\", $Contract)\n\t\t}\n\n\t\tif $BlockID == 0 {\n\t\t\t$BlockID = $block + $EveryBlock\n\t\t}\n\n\t\tif $BlockID <= $block {\n\t\t\terror \"The blockID must be greater than the current blockID\"\n\t\t}\n\t}\n\taction {\n\t\tDBUpdate(\"delayed_contracts\", $Id, \"contract,key_id,block_id,every_block,counter,\\\"limit\\\",deleted,conditions\", $Contract, $key_id, $BlockID, $EveryBlock, 0, $Limit, $Deleted, $Conditions)\n\t}\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "contracts",
            "Name": "CallDelayedContract",
            "Value": "contract CallDelayedContract {\n\tdata {\n\t\tId int\n\t}\n\tconditions {\n\t\tvar rows array\n\t\trows = DBFind(\"delayed_contracts\").Where(\"id = ? and deleted = false\", $Id)\n\t\tif !Len(rows) {\n\t\t\terror Sprintf(\"Delayed contract %d does not exist\", $Id)\n\t\t}\n\t\t$cur = rows[0]\n\n\t\tif $key_id != Int($cur[\"key_id\"]) {\n\t\t\terror \"Access denied\"\n\t\t}\n\n\t\tif $block != Int($cur[\"block_id\"]) {\n\t\t\terror Sprintf(\"Delayed contract %d must run on block %s, current block %d\", $Id, $cur[\"block_id\"], $block)\n\t\t}\n\t}\n\taction {\n\t\tvar limit, counter, block_id int\n\n\t\tlimit = Int($cur[\"limit\"])\n\t\tcounter = Int($cur[\"counter\"])+1\n\t\tblock_id = $block\n\n\t\tif limit == 0 || limit > counter {\n\t\t\tblock_id = block_id + Int($cur[\"every_block\"])\n\t\t}\n\n\t\tDBUpdate(\"delayed_contracts\", $Id, \"counter,block_id\", counter, block_id)\n\t\tCallContract($cur[\"contract\"], nil)\n\t}\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "contracts",
            "Name": "NewUser",
            "Value": "contract NewUser {\n\tdata {\n\t\tNewPubkey string\n\t}\n\tconditions {\n\t\t$newId = PubToID($NewPubkey)\n\t\tif $newId == 0 {\n\t\t\terror \"Wrong pubkey\"\n\t\t}\n\t\tif DBFind(\"keys\").Columns(\"id\").WhereId($newId).One(\"id\") != nil {\n\t\t\terror \"User already exists\"\n\t\t}\n\n\t\t$amount = 1000\n\t}\n\taction {\n\t\tDBUpdate(\"keys\", $key_id, \"-amount\", $amount)\n\t\tDBInsert(\"keys\", \"id,amount,pub\", $newId, $amount, $NewPubkey)\n\t\t   DBInsert(\"history\", \"sender_id,recipient_id,amount,comment,block_id,txhash\",\n\t\t\t\t$key_id, $newId, $amount, \"New user deposit\", $block, $txhash)\n\t}\n}",
            "Conditions": "ContractConditions(\"NodeOwnerCondition\")"
        },
        {
            "Type": "contracts",
            "Name": "EditEcosystemName",
            "Value": "contract EditEcosystemName {\n\tdata {\n\t\tEcosystemID int\n\t\tNewName string\n\t}\n\tconditions {\n\t\tvar rows array\n\t\trows = DBFind(\"@1_ecosystems\").Where(\"id = ?\", $EcosystemID)\n\t\tif !Len(rows) {\n\t\t\terror Sprintf(\"Ecosystem %d does not exist\", $EcosystemID)\n\t\t}\n\t}\n\taction {\n\t\tEditEcosysName($EcosystemID, $NewName)\n\t}\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "contracts",
            "Name": "UpdateMetrics",
            "Value": "contract UpdateMetrics {\n\tconditions {\n\t\tContractConditions(\"MainCondition\")\n\t}\n\taction {\n\t\tvar values array\n\t\tvalues = DBCollectMetrics()\n\n\t\tvar i, id int\n\t\tvar v map\n\t\twhile (i < Len(values)) {\n\t\t\tv = values[i]\n\t\t\tid = Int(DBFind(\"metrics\").Columns(\"id\").Where(\"time = ? AND key = ? AND metric = ?\", v[\"time\"], v[\"key\"], v[\"metric\"]).One(\"id\"))\n\t\t\tif id != 0 {\n\t\t\t\tDBUpdate(\"metrics\", id, \"value\", Int(v[\"value\"]))\n\t\t\t} else {\n\t\t\t\tDBInsert(\"metrics\", \"time,key,metric,value\", v[\"time\"], v[\"key\"], v[\"metric\"], Int(v[\"value\"]))\n\t\t\t}\n\t\t\ti = i + 1\n\t\t}\n\t}\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "contracts",
            "Name": "NodeOwnerCondition",
            "Value": "contract NodeOwnerCondition {\r\n\tconditions {\r\n\t\t$full_nodes = JSONDecode(SysParamString(\"full_nodes\"))\r\n\t\tvar i int\r\n\t\twhile i < Len($full_nodes) {\r\n\t\t\t$fn = $full_nodes[i]\r\n\t\t\tif $fn[\"key_id\"] == $key_id {\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t\ti = i + 1\r\n\t\t}\r\n            warning \"NodeOwnerCondition: Sorry, you do not have access to this action\"\r\n\t}\r\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "contracts",
            "Name": "CompaniesContract",
            "Value": "contract CompaniesContract {\r\n    data {\r\n\t\tlicense_id string\r\n\t\t/*\r\n\t\tlicense_owner_name_arabic string\r\n\t\tlicense_owner_name_english string\r\n\t\tlicense_owner_id string\r\n\t\tlegal_form int\r\n\t\ttitle_deed_number string\r\n\t\tcompany_info string\r\n        company_name string\r\n\t\t*/\r\n    }\r\n    conditions {\r\n\r\n    }\r\n    action {\r\n            /*\r\n\t\t\tvar companyInfo map\r\n\t\t\t\tcompanyInfo[\"company_info\"] = $company_info\r\n\t\t\t\tDBInsert(\"companies\", \"license_id,license_owner_name_arabic,license_owner_name_english,license_owner_id,legal_form,title_deed_number,company_info,company_name\", \r\n\t\t\t\t$license_id,$license_owner_name_arabic,$license_owner_name_english,$key_id,$legal_form,$title_deed_number,companyInfo,$company_name)\r\n\t\t\t*/\r\n            \r\n        \tvar company_id int\r\n            company_id = DBInsert(\"companies\", \"license_id,license_owner_id\", $license_id, $key_id)\r\n\r\n            var params map\r\n            params[\"company_id\"] = company_id\r\n\r\n            var rid int\r\n            rid = DBFind(\"roles\").Where(\"role_name=?\", \"DED Manager\").One(\"id\")\r\n            Notifications_Roles_Send_map(\"rid,closure_type,sender,icon_name,text_header,text_body,page_name,params_map\", rid, 1, $key_id, \"fa fa-check\", \"Approve Company\", \"Company requested for approve\", \"ded_requestView\", params)\r\n            \r\n\t}\r\n}",
            "Conditions": "true"
        },
        {
            "Type": "contracts",
            "Name": "AddPersons",
            "Value": "contract AddPersons {\r\n    data {\r\n\t\tperson_type int\r\n\t\tperson_identifier int\r\n\t\tnationality int\r\n\t\tname_english string\r\n\t\tname_arabic string\r\n\t\ttitle_deed_number string\r\n\t\tmobile_number string\r\n\t\temail string\r\n    }\r\n    conditions {\r\n\r\n    }\r\n    action {\r\n\t\tDBInsert(\"members\", \"person_type,person_identifier,nationality,name_english,name_arabic,title_deed_number,mobile_number,email\", $person_type, $person_identifier, $nationality, $name_english, $name_arabic, $title_deed_number, $mobile_number, $email)\r\n    }\r\n}",
            "Conditions": "true"
        },
        {
            "Type": "contracts",
            "Name": "EditPersons",
            "Value": "contract EditPersons {\r\n    data {\r\n\t\tid int\r\n\t\tperson_type int\r\n\t\tperson_identifier int\r\n\t\tnationality int\r\n\t\tname_english string\r\n\t\tname_arabic string\r\n\t\ttitle_deed_number int\r\n\t\tmobile_number string\r\n\t\temail string\r\n    }\r\n    conditions {\r\n\r\n    }\r\n    action {\r\n\t\tDBUpdate(\"members\", $id, \"person_type,person_identifier,nationality,name_english,name_arabic,title_deed_number,mobile_number,email\", $person_type, $person_identifier, $nationality, $name_english, $name_arabic, $title_deed_number, $mobile_number, $email)\r\n    }\r\n}",
            "Conditions": "true"
        },
        {
            "Type": "contracts",
            "Name": "EditCompanies",
            "Value": "contract EditCompanies {\r\n    data {\r\n\t\tid int\r\n\t\tlicense_id string\r\n\t\tlicense_owner_name_arabic string\r\n\t\tlicense_owner_name_english string\r\n\t\tlicense_owner_id string\r\n\t\tlegal_form int\r\n\t\ttitle_deed_number string\r\n\t\tcompany_info string\r\n    }\r\n    conditions {\r\n\r\n    }\r\n    action {\r\n\t\t\tvar companyInfo map\r\n\t\t\t\tcompanyInfo[\"company_info\"] = $company_info\r\n\t\t\t\tDBUpdate(\"companies\", $id, \"license_id,license_owner_name_arabic,license_owner_name_english,license_owner_id,legal_form,title_deed_number,company_info\", \r\n\t\t\t\t$license_id,$license_owner_name_arabic,$license_owner_name_english,$license_owner_id,$legal_form,$title_deed_number,companyInfo)\r\n\t}\r\n}",
            "Conditions": "true"
        },
        {
            "Type": "contracts",
            "Name": "aja_clear_table",
            "Value": "contract aja_clear_table {\r\n    data {\r\n        ID int\r\n        Value int\r\n    }\r\n    conditions {\r\n\r\n    }\r\n    action {\r\n        if($Value == 1){\r\n            DBUpdate(\"companies\",$ID,\"deleted\",1)\r\n        }            \r\n    }\r\n}",
            "Conditions": "true"
        },
        {
            "Type": "languages",
            "Name": "my_contracts",
            "Conditions": "",
            "Trans": "{\"en\":\"My contracts\"}"
        },
        {
            "Type": "languages",
            "Name": "object",
            "Conditions": "",
            "Trans": "{\n    \"en\": \"Object\",\n    \"ar\": \"موضوع\",\n    \"ru\": \"Объект\"\n}"
        },
        {
            "Type": "languages",
            "Name": "ajamal_back",
            "Conditions": "",
            "Trans": "{\"ar\":\"السابق\",\"en\":\"Back\"}"
        },
        {
            "Type": "languages",
            "Name": "ajamal_company",
            "Conditions": "",
            "Trans": "{\"ar\":\"شركة\",\"en\":\"Company\"}"
        },
        {
            "Type": "languages",
            "Name": "ajamal_parcel",
            "Conditions": "",
            "Trans": "{\"ar\":\"المميز للأرض ادخل الرقم\",\"en\":\"Parcel ID\"}"
        },
        {
            "Type": "languages",
            "Name": "ajamal_select",
            "Conditions": "",
            "Trans": "{\"ar\":\"اختر\",\"en\":\"Select\"}"
        },
        {
            "Type": "languages",
            "Name": "ajamal_select_role",
            "Conditions": "",
            "Trans": "{\"ar\":\"اختر دور\",\"en\":\"Select role\"}"
        },
        {
            "Type": "languages",
            "Name": "ajamal_person_reg",
            "Conditions": "",
            "Trans": "{\"ar\":\"تسجيل المستخدم\",\"en\":\"Person Registration\"}"
        },
        {
            "Type": "languages",
            "Name": "ajamal_roles_list",
            "Conditions": "",
            "Trans": "{\"ar\":\"قائمة الأدوار\",\"en\":\"Roles List\"}"
        },
        {
            "Type": "languages",
            "Name": "ajamal_select_role_sys",
            "Conditions": "",
            "Trans": "{\"ar\":\"حدد دورًا في النظام\",\"en\":\"Select a role in the system\"}"
        },
        {
            "Type": "languages",
            "Name": "ajamal_tenant_individual",
            "Conditions": "",
            "Trans": "{\"ar\":\"المستأجر الفرد\",\"en\":\"Tenant Individual\"}"
        },
        {
            "Type": "languages",
            "Name": "ajamal_tenant_comp_rep",
            "Conditions": "",
            "Trans": "{\"ar\":\"ممثل شركة المستأجر\",\"en\":\"Tenant Company Representative\"}"
        },
        {
            "Type": "languages",
            "Name": "ajamal_owner_individ",
            "Conditions": "",
            "Trans": "{\"ar\":\"المالك فرد\",\"en\":\"Owner Individual\"}"
        },
        {
            "Type": "languages",
            "Name": "ajamal_property_manager",
            "Conditions": "",
            "Trans": "{\"ar\":\"مدير الممتلكات\",\"en\":\"Property Manager\"}"
        },
        {
            "Type": "languages",
            "Name": "ajamal_owner_company",
            "Conditions": "",
            "Trans": "{\"ar\":\"مالك الشركة\",\"en\":\"Owner Company\"}"
        },
        {
            "Type": "languages",
            "Name": "ajamal_username",
            "Conditions": "",
            "Trans": "{\"ar\":\"اسم المستخدم\",\"en\":\"User name\"}"
        },
        {
            "Type": "languages",
            "Name": "ajamal_role_name",
            "Conditions": "",
            "Trans": "{\"ar\":\"اسم الدور\",\"en\":\"Role name\"}"
        },
        {
            "Type": "languages",
            "Name": "ajamal_close",
            "Conditions": "",
            "Trans": "{\"ar\":\"اغلاق\",\"en\":\"Close\"}"
        },
        {
            "Type": "languages",
            "Name": "ajamal_submit",
            "Conditions": "",
            "Trans": "{\"ar\":\"اعتماد\",\"en\":\"Submit\"}"
        },
        {
            "Type": "languages",
            "Name": "ajamal_owner_id",
            "Conditions": "",
            "Trans": "{\"ar\":\"المالك\",\"en\":\"Owner ID\"}"
        },
        {
            "Type": "languages",
            "Name": "ajamal_role",
            "Conditions": "",
            "Trans": "{\"ar\":\"دور\",\"en\":\"Role\"}"
        },
        {
            "Type": "languages",
            "Name": "ajamal_req_obj_owner",
            "Conditions": "",
            "Trans": "{\"ar\":\"طلب مالك الكائنات\",\"en\":\"Request the object owner\"}"
        },
        {
            "Type": "languages",
            "Name": "ajamal_not_owner_message",
            "Conditions": "",
            "Trans": "{\"ar\":\"أنت لست مالك هذه الشركة ، اختر شركتك المسجلة.\",\"en\":\"You do not owner this company\"}"
        },
        {
            "Type": "languages",
            "Name": "ajamal_req_assign_role",
            "Conditions": "",
            "Trans": "{\"ar\":\"طلب لتعيين الدور\",\"en\":\"Request for assignment to the role\"}"
        },
        {
            "Type": "languages",
            "Name": "ajamal_applicant",
            "Conditions": "",
            "Trans": "{\"ar\":\"مقدم الطلب\",\"en\":\"Applicant\"}"
        },
        {
            "Type": "languages",
            "Name": "ajamal_required_role",
            "Conditions": "",
            "Trans": "{\"ar\":\"الدور المطلوب\",\"en\":\"The required role\"}"
        },
        {
            "Type": "languages",
            "Name": "ajamal_approve",
            "Conditions": "",
            "Trans": "{\"ar\":\"يوافق\",\"en\":\"Approve\"}"
        },
        {
            "Type": "languages",
            "Name": "ajamal_reject",
            "Conditions": "",
            "Trans": "{\"ar\":\"رفض\",\"en\":\"Reject\"}"
        },
        {
            "Type": "languages",
            "Name": "ajamal_plot_id",
            "Conditions": "",
            "Trans": "{\"ar\":\"القطعة ادخل رقم \",\"en\":\"Plot ID\"}"
        },
        {
            "Type": "languages",
            "Name": "ajamal_next",
            "Conditions": "",
            "Trans": "{\"ar\":\"التالي\",\"en\":\"Next\"}"
        },
        {
            "Type": "languages",
            "Name": "ajamal_property",
            "Conditions": "",
            "Trans": "{\"ar\":\"ممتلكات\",\"en\":\"Property\"}"
        },
        {
            "Type": "languages",
            "Name": "models_not_found",
            "Conditions": "",
            "Trans": "{\"ar\":\"لم يتم العثور على النماذج\",\"en\":\"models not found\"}"
        },
        {
            "Type": "languages",
            "Name": "show_actived",
            "Conditions": "",
            "Trans": "{\"ar\":\"تظهر نشطة\",\"en\":\"show actived\"}"
        },
        {
            "Type": "languages",
            "Name": "show_deleted",
            "Conditions": "",
            "Trans": "{\"ar\":\"تظهر محذوفة\",\"en\":\"show deleted\"}"
        },
        {
            "Type": "languages",
            "Name": "text",
            "Conditions": "",
            "Trans": "{\"ar\":\"نص\",\"en\":\"text\"}"
        },
        {
            "Type": "languages",
            "Name": "terms_and_conditions_ar",
            "Conditions": "",
            "Trans": "{\"en\":\"Terms And Conditions(Arabic)\"}"
        },
        {
            "Type": "languages",
            "Name": "terms_and_conditions_en",
            "Conditions": "",
            "Trans": "{\"en\":\"Terms And Conditions(English)\"}"
        },
        {
            "Type": "languages",
            "Name": "signature_status",
            "Conditions": "",
            "Trans": "{\"en\":\"Signature status\"}"
        },
        {
            "Type": "languages",
            "Name": "request_id",
            "Conditions": "",
            "Trans": "{\"en\":\"Request id\"}"
        },
        {
            "Type": "languages",
            "Name": "request_status",
            "Conditions": "",
            "Trans": "{\"en\":\"Request status\"}"
        },
        {
            "Type": "languages",
            "Name": "view_edit",
            "Conditions": "",
            "Trans": "{\"en\":\"View/Edit\"}"
        },
        {
            "Type": "languages",
            "Name": "yes",
            "Conditions": "",
            "Trans": "{\"ar\":\"نعم فعلا\",\"en\":\"Yes\"}"
        },
        {
            "Type": "languages",
            "Name": "ajman_add_contract",
            "Conditions": "",
            "Trans": "{\"en\":\"Add contract\"}"
        },
        {
            "Type": "languages",
            "Name": "ajman_edit_contract",
            "Conditions": "",
            "Trans": "{\"en\":\"Edit contract\"}"
        },
        {
            "Type": "languages",
            "Name": "Attachments",
            "Conditions": "",
            "Trans": "{\"ar\":\"مرفقات\"}"
        },
        {
            "Type": "languages",
            "Name": "reject",
            "Conditions": "",
            "Trans": "{\"ar\": \"رفض\", \"en\": \"Reject\"}"
        },
        {
            "Type": "languages",
            "Name": "Approve",
            "Conditions": "",
            "Trans": "{\"ar\": \"يوافق\", \"en\": \"Approve\"}"
        },
        {
            "Type": "languages",
            "Name": "Ok",
            "Conditions": "",
            "Trans": "{\"ar\": \"حسنا\", \"en\": \"Okey\"}"
        },
        {
            "Type": "languages",
            "Name": "Send",
            "Conditions": "",
            "Trans": "{\"ar\":\"إرسال\"}"
        },
        {
            "Type": "languages",
            "Name": "submited",
            "Conditions": "",
            "Trans": "{\"ar\":\"قدمت\",\"en\":\"Submitted\"}"
        },
        {
            "Type": "languages",
            "Name": "escalated",
            "Conditions": "",
            "Trans": "{\"ar\":\"تصاعدت\",\"en\":\"Escalated\"}"
        },
        {
            "Type": "languages",
            "Name": "sendback",
            "Conditions": "",
            "Trans": "{\"ar\":\"ارسل الى الوراء\",\"en\":\"Send back\"}"
        },
        {
            "Type": "languages",
            "Name": "am_accepted",
            "Conditions": "",
            "Trans": "{\"ar\":\"مدير مقبول\",\"en\":\"AM Accepted\"}"
        },
        {
            "Type": "languages",
            "Name": "not_submitted",
            "Conditions": "",
            "Trans": "{\"en\": \"Not submited\"}"
        },
        {
            "Type": "languages",
            "Name": "property_id",
            "Conditions": "",
            "Trans": "{\"en\":\"Property ID\"}"
        },
        {
            "Type": "menu",
            "Name": "default_menu",
            "Value": "Div(ajnav){\r\n    If(#role_id# == 0){\r\n        MenuItem(Title:Registration, Page: ajman_user_registration, Icon:\"fa icon-user\")\r\n    }.ElseIf(Or(#role_id# == 16,#role_id# == 18)){\r\n\t\tDiv(col text-center){\r\n\t\t\tDiv(col-md-12){\r\n\t\t\t\tDBFind(\"members\").Columns(\"id,member_name\").WhereId(#key_id#).Vars(pre)\r\n\t\t\t\tImage(Binary().ById(20), Class: img-thumbnail img-circle img-responsive thumb96)\r\n\t\t\t\tDiv(col-md-12 ajman-color-h1){\r\n\t\t\t\t\tSpan(Body:#pre_member_name#)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tDiv(col pd-top-50){\r\n                Div(ajnav){\r\n                    MenuGroup(Title: \"Contracts\", Icon: \"icon-folder\"){\r\n                        Div(ajnav){\r\n                            MenuItem(Title:\"All Contracts\", Page:ajman_contract_list, Icon:\"icon-layers\", Params: \"mode=all\")\r\n                        }\r\n                        Div(ajnav){\r\n                            MenuItem(Title:\"My Contracts\", Page:ajman_contract_list, Icon:\"icon-layers\", Params: \"mode=my\")\r\n                        }\r\n                        Div(ajnav){\r\n                            MenuItem(Title:\"Signed contracts\", Page:ajman_contract_list, Icon:\"icon-layers\", Params: \"mode=signed\")\r\n                        }\r\n                    }\r\n                }\r\n                Div(ajnav){\r\n                    MenuGroup(Title: \"Property & Units\", Icon: \"icon-folder\"){\r\n                        Div(ajnav){\r\n                            MenuItem(Title:\"Properties list\", Page:property_list, Icon:\"icon-folder\")\r\n                        }\r\n                        Div(ajnav){\r\n                            MenuItem(Title:\"Units list\", Page:units_list, Icon:\"icon-folder\")\r\n                        }\r\n                    }\r\n                }\r\n\t\t\t}\r\n\t\t}.Style(height: 100vh; background-color: #323639)\r\n    }.ElseIf(Or(#role_id# == 14,#role_id# == 15)){\r\n\t\tDiv(col text-center pd-top-50){\r\n\t\t\tDiv(col-md-12){\r\n\t\t\t\tDBFind(\"members\").Columns(\"id,member_name\").WhereId(#key_id#).Vars(pre)\r\n\t\t\t\tImage(Binary().ById(20), Class: img-thumbnail img-circle img-responsive thumb96)\r\n\t\t\t\tDiv(col-md-12 ajman-color-h1){\r\n\t\t\t\t\tSpan(Body:#pre_member_name#)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tDiv(col pd-top-50){\r\n                Div(ajnav){\r\n                    MenuGroup(Title: \"Contracts\", Icon: \"icon-folder\"){\r\n                        Div(ajnav){\r\n                            MenuItem(Title:\"All Contracts\", Page:ajman_contract_list, Icon:\"icon-layers\", Params: \"mode=all\")\r\n                        }\r\n                        Div(ajnav){\r\n                            MenuItem(Title:\"My Contracts\", Page:ajman_contract_list, Icon:\"icon-layers\", Params: \"mode=my\")\r\n                        }\r\n                        Div(ajnav){\r\n                            MenuItem(Title:\"Signed contracts\", Page:ajman_contract_list, Icon:\"icon-layers\", Params: \"mode=signed\")\r\n                        }\r\n                    }\r\n                }\r\n                Div(ajnav){\r\n                    MenuGroup(Title: \"Property & Units\", Icon: \"icon-folder\"){\r\n                        Div(ajnav){\r\n                            MenuItem(Title:\"Properties list\", Page:property_list, Icon:\"icon-folder\")\r\n                        }\r\n                        Div(ajnav){\r\n                            MenuItem(Title:\"Units list\", Page:units_list, Icon:\"icon-folder\")\r\n                        }\r\n                    }\r\n                }\r\n\t\t\t}\r\n\t\t}.Style(height: 100vh; background-color: #323639)\r\n    }.ElseIf(Or(#role_id# == 19,#role_id# == 21)){\r\n\t\tDiv(col text-center pd-top-50){\r\n\t\t\tDiv(col-md-12){\r\n\t\t\t\tDBFind(\"members\").Columns(\"id,member_name\").WhereId(#key_id#).Vars(pre)\r\n\t\t\t\tImage(Binary().ById(20), Class: img-thumbnail img-circle img-responsive thumb96)\r\n\t\t\t\tDiv(col-md-12 ajman-color-h1){\r\n\t\t\t\t\tSpan(Body:#pre_member_name#)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tDiv(col pd-top-50){\r\n                Div(ajnav){\r\n                    MenuGroup(Title: \"Contracts\", Icon: \"icon-folder\"){\r\n                        Div(ajnav){\r\n                            MenuItem(Title:\"All Contracts\", Page:ajman_contract_list, Icon:\"icon-layers\", Params: \"mode=all\")\r\n                        }\r\n                        Div(ajnav){\r\n                            MenuItem(Title:\"Signed contracts\", Page:ajman_contract_list, Icon:\"icon-layers\", Params: \"mode=signed\")\r\n                        }\r\n                    }\r\n                }\r\n                Div(ajnav){\r\n                    MenuGroup(Title: \"Property & Units\", Icon: \"icon-folder\"){\r\n                        Div(ajnav){\r\n                            MenuItem(Title:\"Properties list\", Page:property_list, Icon:\"icon-folder\")\r\n                        }\r\n                        Div(ajnav){\r\n                            MenuItem(Title:\"Units list\", Page:units_list, Icon:\"icon-folder\")\r\n                        }\r\n                    }\r\n                }\r\n                Div(ajnav){\r\n                    MenuGroup(Title: \"Managment control\", Icon: \"icon-folder\"){\r\n                        Div(ajnav){\r\n                            MenuItem(Title:$profile$, Page:profile_view, Icon:\"fa icon-user\")\r\n                        }\r\n                        Div(ajnav){\r\n                            MenuItem(Title:$membership$, Page:members_list, Icon:\"fa icon-people\")\r\n                        }\r\n                        Div(ajnav){\r\n                            MenuGroup(Title:$notifications$, Icon:\"fa fa-bell-o\"){\r\n                                Div(ajnav){\r\n                                    MenuItem(Title:$single_notifics$, Page:notifications_single, Icon:\"fa fa-bell-o\")\r\n                                }\r\n                                Div(ajnav){\r\n                                    MenuItem(Title:$role_notifics$, Page:notifications_roles, Icon:\"fa fa-bullhorn\")\r\n                                }\r\n                                Div(ajnav){\r\n                                    MenuItem(Title:$test_page$, Page:notifications_testpage, Icon:\"icon-settings\")\r\n                                }\r\n                            }\r\n                        }\r\n                        Div(ajnav){\r\n                            MenuItem(Title:$roles$, Page:roles_list, Icon:\"fa fa-list-ul\")\r\n                        }\r\n                        Div(ajnav){\r\n                            MenuItem(Title: $catalog_ecosystems$, Page: catalog_ecosystems, Icon:\"fa fa-book\")\r\n                        }\r\n                        Div(ajnav){\r\n                            MenuGroup(Title:$admin$, Icon:\"fa icon-settings\"){\r\n                                Div(ajnav){\r\n                                    MenuItem(Title:$tokens_transfer$, Page:money_transfer, Icon:\"icon-energy\")\r\n                                }\r\n                                Div(ajnav){\r\n                                    MenuItem(Title:$new_ecosystem$, Page:ecosystem_new, Icon:\"icon-globe\")\r\n                                }\r\n                                Div(ajnav){\r\n                                    MenuItem(Title: $sysparams_list$,Page:sysparams_list, Icon:\"fa icon-settings\")\r\n                                }\r\n                                Div(ajnav){\r\n                                    MenuItem(Title:$sysparams_candidates$, Page:sysparams_candidates, Icon:\"icon-list\")\r\n                                }\r\n                                Div(ajnav){\r\n                                    MenuItem(Title:$sysparams_ecos$, Page:sysparams_ecos, Icon:\"icon-list\")\r\n                                }\r\n                                Div(ajnav){\r\n                                    MenuItem(Title:$tokenrefund_list$, Page:tokenrefund_list, Icon:\"icon-list\")\r\n                                }\r\n                                Div(ajnav){\r\n                                    MenuItem(Title:$tokens_transfer$, Page:tokens_transfer, Icon:\"icon-credit-card\")\r\n                                }\r\n                            }\r\n                        }\r\n                        Div(ajnav){\r\n                            MenuGroup(Title:$voting$, Icon:\"fa fa-edit\"){\r\n                                Div(ajnav){\r\n                                    MenuItem(Title:$voting$, Page:voting_list, Icon:\"fa fa-edit\")\r\n                                }\r\n                                Div(ajnav){\r\n                                    MenuItem(Title:$voting_templates$, Page:voting_templates, Icon:\"fa icon-pin\")\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\t\t\t}\r\n\t\t}.Style(height: 100vh; background-color: #323639)\r\n\t}.ElseIf(#role_id# == 22){\r\n    }.Else{\r\n        Div(ajnav){\r\n            MenuGroup(Title: \"Basic\", Icon: \"icon-folder\"){\r\n                Div(ajnav){\r\n                    MenuItem(Title:$profile$, Page:profile_view, Icon:\"fa icon-user\")\r\n                }\r\n                Div(ajnav){\r\n                    MenuItem(Title:$membership$, Page:members_list, Icon:\"fa icon-people\")\r\n                }\r\n                Div(ajnav){\r\n                    MenuGroup(Title:$notifications$, Icon:\"fa fa-bell-o\"){\r\n                        Div(ajnav){\r\n                            MenuItem(Title:$single_notifics$, Page:notifications_single, Icon:\"fa fa-bell-o\")\r\n                        }\r\n                        Div(ajnav){\r\n                            MenuItem(Title:$role_notifics$, Page:notifications_roles, Icon:\"fa fa-bullhorn\")\r\n                        }\r\n                        Div(ajnav){\r\n                            MenuItem(Title:$test_page$, Page:notifications_testpage, Icon:\"icon-settings\")\r\n                        }\r\n                    }\r\n                }\r\n                Div(ajnav){\r\n                    MenuItem(Title:$roles$, Page:roles_list, Icon:\"fa fa-list-ul\")\r\n                }\r\n                Div(ajnav){\r\n                    MenuItem(Title: $catalog_ecosystems$, Page: catalog_ecosystems, Icon:\"fa fa-book\")\r\n                }\r\n                Div(ajnav){\r\n                    MenuGroup(Title:$admin$, Icon:\"fa icon-settings\"){\r\n                        Div(ajnav){\r\n                            MenuItem(Title:$tokens_transfer$, Page:money_transfer, Icon:\"icon-energy\")\r\n                        }\r\n                        Div(ajnav){\r\n                            MenuItem(Title:$new_ecosystem$, Page:ecosystem_new, Icon:\"icon-globe\")\r\n                        }\r\n                        Div(ajnav){\r\n                            MenuItem(Title: $sysparams_list$,Page:sysparams_list, Icon:\"fa icon-settings\")\r\n                        }\r\n                        Div(ajnav){\r\n                            MenuItem(Title:$sysparams_candidates$, Page:sysparams_candidates, Icon:\"icon-list\")\r\n                        }\r\n                        Div(ajnav){\r\n                            MenuItem(Title:$sysparams_ecos$, Page:sysparams_ecos, Icon:\"icon-list\")\r\n                        }\r\n                        Div(ajnav){\r\n                            MenuItem(Title:$tokenrefund_list$, Page:tokenrefund_list, Icon:\"icon-list\")\r\n                        }\r\n                        Div(ajnav){\r\n                            MenuItem(Title:$tokens_transfer$, Page:tokens_transfer, Icon:\"icon-credit-card\")\r\n                        }\r\n                    }\r\n                }\r\n                Div(ajnav){\r\n                    MenuGroup(Title:$voting$, Icon:\"fa fa-edit\"){\r\n                        Div(ajnav){\r\n                            MenuItem(Title:$voting$, Page:voting_list, Icon:\"fa fa-edit\")\r\n                        }\r\n                        Div(ajnav){\r\n                            MenuItem(Title:$voting_templates$, Page:voting_templates, Icon:\"fa icon-pin\")\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        Div(ajnav){\r\n            MenuGroup(Title: \"Договоры\", Icon: \"icon-folder\"){\r\n                Div(ajnav){\r\n                    MenuItem(Title:\"Все договоры\", Page:ajman_contract_list, Icon:\"icon-layers\", Params: \"mode=all\")\r\n                }\r\n                Div(ajnav){\r\n                    MenuItem(Title:\"Мои договоры\", Page:ajman_contract_list, Icon:\"icon-layers\", Params: \"mode=my\")\r\n                }\r\n                Div(ajnav){\r\n                    MenuItem(Title:\"Подписанные договоры\", Page:ajman_contract_list, Icon:\"icon-layers\", Params: \"mode=signed\")\r\n                }\r\n                Div(ajnav){\r\n                    MenuItem(Title:\"Арендовать Property\", Page:ajman_contract_add, Icon:\"fa fa-edit\", Params: \"property_id=2,unit_id=0,owner_id=7207124132448258015\")\r\n                }\r\n                Div(ajnav){\r\n                    MenuItem(Title:\"Арендовать Unit\", Page:ajman_contract_add, Icon:\"fa fa-edit\", Params: \"property_id=2,unit_id=1,owner_id=7207124132448258015\")\r\n                }\r\n            }\r\n        }\r\n        Div(ajnav){\r\n            MenuItem(Title:$business_manager$, Page:business_manager, Icon:\"fa fa-edit\")\r\n        }\r\n        Div(ajnav){\r\n            MenuItem(Title:$business_process$, Page:business_process, Icon:\"fa fa-edit\")\r\n        }\r\n        Div(ajnav){\r\n            MenuItem(Title:$ajman_user_registration$, Page:ajman_user_registration, Icon:\"fa fa-edit\")\r\n        }\r\n        Div(ajnav){\r\n            MenuItem(Title:\"Ajman_companies\", Page:Ajman_companies, Icon:\"icon-layers\")\r\n        }\r\n        Div(ajnav){\r\n            MenuItem(Title:\"Ajman_persones\", Page:Ajman_persones, Icon:\"icon-layers\")\r\n        }\r\n        Div(ajnav){\r\n            MenuItem(Title:\"Ajman Roles\", Page:ajamal_enter_user_role, Icon:\"fa fa-edit\")\r\n        }\r\n        Div(ajnav){\r\n            MenuGroup(Title: \"Property & Units\", Icon: \"icon-folder\"){\r\n                Div(ajnav){\r\n                    MenuItem(Title:\"Add Property\", Page:property_add, Icon:\"icon-folder\")\r\n                }\r\n                Div(ajnav){\r\n                    MenuItem(Title:\"Properties list\", Page:property_list, Icon:\"icon-folder\")\r\n                }\r\n                Div(ajnav){\r\n                    MenuItem(Title:\"Add Unit\", Page:units_add, Icon:\"icon-folder\")\r\n                }\r\n                Div(ajnav){\r\n                    MenuItem(Title:\"Units list\", Page:units_list, Icon:\"icon-folder\")\r\n                }\r\n            }\r\n        }\r\n        Div(ajnav){\r\n            MenuGroup(Title: \"Layout\", Icon: \"icon-layers\"){\r\n                Div(ajnav){\r\n                    MenuItem(Title:aj_1, Page:aj_1, Icon:\"fa fa-edit\")\r\n                }\r\n                Div(ajnav){\r\n                    MenuItem(Title:aj_2, Page:aj_2, Icon:\"fa fa-edit\")\r\n                }\r\n                Div(ajnav){\r\n                    MenuItem(Title:aj_3, Page:aj_3, Icon:\"fa fa-edit\")\r\n                }\r\n                Div(ajnav){\r\n                    MenuItem(Title:aj_4, Page:aj_4, Icon:\"fa fa-edit\")\r\n                }\r\n                Div(ajnav){\r\n                    MenuItem(Title:aj_5, Page:aj_5, Icon:\"fa fa-edit\")\r\n                }\r\n                Div(ajnav){\r\n                    MenuItem(Title:aj_new, Page:aj_new, Icon:\"fa fa-edit\")\r\n                }\r\n                Div(ajnav){\r\n                    MenuItem(Title:Table_Bled Page:Table_blead, Icon:\"fa fa-edit\")\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Title": "default",
            "Conditions": "ContractAccess(\"@1EditMenu\")"
        },
        {
            "Type": "menu",
            "Name": "admin_menu",
            "Value": "Div(ajnav){\r\n    MenuItem(Title:\"Application\", Page:apps_list, Icon:\"icon-folder\")\r\n}\r\nDiv(ajnav){\r\n    MenuItem(Title:\"Ecosystem parameters\", Page:params_list, Icon:\"icon-settings\")\r\n}\r\nDiv(ajnav){\r\n    MenuItem(Title:\"Menu\", Page:menus_list, Icon:\"icon-list\")\r\n}\r\nDiv(ajnav){\r\n    MenuItem(Title:\"Import\", Page:import_upload, Icon:\"icon-cloud-upload\")\r\n}\r\nDiv(ajnav){\r\n    MenuItem(Title:\"Export\", Page:export_resources, Icon:\"icon-cloud-download\")\r\n}\r\nDiv(ajnav){\r\n    MenuGroup(Title:\"Resources\", Icon:\"icon-share\"){\r\n        Div(ajnav){\r\n            MenuItem(Title:\"Pages\", Page:app_pages, Icon:\"icon-screen-desktop\")\r\n        }\r\n        Div(ajnav){\r\n            MenuItem(Title:\"Blocks\", Page:app_blocks, Icon:\"icon-grid\")\r\n        }\r\n        Div(ajnav){\r\n            MenuItem(Title:\"Tables\", Page:app_tables, Icon:\"icon-docs\")\r\n        }\r\n        Div(ajnav){\r\n            MenuItem(Title:\"Contracts\", Page:app_contracts, Icon:\"icon-briefcase\")\r\n        }\r\n        Div(ajnav){\r\n            MenuItem(Title:\"Application parameters\", Page:app_params, Icon:\"icon-wrench\")\r\n        }\r\n        Div(ajnav){\r\n            MenuItem(Title:\"Language resources\", Page:app_langres, Icon:\"icon-globe\")\r\n        }\r\n        Div(ajnav){\r\n            MenuItem(Title:\"Binary data\", Page:app_binary, Icon:\"icon-layers\")\r\n        }\r\n    }\r\n}\r\n    Div(ajnav){\r\n        MenuItem(Title:\"Dashboard\", Page:admin_dashboard, Icon:\"icon-share\")\r\n    }",
            "Title": "Admin menu",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Type": "pages",
            "Name": "default_page",
            "Value": "If(#role_id#==0){\r\n    Include(aja_reg_u)\r\n}\r\nIf(#role_id#==1){\r\n    Include(roles_list)\r\n}\r\nIf(And(#role_id#>1,#role_id# != 16,#role_id# !=18,#role_id# != 14,#role_id# != 15,#role_id# !=19,#role_id# != 21,#role_id# != 22)){\r\n    Include(accounts)\r\n}\r\n\r\nIf(#role_id#==22){\r\n    Div(Class: content-wrapper){\r\n        Div(Class: row df f-valign){\r\n            Div(Class: col-md-4)\r\n            Div(Class: col-md-4){\r\n                Div(Class: panel panel-default){\r\n                    Form(){\r\n                            Div(Class: list-group-item text-center){\r\n                                Div(Class: h3, Body: Department of Economic Development)\t\r\n                            }\r\n                    }\r\n                }\r\n            }\r\n            Div(Class: col-md-4)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nIf(Or(#role_id# == 16,#role_id# == 18,#role_id# == 14,#role_id# == 15,#role_id# == 19,#role_id# == 21)){\r\n    DBFind(applications).Where(\"name='Ajman property'\").Vars(application)\r\n    AppParam(App: #application_id#, Name: \"contract_status\", Source: src_contract_status)\r\n    Div(fullscreen-wrapper ajman_content){\r\n        Div(row){\r\n            Div(col-md-6 pull-left){Image(Binary().ById(18), Class: pull-left)}\r\n            Div(col-md-6 pull-right){Image(Binary().ById(19), Class: pull-right)}\r\n        }.Style(padding-bottom: 10px;)\r\n        Div(row){\r\n            Div(col-md-12){\r\n                Div(Class: panel-heading text-center){ \r\n                    Span(Class: ajman-color-h1)\r\n                }\r\n            }.Style(height: 50px; background-color: #0f789c)\r\n            Div(col-md-12 crumb){   \r\n            }.Style(padding-top:10px; padding-bottom:15px)\r\n            Div(col-md-12 content){\r\n                If(Or(#role_id# == 16,#role_id# == 18)){\r\n                    Div(Class:text-left){ \r\n                        Span(Class: ajman_text_blue ajman_bold, Body: My Property)\r\n                    }.Style(padding-bottom:10px;)\r\n                    DBFind(Source: src_properties, Name: \"properties\").Where(owner_id = '#key_id#').Count(ajamal_prop_records).Order(\"id DESC\")\r\n                    If(#ajamal_prop_records# > 0){\r\n                        Div(row){\r\n                            Div(col-md-12){\r\n                                Div(table){\r\n                                    Div(table__head){\r\n                                        Div(table__row){\r\n                                            Div(table__cell table__cell_collapse){ID}\r\n                                            Div(table__cell){ID Owner}\r\n                                            Div(table__cell){Address}\r\n                                            Div(table__cell){Name}\r\n                                            Div(table__cell){Status}\r\n                                            Div(table__cell){Start Date}\r\n                                            Div(table__cell){Units}\r\n                                            Div(table__cell){End Date}\r\n                                            Div(table__cell table__cell_30){Action}\r\n                                        }\r\n                                    }\r\n                                    ForList(src_properties){\r\n                                        Div(table__row){\r\n                                            Div(table__cell){#id#}\r\n                                            Div(table__cell){#owner_id#}\r\n                                            Div(table__cell){#address#}\r\n                                            Div(table__cell){#name_english#}\r\n                                            Div(table__cell){\r\n                                                If(#status# > 0){\r\n                                                    EcosysParam(property_statuses,#status#)\r\n                                                }.Else{\r\n                                                    Not submited\r\n                                                }\r\n                                            }\r\n                                            Div(table__cell){DateTime(#start_date#, \"YYYY-MM-DD\")}\r\n                                            Div(table__cell){LinkPage($units_add$,Page: units_add,PageParams: \"property_id=#id#\")}\r\n                                            Div(table__cell){DateTime(#end_date#, \"YYYY-MM-DD\")}\r\n                                            Div(table__cell){\r\n                                                If(Or(#status# == 0,#status# == 3, #status# == 5)){\r\n                                                    Button(Class: btn ajman_button_darkgreen_medium, Body: Submit,Contract:business_Process,Params: \"Id=20,ModelId=1,EventId=3,ResultId=1,ObjectType=1,ObjectId=#id#\")\r\n                                                    Button(Class: btn ajman_button_blue_large,Body: Attachment, Page: ajman_attachment_add,PageParams: \"object_id=#id#,object_type=1\")\r\n                                                    Button(Class: btn ajman_button_red_medium, Body: Edit, Page: property_edit, PageParams: \"prop_id=#id#\")\r\n                                                }.Else{\r\n                                                    Button(Class: btn ajman_button_darkgreen_medium disabled, Body: Submit)\r\n                                                    Button(Class: btn ajman_button_blue_large disabled,Body: Attachment)\r\n                                                    Button(Class: btn ajman_button_red_medium disabled, Body: Edit) \r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n\t\t\t\t\t\t}\r\n                    }.Else{\r\n                        Span(Class: text-muted ajman_bold,Body: Currently there is no data)\r\n                    }\r\n                    Div(col-md-2 pull-right){\r\n                        Button(Add property,Class: btn ajman_button_darkgreen_large,Page: property_add)\r\n                    }\r\n                }.ElseIf(Or(#role_id# == 14,#role_id# == 15)){\r\n                    Div(Class:text-left){ \r\n                        Span(Class: ajman_text_blue ajman_bold, Body: My Rented Property)\r\n                    }.Style(padding-bottom:10px;)\r\n                    DBFind(Source: src_properties, Name: \"properties\").Where(tenant_id = '#key_id#').Count(ajamal_prop_records).Order(\"id DESC\")\r\n                    If(#ajamal_prop_records# > 0){\r\n                        Div(row){\r\n                            Div(col-md-12){\r\n                                Div(table){\r\n                                    Div(table__head){\r\n                                        Div(table__row){\r\n                                            Div(table__cell table__cell_collapse){ID}\r\n                                            Div(table__cell){ID Owner}\r\n                                            Div(table__cell){Rent}\r\n                                            Div(table__cell){Address}\r\n                                            Div(table__cell){Name}\r\n                                            Div(table__cell){Status}\r\n                                            Div(table__cell){Start Date}\r\n                                            Div(table__cell){End Date}\r\n                                            Div(table__cell table__cell_collapse){Action}\r\n                                        }\r\n                                    }\r\n                                    ForList(src_properties){\r\n                                        Div(table__row){\r\n                                            Div(table__cell){#id#}\r\n                                            Div(table__cell){#owner_id#}\r\n                                            Div(table__cell){#rented#}\r\n                                            Div(table__cell){#address#}\r\n                                            Div(table__cell){#name_english#}\r\n                                            Div(table__cell){\r\n                                                If(#status# > 0){\r\n                                                    EcosysParam(property_statuses,#status#)\r\n                                                }.Else{\r\n                                                    Not submited\r\n                                                }\r\n                                            }\r\n                                            Div(table__cell){DateTime(#start_date#, \"YYYY-MM-DD\")}\r\n                                            Div(table__cell){DateTime(#end_date#, \"YYYY-MM-DD\")}\r\n                                            Div(table__cell){Button(View contract,Class: btn ajman_button_blue_large,Page:ajman_contract_add,PageParams: \"id=#rented#\")}\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n\t\t\t\t\t\t}\r\n                    }.Else{\r\n                        Span(Class: text-muted ajman_bold,Body: You do not have a rented property)\r\n                    }\r\n                    Div(col-md-2 pull-right){\r\n                        Button(Search Property,Class: btn ajman_button_darkgreen_large btn-block,Page: property_list)\r\n                    }\r\n                }.Else{\r\n                    Div(Class:text-left){ \r\n                        Span(Class: ajman_text_blue ajman_bold, Body: Verification of Property)\r\n                    }.Style(padding-bottom:10px;)\r\n                    DBFind(Source: src_properties, Name: \"properties\").Where(status = '2' or status = '3').Count(ajamal_prop_records).Custom(custom_date_start){\r\n                        DateTime(#start_date#, \"YYYY-MM-DD\")\r\n                    }.Custom(custom_date_end){\r\n                        DateTime(#end_date#, \"YYYY-MM-DD\")\r\n                    }.Custom(custom_status){\r\n                        If(#status# > 0){\r\n                            EcosysParam(property_statuses,#status#)\r\n                        }.Else{\r\n                            Not submited\r\n                        }\r\n                    }.Order(\"id DESC\")\r\n                    If(#ajamal_prop_records# > 0){\r\n                        Div(row){\r\n                            Div(col-md-12){\r\n                                Div(table){\r\n                                    Div(table__head){\r\n                                        Div(table__row){\r\n                                            Div(table__cell table__cell_collapse){ID}\r\n                                            Div(table__cell){ID Owner}\r\n                                            Div(table__cell){Address}\r\n                                            Div(table__cell){Name}\r\n                                            Div(table__cell){Status}\r\n                                            Div(table__cell){Start Date}\r\n                                            Div(table__cell table__cell_10){End Date}\r\n                                        }\r\n                                    }\r\n                                    ForList(src_properties){\r\n                                        Div(table__row){\r\n                                            Div(table__cell){#id#}\r\n                                            Div(table__cell){#owner_id#}\r\n                                            Div(table__cell){#address#}\r\n                                            Div(table__cell){#name_english#}\r\n                                            Div(table__cell){\r\n                                                If(#status# > 0){\r\n                                                    EcosysParam(property_statuses,#status#)\r\n                                                }.Else{\r\n                                                    Not submited\r\n                                                }\r\n                                            }\r\n                                            Div(table__cell){DateTime(#start_date#, \"YYYY-MM-DD\")}\r\n                                            Div(table__cell){DateTime(#end_date#, \"YYYY-MM-DD\")}\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n\t\t\t\t\t\t}\r\n                    }.Else{\r\n                        Span(Class: text-muted ajman_bold,Body: Currently there is no data)\r\n                    }\r\n                }\r\n            }.Style(padding-top: 40px; padding-left:70px; padding-right:70px;)\r\n            Div(col-md-12 content){\r\n                If(Or(#role_id# == 16,#role_id# == 18)){\r\n                    Div(Class:text-left){ \r\n                        Span(Class: ajman_text_blue ajman_bold, Body: My Units)\r\n                    }.Style(padding-bottom:10px;)\r\n                    DBFind(Source: src_units, Name: \"units\").Where(owner_id = '#key_id#').Count(ajamal_units_records).Order(\"id DESC\")\r\n                    If(#ajamal_units_records# > 0){\r\n                        Div(row){\r\n                            Div(col-md-12){\r\n                                Div(table){\r\n                                    Div(table__head){\r\n                                        Div(table__row){\r\n                                            Div(table__cell table__cell_collapse){ID}\r\n                                            Div(table__cell){ID Owner}\r\n                                            Div(table__cell){Property}\r\n                                            Div(table__cell){Status}\r\n                                            Div(table__cell){Floor}\r\n                                            Div(table__cell){Rooms}\r\n                                            Div(table__cell){Start Date}\r\n                                            Div(table__cell){End Date}\r\n                                            Div(table__cell table__cell_30){Action}\r\n                                        }\r\n                                    }\r\n                                    ForList(src_units){\r\n                                        Div(table__row){\r\n                                            Div(table__cell){#id#}\r\n                                            Div(table__cell){#owner_id#}\r\n                                            Div(table__cell){#property_id#}\r\n                                            Div(table__cell){\r\n                                                If(#status# > 0){\r\n                                                    EcosysParam(property_statuses,#status#)\r\n                                                }.Else{\r\n                                                    Not submited\r\n                                                }\r\n                                            }\r\n                                            Div(table__cell){#floor_level#}\r\n                                            Div(table__cell){#rooms#}\r\n                                            Div(table__cell){DateTime(#start_date#, \"YYYY-MM-DD\")}\r\n                                            Div(table__cell){DateTime(#end_date#, \"YYYY-MM-DD\")}\r\n                                            Div(table__cell){\r\n                                                If(Or(#status# == 0,#status# == 3, #status# == 5)){\r\n                                                    Button(Class: btn ajman_button_darkgreen_medium, Body: Submit,Contract:business_Process,Params: \"Id=1,ModelId=4,EventId=303,ResultId=1,ObjectType=2,ObjectId=#id#\")\r\n                                                    Button(Class: btn ajman_button_blue_large,Body: Attachment, Page: ajman_attachment_add,PageParams: \"object_id=#id#,object_type=2\")\r\n                                                    Button(Class: btn ajman_button_red_medium, Body: Edit, Page: unit_edit , PageParams: \"unit_id=#id#\")\r\n                                                }.Else{\r\n                                                    Button(Class: btn ajman_button_darkgreen_medium disabled, Body: Submit)\r\n                                                    Button(Class: btn ajman_button_blue_large disabled,Body: Attachment)\r\n                                                    Button(Class: btn ajman_button_red_medium disabled, Body: Edit) \r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n\t\t\t\t\t\t}\r\n                    }.Else{\r\n                        Span(Class: text-muted ajman_bold,Body: Currently there is no data)\r\n                    }\r\n                }.ElseIf(Or(#role_id# == 14,#role_id# == 15)){\r\n                    Div(Class:text-left){ \r\n                        Span(Class: ajman_text_blue ajman_bold, Body: My Rented Units)\r\n                    }.Style(padding-bottom:10px;)\r\n                    DBFind(Source: src_units, Name: \"units\").Where(tenant_id = '#key_id#').Count(ajamal_units_records).Order(\"id DESC\")\r\n                    If(#ajamal_units_records# > 0){\r\n                        Div(row){\r\n                            Div(col-md-12){\r\n                                Div(table){\r\n                                    Div(table__head){\r\n                                        Div(table__row){\r\n                                            Div(table__cell table__cell_collapse){ID}\r\n                                            Div(table__cell){ID Owner}\r\n                                            Div(table__cell){Rent}\r\n                                            Div(table__cell){Status}\r\n                                            Div(table__cell){Floor}\r\n                                            Div(table__cell){Rooms}\r\n                                            Div(table__cell){Start Date}\r\n                                            Div(table__cell){End Date}\r\n                                            Div(table__cell table__cell_collapse){Action}\r\n                                        }\r\n                                    }\r\n                                    ForList(src_units){\r\n                                        Div(table__row){\r\n                                            Div(table__cell){#id#}\r\n                                            Div(table__cell){#owner_id#}\r\n                                            Div(table__cell){#rented#}\r\n                                            Div(table__cell){\r\n                                                If(#status# > 0){\r\n                                                    EcosysParam(property_statuses,#status#)\r\n                                                }.Else{\r\n                                                    Not submited\r\n                                                }\r\n                                            }\r\n                                            Div(table__cell){#floor_level#}\r\n                                            Div(table__cell){#rooms#}\r\n                                            Div(table__cell){DateTime(#start_date#, \"YYYY-MM-DD\")}\r\n                                            Div(table__cell){DateTime(#end_date#, \"YYYY-MM-DD\")}\r\n                                            Div(table__cell){\r\n                                                Button(View contract,Class: btn ajman_button_blue_large,Page:ajman_contract_add,PageParams: \"id=#rented#\")\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n\t\t\t\t\t\t}\r\n                    }.Else{\r\n                        Span(Class: text-muted ajman_bold,Body: You do not have a rented units)\r\n                    }\r\n                    Div(col-md-2 pull-right){\r\n                        Button(Search Unit,Class: btn ajman_button_darkgreen_large, Page: units_list)\r\n                    }\r\n                }.Else{\r\n                    Div(Class:text-left){ \r\n                        Span(Class: ajman_text_blue ajman_bold, Body: Verification of Units)\r\n                    }.Style(padding-bottom:10px;)\r\n                    DBFind(Source: src_units, Name: \"units\").Where(status = '2' or status = '3').Count(ajamal_units_records).Order(\"id DESC\")\r\n                    If(#ajamal_units_records# > 0){\r\n                        Div(row){\r\n                            Div(col-md-12){\r\n                                Div(table){\r\n                                    Div(table__head){\r\n                                        Div(table__row){\r\n                                            Div(table__cell table__cell_collapse){ID}\r\n                                            Div(table__cell){ID Owner}\r\n                                            Div(table__cell){Rent}\r\n                                            Div(table__cell){Status}\r\n                                            Div(table__cell){Floor}\r\n                                            Div(table__cell){Rooms}\r\n                                            Div(table__cell){Start Date}\r\n                                            Div(table__cell table__cell_10){End Date}\r\n                                        }\r\n                                    }\r\n                                    ForList(src_units){\r\n                                        Div(table__row){\r\n                                            Div(table__cell){#id#}\r\n                                            Div(table__cell){#owner_id#}\r\n                                            Div(table__cell){#rented#}\r\n                                            Div(table__cell){\r\n                                                If(#status# > 0){\r\n                                                    EcosysParam(property_statuses,#status#)\r\n                                                }.Else{\r\n                                                    Not submited\r\n                                                }\r\n                                            }\r\n                                            Div(table__cell){#floor_level#}\r\n                                            Div(table__cell){#rooms#}\r\n                                            Div(table__cell){DateTime(#start_date#, \"YYYY-MM-DD\")}\r\n                                            Div(table__cell){DateTime(#end_date#, \"YYYY-MM-DD\")}\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n\t\t\t\t\t\t}\r\n                    }.Else{\r\n                        Span(Class: text-muted ajman_bold,Body: Currently there is no data)\r\n                    } \r\n                }\r\n            }.Style(padding-top: 40px;  padding-left:70px; padding-right:70px;)\r\n            If(Or(#role_id# == 19,#role_id# == 21)){\r\n                Div(col-md-12 content){\r\n                    Include(buss_mod_default_page)\r\n                }.Style(padding-top: 40px;  padding-left:70px; padding-right:70px;)\r\n            }\r\n            Div(col-md-12 text-center){\r\n                Include(select_another_role)\r\n            }.Style(padding-top:60px;)\r\n        }.Style(height:100vh;)\r\n    }.Style(background-color: #f7f7f7)\r\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "default_menu"
        },
        {
            "Type": "pages",
            "Name": "app_binary",
            "Value": "If(#this_app_id#>0){\r\n    SetVar(buffer_value_app_id,#this_app_id#)\r\n}.Else{\r\n    DBFind(buffer_data, src_buffer).Columns(\"value->app_id\").Where(\"key='export' and member_id=#key_id#\").Vars(buffer)\r\n    SetVar(this_app_id,#buffer_value_app_id#)\r\n}\r\nSetVar(this_page,app_binary)\r\nIf(#buffer_value_app_id# > 0){\r\n    DBFind(applications, src_app).Where(\"id=#buffer_value_app_id#\").Limit(1).Vars(\"app\")\r\n\r\n    Div(content-wrapper){\r\n        Include(apps_select)\r\n        SetTitle(\"Binary data\": #app_name#)\r\n        AddToolButton(Title: \"Upload binary\", Page: app_upload_binary, Icon: icon-plus, PageParams: \"app_id=#app_id#\")\r\n\r\n        SetVar(pager_table, binaries).(pager_where, \"app_id=#buffer_value_app_id#\").(pager_page, app_binary).(pager_limit, 50)\r\n        Include(pager_header)\r\n\r\n        SetVar(admin_page, app_binary)\r\n        Include(admin_link)\r\n\r\n        DBFind(binaries, src_binparameters).Limit(#pager_limit#).Order(#sort_name#).Offset(#pager_offset#).Where(\"app_id=#buffer_value_app_id#\")\r\n\r\n        Form(panel panel-primary){\r\n            Div(panel-body){\r\n                Div(row){\r\n                    ForList(src_binparameters){\r\n                        Div(col-md-#width# col-sm-12){\r\n                            Div(list-group-item){\r\n                                Div(row){\r\n                                    Div(col-md-4){\r\n                                        Span(Class: h5 text-bold, Body: \"#id#\").Style(margin-right: 10px;)\r\n                                        If(#member_id# == #key_id#){\r\n                                            LinkPage(Class: text-primary h5, Body: #name#, Page: app_upload_binary, PageParams: \"id=#id#,app_id=#buffer_value_app_id#\")\r\n                                        }.Else{\r\n                                            Span(Class: h5, Body: #name#)\r\n                                        }\r\n                                    }\r\n                                    Div(col-md-8 text-right){\r\n                                        Span(#hash#)\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            Div(panel-footer clearfix){\r\n                Include(pager)\r\n            }\r\n        }\r\n    }\r\n}.Else{\r\n    SetTitle(\"Binary data\")\r\n    Div(breadcrumb){\r\n        Span(Class: text-muted, Body: \"You did not select the application. Viewing resources is not available\")\r\n    }\r\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "admin_menu"
        },
        {
            "Type": "pages",
            "Name": "app_blocks",
            "Value": "If(#this_app_id#>0){\r\n    SetVar(buffer_value_app_id,#this_app_id#)\r\n}.Else{\r\n    DBFind(buffer_data, src_buffer).Columns(\"value->app_id\").Where(\"key='export' and member_id=#key_id#\").Vars(buffer)\r\n    SetVar(this_app_id,#buffer_value_app_id#)\r\n}\r\nSetVar(this_page,app_blocks)\r\n\r\nIf(#buffer_value_app_id# > 0){\r\n    DBFind(applications, src_app).Where(\"id=#buffer_value_app_id#\").Vars(\"app\")\r\n\r\n    Div(content-wrapper){\r\n        SetTitle(\"Blocks\": #app_name#)\r\n        Include(apps_select)\r\n        AddToolButton(Title: \"Create\", Page: editor, Icon: icon-plus, PageParams: \"create=block,appId=#buffer_value_app_id#\")\r\n\r\n        SetVar(pager_table, blocks).(pager_where, \"app_id=#buffer_value_app_id#\").(pager_page, app_blocks).(pager_limit, 50)\r\n        Include(pager_header)\r\n\r\n        SetVar(admin_page, app_blocks)\r\n        Include(admin_link)\r\n\r\n        DBFind(blocks, src_blocks).Limit(#pager_limit#).Order(#sort_name#).Offset(#pager_offset#).Where(\"app_id=#buffer_value_app_id#\")\r\n\r\n        Form(panel panel-primary){\r\n            Div(panel-body){\r\n                Div(row){\r\n                    ForList(src_blocks){\r\n                        Div(col-md-#width# col-sm-12){\r\n                            Div(list-group-item){\r\n                                Div(row){\r\n                                    Div(col-md-4){\r\n                                        Span(Class: h5 text-bold, Body: \"#id#\").Style(margin-right: 10px;)\r\n                                        Span(Class: h5, Body: \"#name#\")\r\n                                    }\r\n                                    Div(col-md-8){\r\n                                        Div(pull-right){\r\n                                            Span(LinkPage(Body: Em(Class: fa fa-cogs), Class: text-primary h4, Page: properties_edit, PageParams: \"edit_property_id=#id#,type=block\")).Style(margin-right: 15px;)\r\n                                            Span(LinkPage(Body: Em(Class: fa fa-edit), Class: text-primary h4, Page: editor, PageParams: \"open=block,name=#name#\"))\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            Div(panel-footer clearfix){\r\n                Include(pager)\r\n            }\r\n        }\r\n    }\r\n}.Else{\r\n    SetTitle(\"Blocks\")\r\n    Div(breadcrumb){\r\n        Span(Class: text-muted, Body: \"You did not select the application. Viewing resources is not available\")\r\n    }\r\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "admin_menu"
        },
        {
            "Type": "pages",
            "Name": "app_contracts",
            "Value": "If(#this_app_id#>0){\r\n    SetVar(buffer_value_app_id,#this_app_id#)\r\n}.Else{\r\n    DBFind(buffer_data, src_buffer).Columns(\"value->app_id\").Where(\"key='export' and member_id=#key_id#\").Vars(buffer)\r\n    SetVar(this_app_id,#buffer_value_app_id#)\r\n}\r\nSetVar(this_page,app_contracts)\r\n\r\nIf(#buffer_value_app_id#>0){\r\n    DBFind(applications, src_app).Where(\"id=#buffer_value_app_id#\").Limit(1).Vars(\"app\")\r\n\r\n    Div(content-wrapper){\r\n        SetTitle(\"Contracts\": #app_name#)\r\n        AddToolButton(Title: \"Create\", Page: editor, Icon: icon-plus, PageParams: \"create=contract,appId=#buffer_value_app_id#\")\r\n        Include(apps_select)\r\n\r\n        SetVar(pager_table, contracts).(pager_where, \"app_id=#buffer_value_app_id#\").(pager_page, app_contracts).(pager_limit, 50)\r\n        Include(pager_header)\r\n\r\n        SetVar(admin_page, app_contracts)\r\n        Include(admin_link)\r\n\r\n        DBFind(contracts, src_contracts).Limit(#pager_limit#).Order(#sort_name#).Offset(#pager_offset#).Where(\"app_id=#buffer_value_app_id#\")\r\n\r\n        Form(panel panel-primary){\r\n            Div(panel-body){\r\n                Div(row){\r\n                    ForList(src_contracts){\r\n                        Div(col-md-#width# col-sm-12){\r\n                            Div(list-group-item){\r\n                                Div(row){\r\n                                    Div(col-md-4){\r\n                                        Span(Class: h5 text-bold, Body: \"#id#\").Style(margin-right: 10px;)\r\n                                        Span(Class: h5, Body: \"#name#\")\r\n                                    }\r\n                                    Div(col-md-8){\r\n                                        Div(pull-right){\r\n                                            Span(LinkPage(Body: Em(Class: fa fa-cogs), Class: text-primary h4, Page: properties_edit, PageParams: \"edit_property_id=#id#,type=contract\")).Style(margin-right: 15px;)\r\n                                            Span(LinkPage(Body: Em(Class: fa fa-edit), Class: text-primary h4, Page: editor, PageParams: \"open=contract,name=#name#\"))\r\n                                        }\r\n                                        Div(pull-right){\r\n                                            If(#active#==1){\r\n                                                Span(Class: h5, Body: Em(Class: fa fa-check)).Style(margin-right: 50px;)\r\n                                            }.Else{\r\n                                                Span(Class: h5 text-muted, Body: Em(Class: fa fa-minus)).Style(margin-right: 50px;)\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            Div(panel-footer clearfix){\r\n                Include(pager)\r\n            }\r\n        }\r\n    }\r\n}.Else{\r\n    SetTitle(\"Contracts\")\r\n    Div(breadcrumb){\r\n        Span(Class: text-muted, Body: \"You did not select the application. Viewing resources is not available\")\r\n    }\r\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "admin_menu"
        },
        {
            "Type": "pages",
            "Name": "app_edit",
            "Value": "Div(content-wrapper){\n    SetTitle(\"Application\")\n    Div(breadcrumb){\n\t\tLinkPage(\"Applications\", apps_list)\n\t\tSpan(/).Style(margin-right: 10px; margin-left: 10px;)\n\t\tIf(#id# > 0){\n\t\t\tSpan(Class: text-muted, Body: \"Edit\")\n\t\t}.Else{\n\t\t\tSpan(Class: text-muted, Body: \"New\")\n\t\t}\n    }\n\t\n\tForm(){\n\t\tIf(#id# > 0){\n\t\t\tDBFind(applications, src_apps).Columns(\"id,name,conditions,deleted\").Where(\"id=#id#\").Limit(1).Vars(\"app\")\n\t\t\tDiv(col-md-12){\n\t\t\t\tDiv(form-group){\n\t\t\t\t\tDiv(text-left){\n\t\t\t\t\t\tLabel(\"Name\")\n\t\t\t\t\t}\n\t\t\t\t\tInput(Name: name, Disabled: \"true\", Value: #app_name#)\n\t\t\t\t}\n\t\t\t\tDiv(form-group){\n\t\t\t\t\tDiv(text-left){\n\t\t\t\t\t\tLabel(\"Change conditions\")\n\t\t\t\t\t}\n\t\t\t\t\tInput(Name: conditions, Value: #app_conditions#)\n\t\t\t\t}\n\t\t\t\tDiv(row){\n\t\t\t\t\tDiv(form-group){\n\t\t\t\t\t\tDiv(text-left col-md-6){\n\t\t\t\t\t\t\tButton(Body: \"Save\", Class: btn btn-primary, Page: apps_list, Contract: EditApplication, Params: \"ApplicationId=#id#,Conditions=Val(conditions)\")\n\t\t\t\t\t\t}\n\t\t\t\t\t\tDiv(text-right col-md-6){\n\t\t\t\t\t\t\tIf(#app_deleted# == 0){\n\t\t\t\t\t\t\t\tButton(Body: \"Delete\", Class: btn btn-danger, Page: apps_list, Contract: DelApplication, Params: \"ApplicationId=#app_id#,Value=1\")\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}.Else{\n\t\t\tDiv(col-md-12){\n\t\t\t\tDiv(form-group){\n\t\t\t\t\tDiv(text-left){\n\t\t\t\t\t\tLabel(\"Name\")\n\t\t\t\t\t}\n\t\t\t\t\tInput(Name: name)\n\t\t\t\t}\n\t\t\t\tDiv(form-group){\n\t\t\t\t\tDiv(text-left){\n\t\t\t\t\t\tLabel(\"Change conditions\")\n\t\t\t\t\t}\n\t\t\t\t\tInput(Name: conditions)\n\t\t\t\t}\n\t\t\t\tDiv(form-group){\n\t\t\t\t\tDiv(text-left){\n\t\t\t\t\t\tButton(Body: \"Save\", Class: btn btn-primary, Page: apps_list, Contract: NewApplication, Params: \"Name=Val(name),Conditions=Val(conditions)\")\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n    }\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "admin_menu"
        },
        {
            "Type": "pages",
            "Name": "app_langres",
            "Value": "If(#this_app_id#>0){\r\n    SetVar(buffer_value_app_id,#this_app_id#)\r\n}.Else{\r\n    DBFind(buffer_data, src_buffer).Columns(\"value->app_id\").Where(\"key='export' and member_id=#key_id#\").Vars(buffer)\r\n    SetVar(this_app_id,#buffer_value_app_id#)\r\n}\r\nSetVar(this_page,app_langres)\r\n\r\nIf(#buffer_value_app_id# > 0){\r\n    DBFind(applications, src_app).Where(\"id=#buffer_value_app_id#\").Vars(\"app\")\r\n\r\n    Div(content-wrapper){\r\n        SetTitle(\"Language resources\": #app_name#)\r\n        Include(apps_select)\r\n        AddToolButton(Title: \"Create\", Page: langres_add, Icon: icon-plus, PageParams: \"app_id=#app_id#\")\r\n\r\n        SetVar(pager_table, languages).(pager_where, \"app_id=#buffer_value_app_id#\").(pager_page, app_langres).(pager_limit, 50)\r\n        Include(pager_header)\r\n\r\n        SetVar(admin_page, app_langres)\r\n        Include(admin_link)\r\n\r\n        DBFind(languages, src_languages).Limit(#pager_limit#).Order(#sort_name#).Offset(#pager_offset#).Where(\"app_id=#buffer_value_app_id#\")\r\n\r\n        Form(panel panel-primary){\r\n            Div(panel-body){\r\n                Div(row){\r\n                    ForList(src_languages){\r\n                        Div(col-md-#width# col-sm-12){\r\n                            Div(list-group-item){\r\n                                Div(row){\r\n                                    Div(col-md-4){\r\n                                        Span(Class: h5 text-bold, Body: \"#id#\").Style(margin-right: 10px;)\r\n                                        Span(Class: h5, Body: \"#name#\")\r\n                                    }\r\n                                    Div(col-md-8){\r\n                                        Div(pull-right){\r\n                                            Span(LinkPage(Body: Em(Class: fa fa-edit), Class: text-primary h4, Page: langres_edit, PageParams: \"lang_id=#id#\"))\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            Div(panel-footer clearfix){\r\n                Include(pager)\r\n            }\r\n        }\r\n    }\r\n}.Else{\r\n    SetTitle(\"Language resources\")\r\n    Div(breadcrumb){\r\n        Span(Class: text-muted, Body: \"You did not select the application. Viewing resources is not available\")\r\n    }\r\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "admin_menu"
        },
        {
            "Type": "pages",
            "Name": "app_pages",
            "Value": "If(#this_app_id#>0){\r\n    SetVar(buffer_value_app_id,#this_app_id#)\r\n}.Else{\r\n    DBFind(buffer_data, src_buffer).Columns(\"value->app_id\").Where(\"key='export' and member_id=#key_id#\").Vars(buffer)\r\n    SetVar(this_app_id,#buffer_value_app_id#)\r\n}\r\nSetVar(this_page,app_pages)\r\nIf(#this_app_id#>0){\r\n    Div(content-wrapper){\r\n        DBFind(applications).Where(\"id=#this_app_id#\").Vars(application)\r\n        SetTitle(\"Pages: \"#application_name#)\r\n\r\n       Include(apps_select)\r\n        AddToolButton(Title: \"Create\", Page: editor, Icon: icon-plus, PageParams: \"create=page,appId=#this_app_id#\")\r\n\r\n        SetVar(pager_table, pages).(pager_where, \"app_id=#this_app_id#\").(pager_page,#this_page#).(pager_limit, 50)\r\n        Include(pager_header)\r\n\r\n        SetVar(admin_page, #this_page#)\r\n        Include(admin_link)\r\n\r\n        DBFind(pages, src_pages).Limit(#pager_limit#).Order(#sort_name#).Offset(#pager_offset#).Where(\"app_id=#this_app_id#\")\r\n\r\n        Form(panel panel-primary){\r\n            Div(panel-body){\r\n                Div(row){\r\n                    ForList(src_pages){\r\n                        Div(col-md-#width# col-sm-12){\r\n                            Div(list-group-item){\r\n                                Div(row){\r\n                                    Div(col-md-4){\r\n                                        Span(Class: h5 text-bold, Body: \"#id#\").Style(margin-right: 10px;)\r\n                                        LinkPage(Page: #name#, Class: text-primary h5, Body: \"#name#\")\r\n                                    }\r\n                                    Div(col-md-8){\r\n                                        Div(pull-right){\r\n                                            Span(LinkPage(Body: Em(Class: fa fa-cogs), Class: text-primary h4, Page: properties_edit, PageParams: \"edit_property_id=#id#,type=page\")).Style(margin-right: 15px;)\r\n                                            Span(LinkPage(Body: Em(Class: fa fa-edit), Class: text-primary h4, Page: editor, PageParams: \"open=page,name=#name#\"))\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            Div(panel-footer clearfix){\r\n                Include(pager)\r\n            }\r\n        }\r\n    }\r\n}.Else{\r\n    SetTitle(\"Pages\")\r\n    Div(breadcrumb){\r\n        Span(Class: text-muted, Body: \"You did not select the application. Viewing resources is not available\")\r\n    }\r\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "admin_menu"
        },
        {
            "Type": "pages",
            "Name": "app_params",
            "Value": "If(#this_app_id#>0){\r\n    SetVar(buffer_value_app_id,#this_app_id#)\r\n}.Else{\r\n    DBFind(buffer_data, src_buffer).Columns(\"value->app_id\").Where(\"key='export' and member_id=#key_id#\").Vars(buffer)\r\n    SetVar(this_app_id,#buffer_value_app_id#)\r\n}\r\nSetVar(this_page,app_params)\r\n\r\nIf(#buffer_value_app_id# > 0){\r\n    DBFind(applications, src_app).Where(\"id=#buffer_value_app_id#\").Limit(1).Vars(\"app\")\r\n\r\n    Div(content-wrapper){\r\n        Include(apps_select)\r\n        SetTitle(\"Application parameters\": #app_name#)\r\n        AddToolButton(Title: \"Create\", Page: app_params_edit, Icon: icon-plus, PageParams: \"app_id=#app_id#,create=create\")\r\n\r\n        SetVar(pager_table, app_params).(pager_where, \"app_id=#buffer_value_app_id#\").(pager_page, app_params).(pager_limit, 50)\r\n        Include(pager_header)\r\n\r\n        SetVar(admin_page, app_params)\r\n        Include(admin_link)\r\n\r\n        DBFind(app_params, src_appparameters).Limit(#pager_limit#).Order(#sort_name#).Offset(#pager_offset#).Where(\"app_id=#buffer_value_app_id#\")\r\n\r\n        Form(panel panel-primary){\r\n            Div(panel-body){\r\n                Div(row){\r\n                    ForList(src_appparameters){\r\n                        Div(col-md-#width# col-sm-12){\r\n                            Div(list-group-item){\r\n                                Div(row){\r\n                                    Div(col-md-4){\r\n                                        Span(Class: h5 text-bold, Body: \"#id#\").Style(margin-right: 10px;)\r\n                                        Span(Class: h5, Body: \"#name#\")\r\n                                    }\r\n                                    Div(col-md-8 text-right){\r\n                                        Span(LinkPage(Body: Em(Class: fa fa-edit), Class: text-primary h4, Page: app_params_edit, PageParams: \"id=#id#\"))\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            Div(panel-footer clearfix){\r\n                Include(pager)\r\n            }\r\n        }\r\n    }\r\n}.Else{\r\n    SetTitle(\"Application parameters\")\r\n    Div(breadcrumb){\r\n        Span(Class: text-muted, Body: \"You did not select the application. Viewing resources is not available\")\r\n    }\r\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "admin_menu"
        },
        {
            "Type": "pages",
            "Name": "app_params_edit",
            "Value": "Div(content-wrapper){\r\n    If(#create# == create){\r\n        SetVar(param_name, \"New\")\r\n    }.Else{\r\n\t\tDBFind(app_params, src_params).Where(\"id = #id#\").Limit(1).Vars(\"param\")\r\n    }\r\n\t\r\n\tSetTitle(\"Application parameter\")\r\n\tDiv(Class: breadcrumb){\r\n\t\tLinkPage(\"Application parameters\", app_params)\r\n\t\tSpan(/).Style(margin-right: 10px; margin-left: 10px;)\r\n\t\tSpan(Class: text-muted, Body: #param_name#)\r\n\t}\r\n\r\n    Form(){\r\n        Div(form-group){\r\n            Label(\"Name\")\r\n            If(#create# == create){\r\n                Input(Name: name)\r\n            }.Else{\r\n                Input(Name: name, Value: #param_name#,Disabled: \"true\")\r\n            }\r\n        }\r\n        Div(form-group){\r\n            If(#create# == create){\r\n                Input(Type: textarea, Name: value).Style(height: 500px !important;)\r\n            }.Else{\r\n                Input(Type: textarea, Name: value, Value: \"#param_value#\").Style(height: 500px !important;)\r\n            }\r\n        }\r\n        Div(form-group){\r\n            Label(\"Change conditions\")\r\n            If(#create# == create){\r\n                Input(Name: conditions)\r\n            }.Else{\r\n                Input(Name: conditions, Value: #param_conditions#)\r\n            }\r\n        }\r\n        Div(form-group){\r\n            If(#create# == create){\r\n                Button(Class: btn btn-primary, Body: \"Save\", Contract: NewAppParam, Params: \"Name=Val(name),Value=Val(value),Conditions=Val(conditions),ApplicationId=#app_id#\", Page: app_params)\r\n            }.Else{\r\n                Button(Class: btn btn-primary, Body: \"Save\", Contract: EditAppParam, Params: \"Id=#id#,Value=Val(value),Conditions=Val(conditions)\", Page: app_params)\r\n            }\r\n        }\r\n    }\r\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "admin_menu"
        },
        {
            "Type": "pages",
            "Name": "app_tables",
            "Value": "If(#this_app_id#>0){\r\n    SetVar(buffer_value_app_id,#this_app_id#)\r\n}.Else{\r\n    DBFind(buffer_data, src_buffer).Columns(\"value->app_id\").Where(\"key='export' and member_id=#key_id#\").Vars(buffer)\r\n    SetVar(this_app_id,#buffer_value_app_id#)\r\n}\r\nSetVar(this_page,app_tables)\r\n\r\nIf(#buffer_value_app_id# > 0){\r\n    DBFind(applications, src_app).Where(\"id=#buffer_value_app_id#\").Limit(1).Vars(\"app\")\r\n\r\n    Div(content-wrapper){\r\n        Include(apps_select)\r\n        SetTitle(\"Tables\": #app_name#)\r\n        AddToolButton(Title: \"Create\", Page: table_create, Icon: icon-plus, PageParams: \"app_id=#app_id#\")\r\n\r\n        SetVar(pager_table, tables).(pager_where, \"app_id=#buffer_value_app_id#\").(pager_page, app_tables).(pager_limit, 50)\r\n        Include(pager_header)\r\n\r\n        SetVar(admin_page, app_tables)\r\n        Include(admin_link)\r\n\r\n        DBFind(tables, src_tables).Limit(#pager_limit#).Order(#sort_name#).Offset(#pager_offset#).Where(\"app_id=#buffer_value_app_id#\")\r\n\r\n        Form(panel panel-primary){\r\n            Div(panel-body){\r\n                Div(row){\r\n                    ForList(src_tables){\r\n                        Div(col-md-#width# col-sm-12){\r\n                            Div(list-group-item){\r\n                                Div(row){\r\n                                    Div(col-md-4){\r\n                                        Span(Class: h5 text-bold, Body: \"#id#\").Style(margin-right: 10px;)\r\n                                        LinkPage(Page: table_view, Class: text-primary h5, Body: \"#name#\", PageParams: \"tabl_id=#id#\")\r\n                                    }\r\n                                    Div(col-md-8){\r\n                                        Div(pull-right){\r\n                                            Span(LinkPage(Body: Em(Class: fa fa-edit), Class: text-primary h4, Page: table_edit, PageParams: \"tabl_id=#id#\"))\r\n                                        }\r\n                                        Div(pull-right){\r\n                                            DBFind(#name#).Columns(\"id\").Count(countvar)\r\n                                            Span(Class: h5 text-muted, Body: #countvar#).Style(margin-right: 50px;)\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            Div(panel-footer clearfix){\r\n                Include(pager)\r\n            }\r\n        }\r\n    }\r\n}.Else{\r\n    SetTitle(\"Tables\")\r\n    Div(breadcrumb){\r\n        Span(Class: text-muted, Body: \"You did not select the application. Viewing resources is not available\")\r\n    }\r\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "admin_menu"
        },
        {
            "Type": "pages",
            "Name": "app_upload_binary",
            "Value": "Div(content-wrapper){\n    SetTitle(\"Binary data\")\n    Div(breadcrumb){\n        LinkPage(\"Binary data\", app_binary)\n        Span(/).Style(margin-right: 10px; margin-left: 10px;)\n\t\tIf(#id# > 0){\n\t\t\tSpan(\"Edit\", text-muted)\n\t\t\tDBFind(binaries).Columns(name).Where(id = #id#).Vars(binary)\n\t\t}.Else{\n\t\t\tSpan(\"Upload\", text-muted)\n\t\t}\n    }\n\t\n\tForm(){\n\t\tDiv(form-group){\n\t\t\tDiv(text-left){\n\t\t\t\tLabel(\"Name\")\n\t\t\t}\n\t\t\tIf(#id# > 0){\n\t\t\t\tInput(Name: name, Disabled: disabled, Value: #binary_name#)\n\t\t\t}.Else{\n\t\t\t\tInput(Name: name)\n\t\t\t}\n\t\t}\n\t\tDiv(form-group){\n\t\t\tDiv(text-left){\n\t\t\t\tLabel(\"File\")\n\t\t\t}\n\t\t\tInput(Name: databin, Type: file)\n\t\t}\n\t\tDiv(form-group text-left){\n\t\t\tButton(Body: \"Upload\", Contract: UploadBinary, Class: btn btn-primary, Params: \"Name=Val(name),ApplicationId=#app_id#,Data=Val(databin),MemberID=#key_id#\", Page: app_binary)\n\t\t}\n    }\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "admin_menu"
        },
        {
            "Type": "pages",
            "Name": "apps_list",
            "Value": "Div(fullscreen){\n    If(#deleted# == deleted){\n        SetTitle(\"Inactive applications\")\n\t\tDiv(breadcrumb){\n\t\t\tLinkPage(\"Applications\", apps_list)\n\t\t\tSpan(/).Style(margin-right: 10px; margin-left: 10px;)\n\t\t\tSpan(Class: text-muted, Body: \"Inactive applications\")\n\t\t}\n\t\n        DBFind(applications, src_applications).Where(\"deleted=1\").Order(\"id\").Count(countvar).Custom(restore_btn){\n            Button(Class: btn btn-link, Page: apps_list, Contract: DelApplication, Params: \"ApplicationId=#id#\", Body: \"Restore\")\n        }\n        If(#countvar# > 0) {\n            Table(Source: src_applications, Columns: \"ID=id,Name=name,Conditions=conditions,=restore_btn\").Style(\n                tbody > tr:nth-of-type(odd) {\n                    background-color: #fafbfc;\n                }\n                tbody > tr > td {\n                    word-break: break-all;\n                    font-weight: 400;\n                    font-size: 13px;\n                    color: #666;\n                    border-top: 1px solid #eee;\n                    vertical-align: middle;\n                }\n                tr > *:first-child {\n                    padding-left:20px;\n                    width: 80px;\n                }\n                tr > *:last-child {\n                    padding-right:80px;\n                    text-align:right;\n                    width: 100px;\n                }\n                thead {\n                    background-color: #eee;\n                }\n            )\n        }.Else{\n            Div(content-wrapper){\n                Span(Class: text-muted, Body: \"You don't have any inactive applications\")\n            }\n        }\n    }.Else{\n        SetTitle(\"Applications\")\n\t\tDiv(breadcrumb){\n\t\t\tSpan(Class: text-muted, Body: \"This section is used to select installed applications\")\n\t\t}\n        AddToolButton(Title: \"Inactive apps\", Page: apps_list, Icon: icon-close, PageParams:\"deleted=deleted\")\n        AddToolButton(Title: \"Create\", Page: app_edit, Icon: icon-plus)\n\t\n        DBFind(buffer_data, src_buffer).Columns(\"value->app_id,value->app_name,value->menu_name,value->menu_id,value->count_menu\").Where(\"key='export' and member_id=#key_id#\").Vars(buffer)\n        DBFind(applications, src_applications).Where(\"deleted=0\").Order(\"id\").Custom(custom_check){\n            If(#id#==#buffer_value_app_id#){\n                Span(Em(Class: fa fa-check)).Style(margin-left:30px;)\n            }.Else{\n                Button(Class: btn btn-link, Contract: Export_NewApp, Params: \"app_id=#id#\", Page: apps_list, Body: \"select\")\n            }\n        }.Custom(custom_actions){\n            Button(Class: btn btn-link, Body: Em(Class: fa fa-edit), Page: app_edit, PageParams: \"id=#id#\")\n        }\n\n        Table(Source: src_applications, Columns: \"ID=id,Name=name,Conditions=conditions,Selected=custom_check,=custom_actions\").Style(\n            tbody > tr:nth-of-type(odd) {\n                background-color: #fafbfc;\n            }\n            tbody > tr > td {\n                word-break: break-all;\n                font-weight: 400;\n                font-size: 13px;\n                color: #666;\n                border-top: 1px solid #eee;\n                vertical-align: middle;\n            }\n            tr > *:first-child {\n                padding-left:20px;\n                width: 80px;\n            }\n            tr > *:last-child {\n                padding-right:15px;\n                text-align:right;\n                width: 100px;\n            }\n            thead {\n                background-color: #eee;\n            }\n        )\n    }\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "admin_menu"
        },
        {
            "Type": "pages",
            "Name": "column_add",
            "Value": "Div(content-wrapper){\n\tSetTitle(\"Tables\")\n\tDiv(breadcrumb){\n\t\tDiv(){\n\t\t\tLinkPage(\"Tables\", app_tables)\n\t\t\tSpan(/).Style(margin-right: 10px; margin-left: 10px;)\n\t\t\tLinkPage(\"Edit table\", table_edit, PageParams:\"tabl_id=#tabl_id#\")\n\t\t\tSpan(/).Style(margin-right: 10px; margin-left: 10px;)\n\t\t\tSpan(\"Add column\", text-muted)\n\t\t}\n\t}\n\n\tForm(panel panel-default){\n\t\tDiv(panel-body){\n\t\t\tDiv(form-group){\n\t\t\t\tLabel(\"Column\")\n\t\t\t\tInput(Name: ColumnName)\n\t\t\t}\n\t\t\tDiv(form-group){\n\t\t\t\tData(src_type,\"type,name\"){\n\t\t\t\t\ttext,\"Text\"\n\t\t\t\t\tnumber,\"Number\"\n\t\t\t\t\tvarchar,\"Varchar\"\n\t\t\t\t\tdatetime,\"Date/Time\"\n\t\t\t\t\tmoney,\"Money\"\n\t\t\t\t\tdouble,\"Double\"\n\t\t\t\t\tcharacter,\"Character\"\n\t\t\t\t\tjson,\"JSON\"\n\t\t\t\t}\n\t\t\t\tLabel(\"Type\")\n\t\t\t\tSelect(Name: Coltype, Source: src_type, NameColumn: name, ValueColumn: type, Value:\"text\")\n\t\t\t}\n\t\t\tDiv(form-group){\n\t\t\t\tLabel(\"Update\")\n\t\t\t\tInput(Name: ColumnUp)\n\t\t\t}\n\t\t}\n\t\tDiv(panel-footer clearfix){\n\t\t\tButton(Body: \"Add column\", Contract: NewColumn, Class: btn btn-primary, Page: table_edit, PageParams: \"tabl_id=#tabl_id#\", Params: \"TableName=#next_table_name#,Name=Val(ColumnName),Type=Val(Coltype),Permissions=Val(ColumnUp)\")\n\t\t}\n\t}\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "admin_menu"
        },
        {
            "Type": "pages",
            "Name": "column_edit",
            "Value": "Div(content-wrapper){\n\tSetTitle(\"Edit column\")\n\tDiv(breadcrumb){\n\t\tDiv(){\n\t\t\tLinkPage(\"Tables\", app_tables)\n\t\t\tSpan(/).Style(margin-right: 10px; margin-left: 10px;)\n\t\t\tLinkPage(\"Edit table\", table_edit, PageParams:\"tabl_id=#tabl_id#\")\n\t\t\tSpan(/).Style(margin-right: 10px; margin-left: 10px;)\n\t\t\tSpan(\"Edit column\", text-muted)\n\t\t}\n\t}\n\n\tDBFind(tables, src_mem).Columns(\"id,name,columns,conditions\").Vars(pre).WhereId(#tabl_id#)\n\tJsonToSource(src_columns, #pre_columns#)\n\tForm(panel panel-default){\n\t\tDiv(panel-body){\n\t\t\tForList(src_columns){\n\t\t\t\tIf(#key# == #name_column#){\n\t\t\t\t\tDiv(form-group){\n\t\t\t\t\t\tLabel(\"Column\")\n\t\t\t\t\t\tInput(Name: ColumnName, Disabled: \"true\", Value: #name_column#)\n\t\t\t\t\t}\n\t\t\t\t\tDiv(form-group){\n\t\t\t\t\t\tLabel(\"Type\")\n\t\t\t\t\t\tSetVar(col_type, GetColumnType(#pre_name#, #key#))\n\t\t\t\t\t\tIf(#col_type# == character){\n\t\t\t\t\t\t\tSetVar(input_type, \"Character\")\n\t\t\t\t\t\t}\n\t\t\t\t\t\tIf(#col_type# == text){\n\t\t\t\t\t\t\tSetVar(input_type, \"Text\")\n\t\t\t\t\t\t}\n\t\t\t\t\t\tIf(#col_type# == number){\n\t\t\t\t\t\t\tSetVar(input_type, \"Number\")\n\t\t\t\t\t\t}\n\t\t\t\t\t\tIf(#col_type# == money){\n\t\t\t\t\t\t\tSetVar(input_type, \"Money\")\n\t\t\t\t\t\t}\n\t\t\t\t\t\tIf(#col_type# == varchar){\n\t\t\t\t\t\t\tSetVar(input_type, \"Varchar\")\n\t\t\t\t\t\t}\n\t\t\t\t\t\tIf(#col_type# == datetime){\n\t\t\t\t\t\t\tSetVar(input_type, \"Date/Time\")\n\t\t\t\t\t\t}\n\t\t\t\t\t\tIf(#col_type# == double){\n\t\t\t\t\t\t\tSetVar(input_type, \"Double\")\n\t\t\t\t\t\t}\n\t\t\t\t\t\tIf(#col_type# == character){\n\t\t\t\t\t\t\tSetVar(input_type, \"Character\")\n\t\t\t\t\t\t}\n\t\t\t\t\t\tIf(#col_type# == json){\n\t\t\t\t\t\t\tSetVar(input_type, \"JSON\")\n\t\t\t\t\t\t}\n\t\t\t\t\t\tIf(#col_type# == bytea){\n\t\t\t\t\t\t\tSetVar(input_type, \"Binary Data\")\n\t\t\t\t\t\t}\n\t\t\t\t\t\tIf(#col_type# == uuid){\n\t\t\t\t\t\t\tSetVar(input_type, \"UUID\")\n\t\t\t\t\t\t}\n\t\t\t\t\t\tInput(Name: Coltype, Disabled: \"true\", Value: #input_type#)\n\t\t\t\t\t}\n\t\t\t\t\tDiv(form-group){\n\t\t\t\t\t\tLabel(\"Update\")\n\t\t\t\t\t\tInput(Name: ColumnUp, Value: #value#)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tDiv(panel-footer clearfix){\n\t\t\tButton(Body: \"Save\", Contract: EditColumn, Class: btn btn-primary, Page: table_edit, PageParams: \"tabl_id=#tabl_id#\", Params: \"TableName=#pre_name#,Name=Val(ColumnName),Type=Val(Coltype),Permissions=Val(ColumnUp)\")\n\t\t}\n\t}\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "admin_menu"
        },
        {
            "Type": "pages",
            "Name": "export_download",
            "Value": "Div(fullscreen){\n    SetTitle(\"Export\")\n    Div(breadcrumb){\n        Span(Class: text-muted, Body: \"Payload was formed. You can download it now\")\n    }\n\n    DBFind(binaries, src_binaries).Where(\"name='export' and member_id=#key_id# and app_id=1\").Custom(app_name){\n        DBFind(Name: buffer_data, Source: src_buffer).Columns(\"value->app_name\").Where(\"key='export' and member_id=#key_id#\").Vars(buffer)\n        Span(#buffer_value_app_name#)\n    }\n\n    Table(Source: src_binaries, \"Applications=app_name,=data\").Style(\n        tbody > tr:nth-of-type(odd) {\n            background-color: #fafbfc;\n        }\n        tbody > tr > td {\n            word-break: break-all;\n            font-weight: 400;\n            font-size: 13px;\n            color: #666;\n            border-top: 1px solid #eee;\n            vertical-align: middle;\n        }\n        tr > *:first-child {\n            padding-left:20px;\n            width: 100px;\n        }\n        tr > *:last-child {\n            padding-right:20px;\n            text-align:right;\n        }\n        thead {\n            background-color: #eee;\n        }\n    )\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "admin_menu"
        },
        {
            "Type": "pages",
            "Name": "export_resources",
            "Value": "Div(content-wrapper){\n    SetTitle(\"Export\")\n    Div(breadcrumb){\n        Span(Class: text-muted, Body: \"Select the application which do you want to export and proceed to the payload generation process.\")\n    }\n\n    Include(export_link)\n    DBFind(buffer_data, src_buffer).Columns(\"value->app_id,value->app_name,value->menu_name,value->menu_id,value->count_menu\").Where(\"key='export' and member_id=#key_id#\").Vars(buffer)\n\n    If(#buffer_value_app_id# > 0){\n        If(#res_type#==\"pages\"){\n            DBFind(pages, src).Custom(cbox){\n                Input(Name: cbox, Type: checkbox, Value: true, Disabled: 1)\n            }.Where(\"app_id = #buffer_value_app_id#\").Order(\"id\")\n        }\n        If(#res_type#==\"blocks\"){\n            DBFind(blocks, src).Custom(cbox){\n                Input(Name: cbox, Type: checkbox, Value: true, Disabled: 1)\n            }.Where(\"app_id = #buffer_value_app_id#\").Order(\"id\")\n        }\n        If(#res_type#==\"menu\"){\n            DBFind(menu, src).Custom(cbox){\n                Input(Name: cbox, Type: checkbox, Value: true, Disabled: 1)\n            }.Where(\"id in (#buffer_value_menu_id#)\").Order(\"id\")\n        }\n        If(#res_type#==\"parameters\"){\n            DBFind(app_params, src).Custom(cbox){\n                Input(Name: cbox, Type: checkbox, Value: true, Disabled: 1)\n            }.Where(\"app_id = #buffer_value_app_id#\").Order(\"id\")\n        }\n        If(#res_type#==\"languages\"){\n            DBFind(languages, src).Custom(cbox){\n                Input(Name: cbox, Type: checkbox, Value: true, Disabled: 1)\n            }.Where(\"app_id = #buffer_value_app_id#\").Order(\"id\")\n        }\n        If(#res_type#==\"contracts\"){\n            DBFind(contracts, src).Custom(cbox){\n                Input(Name: cbox, Type: checkbox, Value: true, Disabled: 1)\n            }.Where(\"app_id = #buffer_value_app_id#\").Order(\"id\")\n        }\n        If(#res_type#==\"tables\"){\n            DBFind(tables, src).Custom(cbox){\n                Input(Name: cbox, Type: checkbox, Value: true, Disabled: 1)\n            }.Where(\"app_id = #buffer_value_app_id#\").Order(\"id\")\n        }\n    }\n\n    Div(row){\n        Div(col-md-9 col-md-offset-0){\n            Table(src, \"ID=id,Name=name,=cbox\").Style(\n                tbody > tr:nth-of-type(odd) {\n                    background-color: #fafbfc;\n                }\n                tbody > tr > td {\n                    word-break: break-all;\n                    padding: 8px 20px !important;\n                    font-weight: 400;\n                    font-size: 13px;\n                    color: #666;\n                    border-top: 1px solid #eee;\n                    vertical-align: middle;\n                }\n                tr > *:first-child {\n                    padding-left:20px;\n                    width: 100px;\n                }\n                tr > *:last-child {\n                    text-align:right;\n                    padding-right:20px;\n                    width: 50px;\n                }\n                thead {\n                    background-color: #eee;\n                }\n            )\n        }\n        Div(col-md-3 col-md-offset-0){\n            Include(export_info)\n        }\n    }\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "admin_menu"
        },
        {
            "Type": "pages",
            "Name": "import_app",
            "Value": "Div(content-wrapper){\n    DBFind(buffer_data, src_buffer).Columns(\"id,value->name,value->data\").Where(\"key='import' and member_id=#key_id#\").Vars(prefix)\n    DBFind(buffer_data, src_buffer).Columns(\"value->app_name,value->pages,value->pages_count,value->blocks,value->blocks_count,value->menu,value->menu_count,value->parameters,value->parameters_count,value->languages,value->languages_count,value->contracts,value->contracts_count,value->tables,value->tables_count\").Where(\"key='import_info' and member_id=#key_id#\").Vars(info)\n\n    SetTitle(\"Import - #info_value_app_name#\")\n    Data(data_info, \"name,count,info\"){\n        Pages,\"#info_value_pages_count#\",\"#info_value_pages#\"\n        Blocks,\"#info_value_blocks_count#\",\"#info_value_blocks#\"\n        Menu,\"#info_value_menu_count#\",\"#info_value_menu#\"\n        Parameters,\"#info_value_parameters_count#\",\"#info_value_parameters#\"\n        Language resources,\"#info_value_languages_count#\",\"#info_value_languages#\"\n        Contracts,\"#info_value_contracts_count#\",\"#info_value_contracts#\"\n        Tables,\"#info_value_tables_count#\",\"#info_value_tables#\"\n    }\n    Div(breadcrumb){\n        Span(Class: text-muted, Body: \"Your data that you can import\")\n    }\n\n    Div(panel panel-primary){\n        ForList(data_info){\n            Div(list-group-item){\n                Div(row){\n                    Div(col-md-10 mc-sm text-left){\n                        Span(Class: text-bold, Body: \"#name#\")\n                    }\n                    Div(col-md-2 mc-sm text-right){\n                        If(#count# > 0){\n                            Span(Class: text-bold, Body: \"(#count#)\")\n                        }.Else{\n                            Span(Class: text-muted, Body: \"(0)\")\n                        }\n                    }\n                }\n                Div(row){\n                    Div(col-md-12 mc-sm text-left){\n                        If(#count# > 0){\n                            Span(Class: h6, Body: \"#info#\")\n                        }.Else{\n                            Span(Class: text-muted h6, Body: \"Nothing selected\")\n                        }\n                    }\n                }\n            }\n        }\n        If(#prefix_id# > 0){\n            Div(list-group-item text-right){\n                Button(Body: \"Import\", Class: btn btn-primary, Page: apps_list).CompositeContract(\"Import\", \"#prefix_value_data#\")\n            }\n        }\n    }\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "admin_menu"
        },
        {
            "Type": "pages",
            "Name": "import_upload",
            "Value": "Div(content-wrapper){\r\n    SetTitle(\"Import\")\r\n    Div(breadcrumb){\r\n        Span(Class: text-muted, Body: \"Select payload that you want to import\")\r\n    }\r\n    Form(panel panel-primary){\r\n        Div(list-group-item){\r\n            Input(Name: input_file, Type: file)\r\n        }\r\n        Div(list-group-item text-right){\r\n            Button(Body: \"Load\", Class: btn btn-primary, Contract: @1Import_Upload, Page: import_app)\r\n        }\r\n    }\r\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "admin_menu"
        },
        {
            "Type": "pages",
            "Name": "langres_edit",
            "Value": "Div(content-wrapper){\r\n\tSetTitle(\"Language resources\")\r\n\tDiv(Class: breadcrumb){\r\n\t\tLinkPage(\"Language resources\", app_langres)\r\n\t\tSpan(/).Style(margin-right: 10px; margin-left: 10px;)\r\n\t\tSpan(Class: text-muted, Body: \"Edit\")\r\n\t}\r\n\t\r\n\tForm(panel panel-default){\r\n\t\tDiv(panel-body){\r\n\t\t\tDBFind(languages, src_leng).Vars(pre).WhereId(#lang_id#)\r\n\t\t\tDiv(row){\r\n\t\t\t\tDiv(col-md-12){\r\n\t\t\t\t\tLabel(\"Name\")\r\n\t\t\t\t\tInput(Name: LangName, Disabled: \"true\", Value: #pre_name#)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tDiv(row){\r\n\t\t\t\tDiv(col-md-1 mt-lg){\r\n\t\t\t\t\tLabel(Class: text-muted, Body: \"Locale\")\r\n\t\t\t\t}\r\n\t\t\t\tDiv(col-md-10 mt-lg){\r\n\t\t\t\t\tLabel(Class: text-muted, Body: \"Value\")\r\n\t\t\t\t}\r\n\t\t\t\tDiv(col-md-1 mt-lg){\r\n\t\t\t\t\tLabel(Class: text-muted, Body: \"Action\")\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tSetVar(json,#pre_res#)\r\n\t\t\tJsonToSource(pv, #json#)\r\n\t\t\tForList(Source: pv){\r\n\t\t\t\tDiv(row){\r\n\t\t\t\t\tDiv(col-md-1 mt-sm){\r\n\t\t\t\t\t\tInput(Name: idshare, Value: #key#)\r\n\t\t\t\t\t}.Style(input {padding: 6px;text-align:center;})\r\n\t\t\t\t\tDiv(col-md-10 mt-sm){\r\n\t\t\t\t\t\tInput(Name: share, Value: #value#)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tDiv(col-md-1 mt-sm){\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tIf(#del# == 1){\r\n\t\t\t\tSetVar(next_count, Calculate( Exp: #count_sec# - 1, Type: int))\r\n\t\t\t}.Else{\r\n\t\t\t\tIf(GetVar(count)==\"\"){\r\n\t\t\t\t\tSetVar(count, 0)\r\n\t\t\t\t\tSetVar(next_count, Calculate( Exp: #count#, Type: int))\r\n\t\t\t\t}.Else{\r\n\t\t\t\t\tSetVar(next_count, Calculate( Exp: #count_sec# + 1, Type: int))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tRange(params_range, 0, #next_count#)\r\n\t\t\tForList(Source: params_range){\r\n\t\t\t\tDiv(row){\r\n\t\t\t\t\tDiv(col-md-1 mt-sm){\r\n\t\t\t\t\t\tInput(Name:idshare)\r\n\t\t\t\t\t}.Style(input {padding: 6px;text-align:center;})\r\n\t\t\t\t\tDiv(col-md-10 mt-sm){\r\n\t\t\t\t\t\tInput(Name:share)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tDiv(col-md-1 mt-sm){\r\n\t\t\t\t\t\tIf(And(#next_count# == #params_range_index#, #next_count# > 0)){\r\n\t\t\t\t\t\t\tButton(Em(Class: fa fa-trash), Class: btn btn-default, PageParams: \"lang_id=#lang_id#,count_sec=#next_count#,count=#count#,del=1\", Page:langres_edit)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tDiv(row){\r\n\t\t\t\tDiv(col-md-12 mt-lg){\r\n\t\t\t        LinkPage(Body: \"Add localization\", Page: langres_edit, PageParams: \"lang_id=#lang_id#,count_sec=#next_count#,count=#count#\")\r\n                }\r\n            }\r\n\t\t}\r\n\t\tDiv(panel-footer){\r\n\t\t\tButton(Body: \"Save\", Class: btn btn-primary, Contract: @1EditLang, Params: \"Value=Val(share),IdLanguage=Val(idshare),Id=#lang_id#\", Page: app_langres)\r\n\t\t}\r\n\t}\r\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "admin_menu"
        },
        {
            "Type": "pages",
            "Name": "langres_add",
            "Value": "Div(content-wrapper){\r\n    SetTitle(\"Language resources\")\r\n    Div(Class: breadcrumb){\r\n        LinkPage(\"Language resources\", app_langres)\r\n        Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n        Span(Class: text-muted, Body: \"Create\")\r\n    }\r\n\r\n    Form(panel panel-default){\r\n        Div(panel-body){\r\n            Div(row){\r\n                Div(col-md-12){\r\n                    Label(\"Name\")\r\n                    Input(Name: LangName)\r\n                }\r\n            }\r\n            Div(row){\r\n                Div(col-md-1 mt-lg){\r\n                    Label(Class: text-muted, Body: \"Locale\")\r\n                }\r\n                Div(col-md-10 mt-lg){\r\n                    Label(Class: text-muted, Body: \"Value\")\r\n                }\r\n                Div(col-md-1 mt-lg){\r\n                    Label(Class: text-muted, Body: \"Action\")\r\n                }\r\n            }\r\n            If(GetVar(cs)==\"\"){\r\n                SetVar(cs, Calculate( Exp: 0, Type: int))\r\n            }\r\n            If(#del# == 1){\r\n                SetVar(cs, Calculate( Exp: #cs# - 1, Type: int))\r\n            }.Else{\r\n                SetVar(cs, Calculate( Exp: #cs# + 1, Type: int))\r\n            }\r\n            Range(params_range, 0, #cs#)\r\n            ForList(Source: params_range){\r\n                Div(row){\r\n                    Div(col-md-1 mt-sm){\r\n                        Input(Name:idshare)\r\n                    }.Style(input {padding: 6px;text-align:center;})\r\n                    Div(col-md-10 mt-sm){\r\n                        Input(Name:share)\r\n                    }\r\n                    Div(col-md-1 mt-sm){\r\n                        If(And(#cs#==#params_range_index#,#cs#>1)){\r\n                            Button(Body: Em(Class: fa fa-trash), Class: btn btn-default, PageParams: \"cs=#cs#,del=1,app_id=1\", Page: langres_add)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            Div(row){\r\n                Div(col-md-12 mt-lg){\r\n                    LinkPage(Body: \"Add localization\", Page: langres_add, PageParams:\"cs=#cs#,app_id=1\")\r\n                }\r\n            }\r\n        }\r\n        Div(panel-footer){\r\n            Button(Body: \"Save\", Class: btn btn-primary, Contract:@1NewLang, Page: app_langres, Params: \"ApplicationId=1,Name=Val(LangName),Value=Val(share),IdLanguage=Val(idshare)\")\r\n        }\r\n    }\r\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "admin_menu"
        },
        {
            "Type": "pages",
            "Name": "menus_list",
            "Value": "Div(fullscreen){\n    SetTitle(\"Menu\")\n    AddToolButton(Title: \"Create\", Page: editor, Icon: icon-plus, PageParams: \"create=menu,appId=0\")\n\tDiv(breadcrumb){\n\t\tSpan(Class: text-muted, Body: \"This section is used to manage the menu\")\n\t}\n\n    DBFind(menu, src_menus).Limit(250).Order(\"id\").Custom(action){\n        Span(LinkPage(Body: Em(Class: fa fa-cogs), Class: text-primary h4, Page: properties_edit, PageParams: \"edit_property_id=#id#,type=menu\")).Style(margin-right: 20px;)\n        Span(LinkPage(Body: Em(Class: fa fa-edit), Class: text-primary h4, Page: editor, PageParams: \"open=menu,name=#name#\"))\n    }\n\n    Table(src_menus, \"ID=id,Name=name,Title=title,Conditions=conditions,=action\").Style(\n    tbody > tr:nth-of-type(odd) {\n        background-color: #fafbfc; \n    }\n    tbody > tr > td {\n        word-break: break-all;\n        font-weight: 400;\n        font-size: 13px;\n        color: #666;\n        border-top: 1px solid #eee;\n        vertical-align: middle;\n    }\n    tr  > *:first-child {\n        padding-left:20px;\n        width: 80px;\n    }\n    tr  > *:last-child {\n        padding-right:30px;\n        text-align:right; \n        width: 100px;\n    }\n    thead {\n        background-color: #eee;\n    })\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "admin_menu"
        },
        {
            "Type": "pages",
            "Name": "params_edit",
            "Value": "Div(content-wrapper){\n\tIf(#stylesheet# == stylesheet){\n\t\tDBFind(parameters, src_params).Where(name='#stylesheet#').Vars(\"param\")\n\t}.Else{\n\t\tIf(#id#>0){\n\t\t\tDBFind(parameters, src_params).WhereId(#id#).Vars(\"param\")\n\t\t}.Else{\n\t\t\tSetVar(param_name, \"New\")\n\t\t}\n\t}\n\n\tSetTitle(\"Ecosystem parameters\")\n    Div(Class: breadcrumb){\n        LinkPage(\"Ecosystem parameters\", params_list)\n        Span(/).Style(margin-right: 10px; margin-left: 10px;)\n        Span(Class: text-muted, Body: #param_name#)\n    }\n\t\n\tForm(){\n\t\tDiv(form-group){\n\t\t\tLabel(\"Name\")\n\t\t\tIf(#param_id#>0){\n\t\t\t\tInput(Name: name, Value: #param_name#, Disabled: \"true\")\n\t\t\t}.Else{\n\t\t\t\tInput(Name: name)\n\t\t\t}\n\t\t}\n\t\tDiv(form-group){\n\t\t\tIf(#param_id#>0){\n\t\t\t\tInput(Type: textarea, Name: value, Value: \"#param_value#\").Style(height: 500px !important;)\n\t\t\t}.Else{\n\t\t\t\tInput(Type: textarea, Name: value).Style(height: 500px !important;)\n\t\t\t}\n\t\t}\n\t\tDiv(form-group){\n\t\t\tLabel(\"Change conditions\")\n\t\t\tIf(#param_id#>0){\n\t\t\t\tInput(Name: conditions, Value: #param_conditions#)\n\t\t\t}.Else{\n\t\t\t\tInput(Name: conditions)\n\t\t\t}\n\t\t}\n\t\tDiv(form-group){\n\t\t\tIf(#param_id#>0){\n\t\t\t\tButton(Class: btn btn-primary, Body: \"Save\", Contract: EditParameter, Params: \"Id=#param_id#,Value=Val(value),Conditions=Val(conditions)\", Page: params_list)\n\t\t\t}.Else{\n\t\t\t\tButton(Class: btn btn-primary, Body: \"Save\", Contract: NewParameter, Params: \"Name=Val(name),Value=Val(value),Conditions=Val(conditions)\", Page: params_list)\n\t\t\t}\n\t\t}\n\t}\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "admin_menu"
        },
        {
            "Type": "pages",
            "Name": "params_list",
            "Value": "Div(fullscreen){\n    SetTitle(\"Ecosystem parameters\")\n    AddToolButton(Title: \"Manage stylesheet\", Page: params_edit, Icon: icon-picture, PageParams:\"stylesheet=stylesheet\")\n    AddToolButton(Title: \"Create\", Page: params_edit, Icon: icon-plus)\n    Div(breadcrumb){\n        Span(Class: text-muted, Body: \"This section is used to configure stored reusable parameters\")\n    }\n\n    DBFind(parameters, src_appparameters).Order(\"id\").Custom(custom_actions){\n        LinkPage(Body: Em(Class: fa fa-edit), Class: text-primary h4, Page: params_edit, PageParams: \"id=#id#\")\n    }\n\n    Table(src_appparameters, \"ID=id,Name=name,Application=app_id,Value=value,Conditions=conditions,=custom_actions\").Style(\n        tbody > tr:nth-of-type(odd) {\n            background-color: #fafbfc;\n        }\n        tbody > tr > td {\n            word-break: break-all;\n            font-weight: 400;\n            font-size: 13px;\n            color: #666;\n            border-top: 1px solid #eee;\n            vertical-align: middle;\n        }\n        tr > *:first-child {\n            padding-left:20px;\n            width: 80px;\n        }\n        tr > *:last-child {\n            padding-right:30px;\n            text-align:right;\n            width: 100px;\n        }\n        thead {\n            background-color: #eee;\n        }\n    )\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "admin_menu"
        },
        {
            "Type": "pages",
            "Name": "properties_edit",
            "Value": "Div(Class: content-wrapper){\n\tSetTitle(\"Edit properties\")\n\tDiv(breadcrumb){\n\t\tDiv(){\n\t\t\tIf(#type# == page){\n\t\t\t\tLinkPage(\"Pages\", app_pages)\n\t\t\t\tSpan(/).Style(margin-right: 10px; margin-left: 10px;)\n\t\t\t\tSpan(\"Edit page\", text-muted)\n\t\t\t\tDBFind(Name: pages, Source: src_page).WhereId(#edit_property_id#).Vars(item)\n\t\t\t\tDBFind(menu, src_menus)\n\t\t\t}\n\t\t\tIf(#type# == contract){\n\t\t\t\tLinkPage(\"Contracts\", app_contracts)\n\t\t\t\tSpan(/).Style(margin-right: 10px; margin-left: 10px;)\n\t\t\t\tSpan(\"Edit contract\", text-muted)\n\t\t\t\tDBFind(Name: contracts, Source: src_contract).WhereId(#edit_property_id#).Vars(item)\n\t\t\t}\n            If(#type# == block){\n\t\t\t\tLinkPage(\"Blocks\", app_blocks)\n\t\t\t\tSpan(/).Style(margin-right: 10px; margin-left: 10px;)\n\t\t\t\tSpan(\"Edit block\", text-muted)\n\t\t\t\tDBFind(Name: blocks, Source: src_block).WhereId(#edit_property_id#).Vars(item)\n\t\t\t}\n\t\t\tIf(#type# == menu){\n\t\t\t\tLinkPage(\"Menu\", menus_list)\n\t\t\t\tSpan(/).Style(margin-right: 10px; margin-left: 10px;)\n\t\t\t\tSpan(\"Edit menu\", text-muted)\n\t\t\t\tDBFind(Name: menu, Source: src_menu).WhereId(#edit_property_id#).Vars(item)\n\t\t\t}\n\t\t}\n\t}\n    Form(){\n\t\tDiv(form-group){\n\t\t\tLabel(\"Name\")\n\t\t\tInput(Name: Name, Value: #item_name#, Disabled: \"true\")\n\t\t}\n\t\tIf(#type# == page){\n\t\t\tDiv(form-group){\n\t\t\t\tLabel(\"Menu\")\n\t\t\t\tSelect(Name: Menu, Source: src_menus, NameColumn: name, ValueColumn: name, Value: #item_menu#)\n\t\t\t}\n\t\t\tDiv(form-group){\n\t\t\t\tLabel(\"Change conditions\")\n\t\t\t\tInput(Name: Conditions, Value: #item_conditions#)\n\t\t\t}\n\t\t\tDiv(form-group){\n\t\t\t\tButton(Body: \"Save\", Class: btn btn-primary, Page: app_pages, Contract: EditPage, Params: \"Menu=Val(Menu),Conditions=Val(Conditions),Id=#edit_property_id#\")\n\t\t\t}\n\t\t}\n\t\tIf(#type# == contract){\n\t\t\tDiv(form-group){\n\t\t\t\tLabel(\"Change conditions\")\n\t\t\t\tInput(Name: Conditions, Value: #item_conditions#)\n\t\t\t}\n\t\t\tDiv(form-group){\n\t\t\t\tLabel(\"Wallet\")\n\t\t\t\tDiv(row){\n\t\t\t\t\tDiv(col-md-10){\n\t\t\t\t\t\tInput(Name: Wallet,Value: Address(#item_wallet_id#))\n\t\t\t\t\t}\n\t\t\t\t\tDiv(col-md-2){\n\t\t\t\t\t\tIf(#item_active# == 0){\n\t\t\t\t\t\t\tButton(Body: \"Bind\", Class: btn btn-primary btn-block, Contract: ActivateContract, Params: \"Id=#edit_property_id#\", Page:app_contracts)\n\t\t\t\t\t\t}.Else{\n\t\t\t\t\t\t\tButton(Body: \"Unbind\", Class: btn btn-primary btn-block, Contract: DeactivateContract, Params: \"Id=#edit_property_id#\", Page:properties_edit, PageParams: \"edit_property_id=#edit_property_id#,type=#type#\")\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tDiv(form-group){\n\t\t\t\tButton(Body: \"Save\", Class: btn btn-primary, Page: app_contracts, Contract: EditContract, Params: \"Conditions=Val(Conditions),WalletId=Val(Wallet),Id=#edit_property_id#\")\n\t\t\t}\n\t\t}\n\t\tIf(#type# == block){\n\t\t\tDiv(form-group){\n\t\t\t\tLabel(\"Change conditions\")\n\t\t\t\tInput(Name: Conditions, Value: #item_conditions#)\n\t\t\t}\n\t\t\tDiv(form-group){\n\t\t\t\tButton(Body: \"Save\", Class: btn btn-primary, Page: app_blocks, Contract: EditBlock, Params: \"Conditions=Val(Conditions),Id=#edit_property_id#\")\n\t\t\t}\n\t\t}\n\t\tIf(#type# == menu){\n\t\t\tDiv(form-group){\n\t\t\t\tLabel(\"Menu title\")\n\t\t\t\tInput(Name: Title, Value: #item_title#)\n\t\t\t}\n\t\t\tDiv(form-group){\n\t\t\t\tLabel(\"Change conditions\")\n\t\t\t\tInput(Name: Conditions, Value: #item_conditions#)\n\t\t\t}\n\t\t\tDiv(form-group){\n\t\t\t\tButton(Body: \"Save\", Class: btn btn-primary, Page: menus_list, Contract: EditMenu, Params: \"Conditions=Val(Conditions),Id=#edit_property_id#,NameTitle=Val(Title)\")\n\t\t\t}\n\t\t}\n    }\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "admin_menu"
        },
        {
            "Type": "pages",
            "Name": "table_create",
            "Value": "Div(content-wrapper){\n\tSetTitle(\"Create table\")\n\tDiv(breadcrumb){\n\t\tDiv(){\n\t\t\tLinkPage(\"Tables\", app_tables)\n\t\t\tSpan(/).Style(margin-right: 10px; margin-left: 10px;)\n\t\t\tSpan(\"Create\", text-muted)\n\t\t}\n\t}\n\n\tForm(){\n\t\tDiv(panel panel-default){\n\t\t\tDiv(panel-body){\n\t\t\t\tDiv(row){\n\t\t\t\t\tDiv(col-md-12){\n\t\t\t\t\t\tLabel(\"Name\")\n\t\t\t\t\t\tInput(Name:TableName)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tDiv(row){\n\t\t\t\t\tDiv(col-md-4 mt-lg){\n\t\t\t\t\t\tLabel(Class: text-muted, Body: \"Columns\")\n\t\t\t\t\t\tInput(Name:disinp, Disabled: true, Value: id)\n\t\t\t\t\t}\n\t\t\t\t\tDiv(col-md-7 mt-lg){\n\t\t\t\t\t\tLabel(Class: text-muted, Body: \"Type\")\n\t\t\t\t\t\tInput(Name: disinp, Disabled: true, Value: Number)\n\t\t\t\t\t}\n\t\t\t\t\tDiv(col-md-1 mt-lg){\n\t\t\t\t\t\tLabel(Class: text-muted, Body: \"Action\")\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tData(src_type,\"type,name\"){\n\t\t\t\t\ttext,\"Text\"\n\t\t\t\t\tnumber,\"Number\"\n\t\t\t\t\tvarchar,\"Varchar\"\n\t\t\t\t\tdatetime,\"Date/Time\"\n\t\t\t\t\tmoney,\"Money\"\n\t\t\t\t\tdouble,\"Double\"\n\t\t\t\t\tcharacter,\"Character\"\n\t\t\t\t\tjson,\"JSON\"\n\t\t\t\t}\n\t\t\t\tIf(#del# == 1){\n\t\t\t\t\tSetVar(next_count, Calculate( Exp: #count_sec# - 1, Type: int))\n\t\t\t\t}.Else{\n\t\t\t\t\tIf(GetVar(count)==\"\"){\n\t\t\t\t\t\tSetVar(count, 0)\n\t\t\t\t\t\tSetVar(next_count, Calculate( Exp: #count# + 1, Type: int))\n\t\t\t\t\t}.Else{\n\t\t\t\t\t\tSetVar(next_count, Calculate( Exp: #count_sec# + 1, Type: int))\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tRange(params_range, 0, #next_count#)\n\t\t\t\tForList(Source: params_range){\n\t\t\t\t\tDiv(row){\n\t\t\t\t\t\tDiv(col-md-4 mt-sm){\n\t\t\t\t\t\t\tInput(Name:idshare)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tDiv(col-md-7 mt-sm){\n\t\t\t\t\t\t\tSelect(Name: share, Source: src_type, NameColumn: name, ValueColumn: type,Value:\"text\")\n\t\t\t\t\t\t}\n\t\t\t\t\t\tDiv(col-md-1 mt-sm){\n\t\t\t\t\t\t\tIf(And(#next_count# == #params_range_index#, #next_count# > 1)){\n\t\t\t\t\t\t\t\tButton(Body: Em(Class: fa fa-trash), Class: btn btn-default, PageParams: \"count_sec=#next_count#,count=#count#,del=1,app_id=#app_id#\", Page: table_create)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\t\t\t\n\t\t\t}\n\t\t\tDiv(panel-footer){\n\t\t\t\tButton(Body: \"Add column\", Class: btn btn-primary, Page: table_create, PageParams: \"count_sec=#next_count#,count=#count#,app_id=#app_id#\")\n\t\t\t}\n\t\t}\n\t\tDiv(row){\n\t\t\tDiv(col-md-6){\n\t\t\t\tDiv(panel panel-default){\n\t\t\t\t\tDiv(panel-heading, Body: \"Write permissions\")\n\t\t\t\t\tDiv(panel-body){\n\t\t\t\t\t\tDiv(form-group){\n\t\t\t\t\t\t\tLabel(Insert)\n\t\t\t\t\t\t\tInput(Name: Insert_con, Value: ContractConditions(\"MainCondition\"))\n\t\t\t\t\t\t}\n\t\t\t\t\t\tDiv(form-group){\n\t\t\t\t\t\t\tLabel(Update)\n\t\t\t\t\t\t\tInput(Name: Update_con, Value: ContractConditions(\"MainCondition\"))\n\t\t\t\t\t\t}\n\t\t\t\t\t\tDiv(form-group){\n\t\t\t\t\t\t\tLabel(New column)\n\t\t\t\t\t\t\tInput(Name: New_column_con, Value: ContractConditions(\"MainCondition\"))\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tDiv(panel-footer){\n\t\t\t\t\t\tButton(Body: \"Save\", Class: btn btn-primary, Contract: @1NewTable, Page: app_tables, Params: \"Shareholding=Val(share),Id=Val(idshare),ApplicationId=#app_id#\")\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "admin_menu"
        },
        {
            "Type": "pages",
            "Name": "table_edit",
            "Value": "Div(content-wrapper){\r\n\tDBFind(tables, src_mem).Columns(\"id,name,columns,conditions,permissions->insert,permissions->update,permissions->new_column\").Vars(pre).WhereId(#tabl_id#)\r\n\t\r\n\tSetTitle(\"Tables\")\r\n\tDiv(breadcrumb){\r\n\t\tDiv(){\r\n\t\t\tLinkPage(\"Tables\", app_tables)\r\n\t\t\tSpan(/).Style(margin-right: 10px; margin-left: 10px;)\r\n\t\t\tLinkPage(#pre_name#, table_view,, \"tabl_id=#tabl_id#\")\r\n\t\t\tSpan(/).Style(margin-right: 10px; margin-left: 10px;)\r\n\t\t\tSpan(\"Edit\", text-muted)\r\n\t\t}\r\n\t}\r\n\r\n\tForm(){\r\n\t\tDiv(panel panel-default){\r\n\t\t\tDiv(panel-body){\r\n\t\t\t\tDiv(row){\r\n\t\t\t\t\tDiv(col-md-3 h4){\r\n\t\t\t\t\t\tLabel(\"Name\")\r\n\t\t\t\t\t}\r\n\t\t\t\t\tDiv(col-md-2 h4){\r\n\t\t\t\t\t\tLabel(\"Type\")\r\n\t\t\t\t\t}\r\n\t\t\t\t\tDiv(col-md-5 h4){\r\n\t\t\t\t\t\tLabel(\"Conditions\")\r\n\t\t\t\t\t}\r\n\t\t\t\t\tDiv(col-md-2 h4 text-right){\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tJsonToSource(src_columns, #pre_columns#)\r\n\t\t\t\tForList(src_columns){\r\n\t\t\t\t\tDiv(list-group-item){\r\n\t\t\t\t\t\tDiv(row){\r\n\t\t\t\t\t\t\tDiv(col-md-3 h5){\r\n\t\t\t\t\t\t\t\tSpan(#key#)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tDiv(col-md-2 h5){\r\n\t\t\t\t\t\t\t\tSetVar(col_type,GetColumnType(#pre_name#, #key#))\r\n\t\t\t\t\t\t\t\tIf(#col_type# == text){\r\n\t\t\t\t\t\t\t\t\tSpan(\"Text\")\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tIf(#col_type# == number){\r\n\t\t\t\t\t\t\t\t\tSpan(\"Number\")\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tIf(#col_type# == money){\r\n\t\t\t\t\t\t\t\t\tSpan(\"Money\")\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tIf(#col_type# == varchar){\r\n\t\t\t\t\t\t\t\t\tSpan(\"Varchar\")\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tIf(#col_type# == datetime){\r\n\t\t\t\t\t\t\t\t\tSpan(\"Date/Time\")\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tIf(#col_type# == double){\r\n\t\t\t\t\t\t\t\t\tSpan(\"Double\")\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tIf(#col_type# == character){\r\n\t\t\t\t\t\t\t\t\tSpan(\"Character\")\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tIf(#col_type# == json){\r\n\t\t\t\t\t\t\t\t\tSpan(\"JSON\")\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tIf(#col_type# == bytea){\r\n\t\t\t\t\t\t\t\t\tSpan(\"Binary Data\")\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tIf(#col_type# == uuid){\r\n\t\t\t\t\t\t\t\t\tSpan(\"UUID\")\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tDiv(col-md-5 h5){\r\n\t\t\t\t\t\t\t\tSpan(#value#)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tDiv(col-md-2 text-right){\r\n\t\t\t\t\t\t\t\tButton(Body: \"Edit\", Class: btn btn-primary, Page: column_edit, PageParams: \"name_column=#key#,tabl_id=#tabl_id#\")\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tDiv(panel-footer){\r\n\t\t\t\tButton(Body: \"Add Column\", Class: btn btn-primary, Page: column_add, PageParams: \"next_table_name=#pre_name#,tabl_id=#tabl_id#\")\r\n\t\t\t}\r\n\t\t}\r\n\t\tDiv(row){\r\n\t\t\tDiv(col-md-6){\r\n\t\t\t\tDiv(panel panel-default){\r\n\t\t\t\t\tDiv(panel-heading){Write permissions}\r\n\t\t\t\t\tDiv(panel-body){\r\n\t\t\t\t\t\tDiv(form-group){\r\n\t\t\t\t\t\t\tLabel(\"Insert\")\r\n\t\t\t\t\t\t\tInput(Name: Insert_con, Type: text, Value: #pre_permissions_insert#)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tDiv(form-group){\r\n\t\t\t\t\t\t\tLabel(\"Update\")\r\n\t\t\t\t\t\t\tInput(Name: Update_con, Type: text, Value: #pre_permissions_update#)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tDiv(form-group){\r\n\t\t\t\t\t\t\tLabel(\"New column\")\r\n\t\t\t\t\t\t\tInput(Name: New_column_con, Type: text, Value: #pre_permissions_new_column#)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tDiv(panel-footer){\r\n\t\t\t\t\t\tButton(Body: \"Save\", Class: btn btn-primary, Contract: @1EditTable, Page: app_tables, Params: \"Name=#pre_name#\")\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tDiv(col-md-6){\r\n\t\t\t\tDiv(panel panel-default){\r\n\t\t\t\t\tDiv(panel-heading){Conditions for changing permissions}\r\n\t\t\t\t\tDiv(panel-body){\r\n\t\t\t\t\t\tDiv(form-group){\r\n\t\t\t\t\t\t\tInput(Name: Insert_condition, Disabled: true, Type: text, Value: #pre_conditions#)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "admin_menu"
        },
        {
            "Type": "pages",
            "Name": "table_view",
            "Value": "Div(content-wrapper){\r\n    DBFind(tables).WhereId(#tabl_id#).Columns(\"id,name\").Vars(pre)\r\n\r\n    SetTitle(\"Tables\")\r\n    Div(breadcrumb){\r\n        LinkPage(\"Tables\", app_tables)\r\n        Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n        Span(#pre_name#, text-muted)\r\n        Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n        LinkPage(Body:\"Edit\", Page: table_edit, PageParams: \"tabl_id=#tabl_id#\")\r\n    }\r\n\r\n    DBFind(#pre_name#).Count(count)\r\n    If(#page#>0){\r\n        SetVar(prev_page,Calculate(#page#-1)\r\n    }.Else{\r\n        SetVar(page,0).(prev_page,0)\r\n    }\r\n    SetVar(per_page,25).(off,Calculate(#page#*#per_page#)).(last_page,Calculate(#count#/#per_page#)).(next_page,#last_page#)\r\n    If(#count#>Calculate(#off#+#per_page#)){\r\n        SetVar(next_page,Calculate(#page#+1)\r\n    }\r\n    SetVar(btn,btn btn-default).(active,btn btn-info disabled)\r\n    Div(button-group){\r\n        If(#page#>0){\r\n            Button(Body:\"1\", Class:#btn#, Page:table_view, PageParams: \"tabl_id=#tabl_id#,page=0\")\r\n        }.Else{\r\n            Button(Body:\"1\", Class:#active#)\r\n        }\r\n        If(#page#>1){\r\n            Button(Body:Calculate(#prev_page#+1), Class:#btn#, Page:table_view, PageParams: \"tabl_id=#tabl_id#,page=#prev_page#\")\r\n        }\r\n\t\tIf(And(#page#>0,#page#<#last_page#)){\r\n            Button(Body:Calculate(#page#+1), Class:#active#)\r\n        }\r\n        If(#next_page#<#last_page#){\r\n            Button(Body:Calculate(#next_page#+1), Class:#btn#, Page:table_view, PageParams: \"tabl_id=#tabl_id#,page=#next_page#\")\r\n        }\r\n        If(#page#<#last_page#){\r\n            Button(Body:Calculate(#last_page#+1), Class:#btn#, Page:table_view, PageParams: \"tabl_id=#tabl_id#,page=#last_page#\")\r\n        }.ElseIf(#last_page#>0){\r\n\t\t\tButton(Body:Calculate(#last_page#+1), Class:#active#)\r\n\t\t}\r\n    }\r\n    Div(panel panel-default){\r\n        Div(panel-body){\r\n            Div(table-responsive){\r\n                DBFind(#pre_name#, src_mem).Offset(#off#).Order(id)\r\n                Table(src_mem)\r\n            }\r\n        }\r\n    }\r\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "admin_menu"
        },
        {
            "Type": "pages",
            "Name": "admin_index",
            "Value": "Div(fullscreen){\r\n    If(#deleted# == deleted){\r\n        SetTitle(\"Inactive applications\")\r\n\t\tDiv(breadcrumb){\r\n\t\t\tLinkPage(\"Applications\", apps_list)\r\n\t\t\tSpan(/).Style(margin-right: 10px; margin-left: 10px;)\r\n\t\t\tSpan(Class: text-muted, Body: \"Inactive applications\")\r\n\t\t}\r\n\t\r\n        DBFind(applications, src_applications).Where(\"deleted=1\").Order(\"id\").Count(countvar).Custom(restore_btn){\r\n            Button(Class: btn btn-link, Page: apps_list, Contract: DelApplication, Params: \"ApplicationId=#id#\", Body: \"Restore\")\r\n        }\r\n        If(#countvar# > 0) {\r\n            Table(Source: src_applications, Columns: \"ID=id,Name=name,Conditions=conditions,=restore_btn\").Style(\r\n                tbody > tr:nth-of-type(odd) {\r\n                    background-color: #fafbfc;\r\n                }\r\n                tbody > tr > td {\r\n                    word-break: break-all;\r\n                    font-weight: 400;\r\n                    font-size: 13px;\r\n                    color: #666;\r\n                    border-top: 1px solid #eee;\r\n                    vertical-align: middle;\r\n                }\r\n                tr > *:first-child {\r\n                    padding-left:20px;\r\n                    width: 80px;\r\n                }\r\n                tr > *:last-child {\r\n                    padding-right:80px;\r\n                    text-align:right;\r\n                    width: 100px;\r\n                }\r\n                thead {\r\n                    background-color: #eee;\r\n                }\r\n            )\r\n        }.Else{\r\n            Div(content-wrapper){\r\n                Span(Class: text-muted, Body: \"You don't have any inactive applications\")\r\n            }\r\n        }\r\n    }.Else{\r\n        SetTitle(\"Applications\")\r\n\t\tDiv(breadcrumb){\r\n\t\t\tSpan(Class: text-muted, Body: \"This section is used to select installed applications\")\r\n\t\t}\r\n        AddToolButton(Title: \"Inactive apps\", Page: apps_list, Icon: icon-close, PageParams:\"deleted=deleted\")\r\n        AddToolButton(Title: \"Create\", Page: app_edit, Icon: icon-plus)\r\n\t\r\n        DBFind(buffer_data, src_buffer).Columns(\"value->app_id,value->app_name,value->menu_name,value->menu_id,value->count_menu\").Where(\"key='export' and member_id=#key_id#\").Vars(buffer)\r\n        DBFind(applications, src_applications).Where(\"deleted=0\").Order(\"id\").Custom(custom_check){\r\n            If(#id#==#buffer_value_app_id#){\r\n                Span(Em(Class: fa fa-check)).Style(margin-left:30px;)\r\n            }.Else{\r\n                Button(Class: btn btn-link, Contract: Export_NewApp, Params: \"app_id=#id#\", Page: apps_list, Body: \"select\")\r\n            }\r\n        }.Custom(custom_actions){\r\n            Button(Class: btn btn-link, Body: Em(Class: fa fa-edit), Page: app_edit, PageParams: \"id=#id#\")\r\n        }\r\n\r\n        Table(Source: src_applications, Columns: \"ID=id,Name=name,Conditions=conditions,Selected=custom_check,=custom_actions\").Style(\r\n            tbody > tr:nth-of-type(odd) {\r\n                background-color: #fafbfc;\r\n            }\r\n            tbody > tr > td {\r\n                word-break: break-all;\r\n                font-weight: 400;\r\n                font-size: 13px;\r\n                color: #666;\r\n                border-top: 1px solid #eee;\r\n                vertical-align: middle;\r\n            }\r\n            tr > *:first-child {\r\n                padding-left:20px;\r\n                width: 80px;\r\n            }\r\n            tr > *:last-child {\r\n                padding-right:15px;\r\n                text-align:right;\r\n                width: 100px;\r\n            }\r\n            thead {\r\n                background-color: #eee;\r\n            }\r\n        )\r\n    }\r\n}",
            "Conditions": "true",
            "Menu": "admin_menu"
        },
        {
            "Type": "pages",
            "Name": "notifications",
            "Value": "DBFind(Name: notifications, Source: notifications_members).Columns(\"id,page_name,notification->icon,notification->header,notification->body\").Where(\"closed=0 and notification->type='1' and recipient->member_id='#key_id#'\")\n\t\t\tForList(notifications_members){\n\t\t\t\tDiv(Class: list-group-item){\n\t\t\t\t\tLinkPage(Page: #page_name#, PageParams: \"notific_id=#id#\"){\n\t\t\t\t\t\tDiv(media-box){\n\t\t\t\t\t\t\tDiv(Class: pull-left){\n\t\t\t\t\t\t\t\tEm(Class: fa #notification.icon# fa-1x text-primary)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tDiv(media-box-body clearfix){\n\t\t\t\t\t\t\t\tDiv(Class: m0 text-normal, Body: #notification.header#)\n\t\t\t\t\t\t\t\tDiv(Class: m0 text-muted h6, Body: #notification.body#)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tDBFind(Name: notifications, Source: notifications_roles).Columns(\"id,page_name,notification->icon,notification->header,notification->body,recipient->role_id\").Where(\"closed=0 and notification->type='2' and (date_start_processing is null or processing_info->member_id='#key_id#')\")\n\t\t\tForList(notifications_roles){\n\t\t\t    DBFind(Name: roles_participants, Source: src_roles).Columns(\"id\").Where(\"member->member_id='#key_id#' and role->id='#recipient.role_id#' and deleted=0\").Vars(prefix)\n\t\t\t    If(#prefix_id# > 0){\n\t\t\t\t\tDiv(Class: list-group-item){\n\t\t\t\t\t\tLinkPage(Page: #page_name#, PageParams: \"notific_id=#id#\"){\n\t\t\t\t\t\t\tDiv(media-box){\n\t\t\t\t\t\t\t\tDiv(Class: pull-left){\n\t\t\t\t\t\t\t\t\tEm(Class: fa #notification.icon# fa-1x text-primary)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tDiv(media-box-body clearfix){\n\t\t\t\t\t\t\t\t\tDiv(Class: m0 text-normal, Body: #notification.header#)\n\t\t\t\t\t\t\t\t\tDiv(Class: m0 text-muted h6, Body: #notification.body#)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "default_menu"
        },
        {
            "Type": "pages",
            "Name": "AddCompanies",
            "Value": "Div(content-wrapper){\r\n\tDiv(row){\r\n\t\tDiv(col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3){\r\n\t\t\tForm(panel panel-primary){\r\n\t\t\t\tDiv(panel-heading, Body: write data)\r\n\t\t\t\tDiv(panel-body){\r\n\t\t\t\t\tDiv(list-group){\r\n\t\t\t\t\t\tDiv(row){\r\n\t\t\t\t\t\t\tDiv(col-md-3 mt-sm text-right){\r\n\t\t\t\t\t\t\t\tLabel(For: license_id){\r\n\t\t\t\t\t\t\t\t\tSpan(Body: License ID)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tDiv(col-md-9 mc-sm text-left){\r\n\t\t\t\t\t\t\t\tInput(Name: license_id, Placeholder: License ID)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tDiv(list-group){\r\n\t\t\t\t\t\tDiv(row){\r\n\t\t\t\t\t\t\tDiv(col-md-3 mt-sm text-right){\r\n\t\t\t\t\t\t\t\tLabel(For: license_owner_id){\r\n\t\t\t\t\t\t\t\t\tSpan(Body: License  Owner ID)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tDiv(col-md-9 mc-sm text-left){\r\n\t\t\t\t\t\t\t\tInput(Name: license_owner_id, Placeholder: License Owner ID)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tDiv(list-group){\r\n\t\t\t\t\t\tDiv(row){\r\n\t\t\t\t\t\t\tDiv(col-md-3 mt-sm text-right){\r\n\t\t\t\t\t\t\t\tLabel(For: license_owner_name_arabic){\r\n\t\t\t\t\t\t\t\t\tSpan(Body: License Owner Name - AR)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tDiv(col-md-9 mc-sm text-left){\r\n\t\t\t\t\t\t\t\tInput(Name: license_owner_name_arabic, Type: text, Placeholder: License Owner Name - AR)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tDiv(list-group){\r\n\t\t\t\t\t\tDiv(row){\r\n\t\t\t\t\t\t\tDiv(col-md-3 mt-sm text-right){\r\n\t\t\t\t\t\t\t\tLabel(For: license_owner_name_english){\r\n\t\t\t\t\t\t\t\t\tSpan(Body: License Owner Name - EN)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tDiv(col-md-9 mc-sm text-left){\r\n\t\t\t\t\t\t\t\tInput(Name: license_owner_name_english, Type: text, Placeholder: License Owner Name - EN)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tDiv(list-group){\r\n\t\t\t\t\t\tDiv(row){\r\n\t\t\t\t\t\t\tDiv(col-md-3 mt-sm text-right){\r\n\t\t\t\t\t\t\t\tLabel(Body: legal_form){\r\n\t\t\t\t\t\t\t\t\tSpan(Body: Legal Form)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tDiv(col-md-9 mc-sm text-left){\r\n\t\t\t\t\t\t\t\tData(listing, \"value,name\",\r\n\t\t\t\t\t\t\t\t\t0,Please select\r\n\t\t\t\t\t\t\t\t\t1,Sole proprietorship\r\n\t\t\t\t\t\t\t\t\t2,Civil Company\r\n\t\t\t\t\t\t\t\t\t3,Limited Liability Company (LLC)\r\n\t\t\t\t\t\t\t\t\t4,Partnership\r\n\t\t\t\t\t\t\t\t\t5,Private Share Holding Company\r\n\t\t\t\t\t\t\t\t\t6,Public Share Holding Company\r\n\t\t\t\t\t\t\t\t\t7,Branches\r\n\t\t\t\t\t\t\t\t\t8,Representative Offices\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\tSelect(Source: listing, Name: legal_form, Value: 0, NameColumn: \"name\", ValueColumn: \"value\")\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tDiv(list-group){\r\n\t\t\t\t\t\tDiv(row){\r\n\t\t\t\t\t\t\tDiv(col-md-3 mt-sm text-right){\r\n\t\t\t\t\t\t\t\tLabel(For: title_deed_number){\r\n\t\t\t\t\t\t\t\t\tSpan(Body: Title deed number)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tDiv(col-md-9 mc-sm text-left){\r\n\t\t\t\t\t\t\t\tInput(Name: title_deed_number, Type: text, Placeholder: Title deed number)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tDiv(list-group){\r\n\t\t\t\t\t\tDiv(row){\r\n\t\t\t\t\t\t\tDiv(col-md-3 mt-sm text-right){\r\n\t\t\t\t\t\t\t\tLabel(For: company_info){\r\n\t\t\t\t\t\t\t\t\tSpan(Body: Info)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tDiv(col-md-9 mc-sm text-left){\r\n\t\t\t\t\t\t\t\tInput(Name: company_info, Type: textarea, Placeholder: Info)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tDiv(panel-footer text-right){\r\n\t\t\t\t\tButton(Body: Write, Class: btn btn-primary, Contract: CompaniesContract)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}",
            "Conditions": "true",
            "Menu": "default_menu"
        },
        {
            "Type": "pages",
            "Name": "add_persons",
            "Value": "Div(content-wrapper){\r\n\tDiv(row){\r\n\t\tDiv(col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3){\r\n\t\t\tForm(panel panel-primary){\r\n\t\t\t\tDiv(panel-heading, Body: add persons)\r\n\t\t\t\tDiv(panel-body){\r\n\t\t\t\t\tDiv(list-group){\r\n\t\t\t\t\t\tDiv(row){\r\n\t\t\t\t\t\t\tDiv(col-md-3 mt-sm text-right){\r\n\t\t\t\t\t\t\t\tLabel(For: person_type){\r\n\t\t\t\t\t\t\t\t\tSpan(Body: Person Type)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tDiv(col-md-9 mc-sm text-left){\r\n\t\t\t\t\t\t\t\tData(person_type, \"value,name\"){\r\n\t\t\t\t\t\t\t\t\t\t0,Please select\r\n\t\t\t\t\t\t\t\t\t\t1,Resident\r\n\t\t\t\t\t\t\t\t\t\t2,Visitor\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tSelect(Source: person_type, Name: person_type,  Value: 0, NameColumn: \"name\", ValueColumn: \"value\")\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tDiv(list-group){\r\n\t\t\t\t\t\tDiv(row){\r\n\t\t\t\t\t\t\tDiv(col-md-3 mt-sm text-right){\r\n\t\t\t\t\t\t\t\tLabel(For: Person Identifier){\r\n\t\t\t\t\t\t\t\t\tSpan(Body: Person Identifier)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tDiv(col-md-9 mc-sm text-left){\r\n\t\t\t\t\t\t\t\tData(person, \"value,name\"){\r\n\t\t\t\t\t\t\t\t\t\t0,Please select\r\n\t\t\t\t\t\t\t\t\t\t1,Emiratis ID\r\n\t\t\t\t\t\t\t\t\t\t2,Passport Number\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tSelect(Source: person, Name: person_identifier, Value: 0, NameColumn: \"name\", ValueColumn: \"value\")\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tDiv(list-group){\r\n\t\t\t\t\t\tDiv(row){\r\n\t\t\t\t\t\t\tDiv(col-md-3 mt-sm text-right){\r\n\t\t\t\t\t\t\t\tLabel(For: nationality){\r\n\t\t\t\t\t\t\t\t\tSpan(Body: Nationality)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tDiv(col-md-9 mc-sm text-left){\r\n\t\t\t\t\t\t\t\tData(nationality_list, \"value,name\"){\r\n\t\t\t\t\t\t\t\t\t\t0,Please select\r\n\t\t\t\t\t\t\t\t\t\t1,Danish\r\n\t\t\t\t\t\t\t\t\t\t2,English\r\n\t\t\t\t\t\t\t\t\t\t3,Estonian\r\n\t\t\t\t\t\t\t\t\t\t4,Finnish\r\n\t\t\t\t\t\t\t\t\t\t5,Icelandic\r\n\t\t\t\t\t\t\t\t\t\t6,Irish\r\n\t\t\t\t\t\t\t\t\t\t7,Latvian\r\n\t\t\t\t\t\t\t\t\t\t8,Norwegian\r\n\t\t\t\t\t\t\t\t\t\t9,Swedish\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tSelect(Source: nationality_list, Name: nationality, Value: 0, NameColumn: \"name\", ValueColumn: \"value\")\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tDiv(list-group){\r\n\t\t\t\t\t\tDiv(row){\r\n\t\t\t\t\t\t\tDiv(col-md-3 mt-sm text-right){\r\n\t\t\t\t\t\t\t\tLabel(Body: name english){\r\n\t\t\t\t\t\t\t\t\tSpan(Body: Name English)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tDiv(col-md-9 mc-sm text-left){\r\n\t\t\t\t\t\t\t\tInput(Name: name_english, Type: text, Placeholder: name english)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tDiv(list-group){\r\n\t\t\t\t\t\tDiv(row){\r\n\t\t\t\t\t\t\tDiv(col-md-3 mt-sm text-right){\r\n\t\t\t\t\t\t\t\tLabel(For: name_arabic){\r\n\t\t\t\t\t\t\t\t\tSpan(Body: Name Arabic)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tDiv(col-md-9 mc-sm text-left){\r\n\t\t\t\t\t\t\t\tInput(Name: name_arabic, Type: text, Placeholder: name arabic)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tDiv(list-group){\r\n\t\t\t\t\t\tDiv(row){\r\n\t\t\t\t\t\t\tDiv(col-md-3 mt-sm text-right){\r\n\t\t\t\t\t\t\t\tLabel(For: title_deed_number){\r\n\t\t\t\t\t\t\t\t\tSpan(Body: Title Deed Number)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tDiv(col-md-9 mc-sm text-left){\r\n\t\t\t\t\t\t\t\tInput(Name: title_deed_number, Type: text, Placeholder: Title Deed Number)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tDiv(list-group){\r\n\t\t\t\t\t\tDiv(row){\r\n\t\t\t\t\t\t\tDiv(col-md-3 mt-sm text-right){\r\n\t\t\t\t\t\t\t\tLabel(For: mobile_number){\r\n\t\t\t\t\t\t\t\t\tSpan(Body: Mobile Number)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tDiv(col-md-9 mc-sm text-left){\r\n\t\t\t\t\t\t\t\tInput(Name: mobile_number, Type: text, Placeholder: Mobile Number)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tDiv(list-group){\r\n\t\t\t\t\t\tDiv(row){\r\n\t\t\t\t\t\t\tDiv(col-md-3 mt-sm text-right){\r\n\t\t\t\t\t\t\t\tLabel(For: email){\r\n\t\t\t\t\t\t\t\t\tSpan(Body: Email)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tDiv(col-md-9 mc-sm text-left){\r\n\t\t\t\t\t\t\t\tInput(Name: email, Type: text, Placeholder: Email)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tDiv(panel-footer text-right){\r\n\t\t\t\t\t\tButton(Body: Write, Class: btn btn-primary, Contract: AddPersons)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}",
            "Conditions": "true",
            "Menu": "default_menu"
        },
        {
            "Type": "pages",
            "Name": "view_data",
            "Value": "DBFind(companies, companies_src)\r\nDiv(content-wrapper){\r\n\tDiv(row){\r\n\t\tTable(Source: companies_src)\r\n\t}\r\n}",
            "Conditions": "true",
            "Menu": "default_menu"
        },
        {
            "Type": "pages",
            "Name": "view_data_company",
            "Value": "DBFind(companies, companies_src).Where(id='6')\r\nDiv(content-wrapper){\r\n\tDiv(row){\r\n\t\tDiv(col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3){\r\n\t\tForm(panel panel-primary){\r\n\t\t\tDiv(panel-heading, Body: view user informations)\r\n\t\t\tDiv(panel-body){\r\n\t\t\tDiv(form-group){\r\n\t\t\t\tDiv(row){\r\n\t\t\t\t\tDiv(col-md-3 mt-sm text-right){\r\n\t\t\t\t\t\tLabel(Body: License ID:){\r\n\t\t\t\t\t\t\tSpan(Body: License ID:)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tDiv(col-md-9 mc-sm text-left){\r\n\t\t\t\t\t\tForList(companies_src){\r\n\t\t\t\t\t\t\tSpan(#license_id#)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tDiv(form-group){\r\n\t\t\t\tDiv(row){\r\n\t\t\t\t\tDiv(col-md-3 mt-sm text-right){\r\n\t\t\t\t\t\tLabel(Body: License Owner Name AR:){\r\n\t\t\t\t\t\t\tSpan(Body: License Owner Name AR:)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tDiv(col-md-9 mc-sm text-left){\r\n\t\t\t\t\t\tForList(companies_src){\r\n\t\t\t\t\t\t\tSpan(#license_owner_name_arabic#)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tDiv(form-group){\r\n\t\t\t\tDiv(row){\r\n\t\t\t\t\tDiv(col-md-3 mt-sm text-right){\r\n\t\t\t\t\t\tLabel(Body: License Owner Name EN:){\r\n\t\t\t\t\t\t\tSpan(Body: License Owner Name EN:)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tDiv(col-md-9 mc-sm text-left){\r\n\t\t\t\t\t\tForList(companies_src){\r\n\t\t\t\t\t\t\tSpan(#license_owner_name_english#)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tDiv(form-group){\r\n\t\t\t\tDiv(row){\r\n\t\t\t\t\tDiv(col-md-3 mt-sm text-right){\r\n\t\t\t\t\t\tLabel(Body: License Owner ID:){\r\n\t\t\t\t\t\t\tSpan(Body: License Owner ID:)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tDiv(col-md-9 mc-sm text-left){\r\n\t\t\t\t\t\tForList(companies_src){\r\n\t\t\t\t\t\t\tSpan(#license_owner_id#)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tDiv(form-group){\r\n\t\t\t\tDiv(row){\r\n\t\t\t\t\tDiv(col-md-3 mt-sm text-right){\r\n\t\t\t\t\t\tLabel(Body: Legal Form:){\r\n\t\t\t\t\t\t\tSpan(Body: Legal Form:)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tDiv(col-md-9 mc-sm text-left){\r\n\t\t\t\t\t\tForList(companies_src){\r\n\t\t\t\t\t\t\tSpan(#legal_form#)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tDiv(form-group){\r\n\t\t\t\tDiv(row){\r\n\t\t\t\t\tDiv(col-md-3 mt-sm text-right){\r\n\t\t\t\t\t\tLabel(Body: Title Deed Number:){\r\n\t\t\t\t\t\t\tSpan(Body: Title Deed Number:)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tDiv(col-md-9 mc-sm text-left){\r\n\t\t\t\t\t\tForList(companies_src){\r\n\t\t\t\t\t\t\tSpan(#title_deed_number#)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tDiv(form-group){\r\n\t\t\t\tDiv(row){\r\n\t\t\t\t\tDiv(col-md-3 mt-sm text-right){\r\n\t\t\t\t\t\tLabel(Body: Info:){\r\n\t\t\t\t\t\t\tSpan(Body: Info:)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tDiv(col-md-9 mc-sm text-left){\r\n\t\t\t\t\t\tForList(companies_src){\r\n\t\t\t\t\t\t\tSpan(#company_info#)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}",
            "Conditions": "true",
            "Menu": "default_menu"
        },
        {
            "Type": "pages",
            "Name": "arrows",
            "Value": "Div(content){\r\n\tDiv(row){\r\n\t\tDiv(panel ajmanHeader){\r\n\t\t\tDiv(panel-heading text-center){\r\n\t\t\t\tSpan(Property Regisration)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tDiv(Class:row){\r\n\t\tDiv(Class:col-3 text-right){\r\n\t\t\tSpan(Body: Registration type)\r\n\t\t}\r\n\t\tDiv(Class:col-3){\r\n\t\t\tDiv(ajmanText){\r\n\t\t\t\tLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}",
            "Conditions": "true",
            "Menu": "default_menu"
        },
        {
            "Type": "pages",
            "Name": "Ajman_companies",
            "Value": "Div(fullscreen-wrapper ajman_content){\r\n\tDiv(row){\r\n\t\tDiv(col-md-6 pull-left){Image(Binary().ById(18), Class: pull-left)}\r\n\t\tDiv(col-md-6 pull-right){Image(Binary().ById(19), Class: pull-right)}\r\n\t}.Style(padding-bottom: 10px;)\r\n\tDiv(row){\r\n        Div(col-md-12){\r\n\t\t\tDiv(Class: panel-heading text-center){ \r\n\t\t\t\tSpan(Class: ajman-color-h1, Body: Companies)\r\n\t\t\t}\r\n        }.Style(height: 50px; background-color: #0f789c)\r\n        Div(col-md-12 crumb){\r\n\t\t}.Style(padding-top:10px; padding-bottom:15px)\r\n\t\tDiv(col-sm-12 content){\r\n\t\t\tDBFind(companies, company_src).Custom(custom_edit){\r\n\t\t\t\tButton(Class: btn btn-link, Body: Em(Class: fa fa-edit ajman_text_darkgreen), Page: EditCompanies, PageParams:\"id=#id#\")\r\n\t\t\t}\r\n\t\t\tDiv(content-wrapper){\r\n\t\t\t\tDiv(row){\r\n\t\t\t\t\tForm(){\r\n                \t\tTable(Source: company_src, \"ID=id,license ID=license_id,License Owner Name AR=license_owner_name_arabic,License Owner Name EN=license_owner_name_english,License Owner ID=license_owner_id,Legal Form=legal_form,Title Deed Number=title_deed_number,Info=company_info,=custom_edit\")\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tDiv(text-right){\r\n\t\t\t\t\t\t\tButton(Body: Add Persons, Class: btn ajman_button_darkgreen, Page: EditCompanies, PageParams:\"Status=Status\")\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n        }.Style(height:100vh)\r\n    }",
            "Conditions": "true",
            "Menu": "default_menu"
        },
        {
            "Type": "pages",
            "Name": "Ajman_persones",
            "Value": "Div(fullscreen-wrapper ajman_content){\r\n\tDiv(row){\r\n\t\tDiv(col-md-6 pull-left){Image(Binary().ById(18), Class: pull-left)}\r\n\t\tDiv(col-md-6 pull-right){Image(Binary().ById(19), Class: pull-right)}\r\n\t}.Style(padding-bottom: 10px;)\r\n\tDiv(row){\r\n        Div(col-md-12){\r\n\t\t\tDiv(Class: panel-heading text-center){ \r\n\t\t\t\tSpan(Class: ajman-color-h1, Body: Ajman Persones)\r\n\t\t\t}\r\n        }.Style(height: 50px; background-color: #0f789c)\r\n        Div(col-md-12 crumb){\r\n\t\t}.Style(padding-top:10px; padding-bottom:15px)\r\n\t\tDiv(col-sm-12 content){\r\n\t\t\tDBFind(members, persones_src).Custom(custom_edit){\r\n\t\t\t\tButton(Class: btn btn-link, Body: Em(Class: fa fa-edit ajman_text_darkgreen), Page: EditPersons, PageParams:\"id=#id#\")\r\n\t\t\t}\r\n\t\t\tDiv(content-wrapper){\r\n\t\t\t\tDiv(row){\r\n\t\t\t\t\tForm(){\r\n\t\t\t\t\t\tTable(Source: persones_src, \"ID=id,Member Name=member_name,Member Info=member_info,Person Type=person_type,Person Identifier=person_identifier,Nationality=nationality,Name English=name_english,Name Arabic=name_arabic,Title Deed Number=title_deed_number,Mobile Number=mobile_number,Email=email,Edit=custom_edit\")\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tDiv(text-right){\r\n\t\t\t\t\t\t\tButton(Body: Add Persons, Class: btn ajman_button_darkgreen, Page: EditPersons, PageParams:\"Status=Status\")\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n        }.Style(height:100vh)\r\n    }",
            "Conditions": "true",
            "Menu": "default_menu"
        },
        {
            "Type": "pages",
            "Name": "EditCompanies",
            "Value": "Div(fullscreen-wrapper ajman_content){\r\n\tDiv(row){\r\n\t\tDiv(col-md-6 pull-left){Image(Binary().ById(18), Class: pull-left)}\r\n\t\tDiv(col-md-6 pull-right){Image(Binary().ById(19), Class: pull-right)}\r\n\t}.Style(padding-bottom: 10px;)\r\n\tDiv(row){\r\n        Div(col-md-12){\r\n\t\t\tDiv(Class: panel-heading text-center){ \r\n\t\t\t\tSpan(Class: ajman-color-h1, Body: Property Registration)\r\n\t\t\t}\r\n        }.Style(height: 50px; background-color: #0f789c)\r\n        Div(col-md-12 crumb){\r\n\t\t\tDiv(crumbs){\r\n\t\t\t\tSpan(Class: text-muted active, Body: Owner Details){\r\n\t\t\t\t\tLinkPage($user_info$, profile_view)\r\n\t\t\t\t}\r\n\t\t\t\tSpan(Class: text-muted, Body: Location){\r\n\t\t\t\t\tLinkPage($user_info$, profile_view)\r\n\t\t\t\t}\r\n\t\t\t\tSpan(Class: text-muted, Body: Property and Units){\r\n\t\t\t\t\tLinkPage($user_info$, profile_view)\r\n\t\t\t\t}\r\n\t\t\t\tSpan(Class: text-muted, Body: Attachments){\r\n\t\t\t\t\tLinkPage($user_info$, profile_view)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}.Style(padding-top:10px; padding-bottom:50px;)\r\n\t\tDiv(col-sm-12 content){\r\n            If(#Status# == Status){\r\n\t\t\t\tDiv(row){\r\n\t\t\t\t\tDiv(col-md-10 col-md-offset-2 col-lg-6 col-lg-offset-3){\r\n\t\t\t\t\t\tForm(){\r\n                            Div(list-group){\r\n                                Div(row){\r\n                                    Div(col-md-3 mt-sm text-right){\r\n                                        Label(For: license_id){\r\n                                            Span(Body: License ID)\r\n                                        }\r\n                                    }\r\n                                    Div(col-md-9 mc-sm text-left){\r\n                                        Input(Name: license_id)\r\n                                    }\r\n                                }\r\n                            }\r\n                            Div(text-right){\r\n                                Button(Body: Request, Class: btn ajman_button_darkgreen, Contract: CompaniesContract, Page: ajman_success, PageParams: \"text=Request sent to DED.\")\r\n                                If(#role_id# == 0){\r\n                                    Button(Body: Skip, Class: btn ajman_button_darkgreen pull-left,Page:ajamal_enter_user_role)\r\n                                }\r\n                            }\r\n                        }  \r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n            }.Else{\r\n\t\t\t\tDBFind(companies, company_src).Where(id=#id#).Vars(pre)\r\n\t\t\t\t\tDiv(row){\r\n\t\t\t\t\t\tDiv(col-md-10 col-md-offset-2 col-lg-6 col-lg-offset-3){\r\n\t\t\t\t\t\t\tForm(){\r\n                                Div(list-group){\r\n                                    Div(row){\r\n                                        Div(col-md-3 mt-sm text-right){\r\n                                            Label(For: company_name){\r\n                                                Span(Body: Company name)\r\n                                            }\r\n                                        }\r\n                                        Div(col-md-9 mc-sm text-left){\r\n                                            Input(Name: company_name, Value: #pre_company_name#,Disabled: \"true\")\r\n                                        }\r\n                                    }\r\n                                }\r\n                                Div(list-group){\r\n                                    Div(row){\r\n                                        Div(col-md-3 mt-sm text-right){\r\n                                            Label(For: license_id){\r\n                                                Span(Body: License ID)\r\n                                            }\r\n                                        }\r\n                                        Div(col-md-9 mc-sm text-left){\r\n                                            Input(Name: license_id, Value: #pre_license_id#)\r\n                                        }\r\n                                    }\r\n                                }\r\n                                Div(list-group){\r\n                                    Div(row){\r\n                                        Div(col-md-3 mt-sm text-right){\r\n                                            Label(For: license_owner_id){\r\n                                                Span(Body: License  Owner ID)\r\n                                            }\r\n                                        }\r\n                                        Div(col-md-9 mc-sm text-left){\r\n                                            Input(Name: license_owner_id, Value: #pre_license_owner_id#, Disabled: \"true\")\r\n                                        }\r\n                                    }\r\n                                }\r\n                                Div(list-group){\r\n                                    Div(row){\r\n                                        Div(col-md-3 mt-sm text-right){\r\n                                            Label(For: license_owner_name_arabic){\r\n                                                Span(Body: License Owner Name - AR)\r\n                                            }\r\n                                        }\r\n                                        Div(col-md-9 mc-sm text-left){\r\n                                            Input(Name: license_owner_name_arabic, Type: text, Value: #pre_license_owner_name_arabic#)\r\n                                        }\r\n                                    }\r\n                                }\r\n                                Div(list-group){\r\n                                    Div(row){\r\n                                        Div(col-md-3 mt-sm text-right){\r\n                                            Label(For: license_owner_name_english){\r\n                                                Span(Body: License Owner Name - EN)\r\n                                            }\r\n                                        }\r\n                                        Div(col-md-9 mc-sm text-left){\r\n                                            Input(Name: license_owner_name_english, Type: text, Value: #pre_license_owner_name_english#)\r\n                                        }\r\n                                    }\r\n                                }\r\n                                Div(list-group){\r\n                                    Div(row){\r\n                                        Div(col-md-3 mt-sm text-right){\r\n                                            Label(Body: legal_form){\r\n                                                Span(Body: Legal Form)\r\n                                            }\r\n                                        }\r\n                                        Div(col-md-9 mc-sm text-left){\r\n                                            Data(listing, \"value,name\",\r\n                                                0,Please select\r\n                                                1,Sole proprietorship\r\n                                                2,Civil Company\r\n                                                3,Limited Liability Company (LLC)\r\n                                                4,Partnership\r\n                                                5,Private Share Holding Company\r\n                                                6,Public Share Holding Company\r\n                                                7,Branches\r\n                                                8,Representative Offices\r\n                                            )\r\n                                            Select(Source: listing, Name: legal_form, Value: #pre_legal_form#, NameColumn: \"name\", ValueColumn: \"value\")\r\n                                        }\r\n                                    }\r\n                                }\r\n                                Div(list-group){\r\n                                    Div(row){\r\n                                        Div(col-md-3 mt-sm text-right){\r\n                                            Label(For: title_deed_number){\r\n                                                Span(Body: Title deed number)\r\n                                            }\r\n                                        }\r\n                                        Div(col-md-9 mc-sm text-left){\r\n                                            Input(Name: title_deed_number, Type: text, Value: #pre_title_deed_number#)\r\n                                        }\r\n                                    }\r\n                                }\r\n                                Div(list-group){\r\n                                    Div(row){\r\n                                        Div(col-md-3 mt-sm text-right){\r\n                                            Label(For: company_info){\r\n                                                Span(Body: Info)\r\n                                            }\r\n                                        }\r\n                                        Div(col-md-9 mc-sm text-left){\r\n                                            Input(Name: company_info, Type: textarea, Value: #pre_company_info#)\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            Div(text-right){\r\n                                Button(Body: EDIT, Class: btn ajman_button_darkgreen, Contract: EditCompanies, Page:Ajman_companies, Params:\"id=#id#,license_id=Val(license_id),license_owner_name_arabic=Val(license_owner_name_arabic),license_owner_name_english=Val(license_owner_name_english),license_owner_id=Val(license_owner_id),legal_form=Val(legal_form),title_deed_number=Val(title_deed_number),company_info=Val(company_info)\")\r\n                            }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n        }.Style(height:100vh;)\r\n    }",
            "Conditions": "true",
            "Menu": "default_menu"
        },
        {
            "Type": "pages",
            "Name": "EditPersons",
            "Value": "Div(fullscreen-wrapper ajman_content){\r\n\tDiv(row){\r\n\t\tDiv(col-md-6 pull-left){Image(Binary().ById(18), Class: pull-left)}\r\n\t\tDiv(col-md-6 pull-right){Image(Binary().ById(19), Class: pull-right)}\r\n\t}.Style(padding-bottom: 10px;)\r\n\tDiv(row){\r\n        Div(col-md-12){\r\n\t\t\tDiv(Class: panel-heading text-center){ \r\n\t\t\t\tSpan(Class: ajman-color-h1, Body: Property Registration)\r\n\t\t\t}\r\n        }.Style(height: 50px; background-color: #0f789c)\r\n        Div(col-md-12 crumb){\r\n\t\t\tDiv(crumbs){\r\n\t\t\t\tSpan(Class: text-muted active, Body: Owner Details){\r\n\t\t\t\t\tLinkPage($user_info$, profile_view)\r\n\t\t\t\t}\r\n\t\t\t\tSpan(Class: text-muted, Body: Location){\r\n\t\t\t\t\tLinkPage($user_info$, profile_view)\r\n\t\t\t\t}\r\n\t\t\t\tSpan(Class: text-muted, Body: Property and Units){\r\n\t\t\t\t\tLinkPage($user_info$, profile_view)\r\n\t\t\t\t}\r\n\t\t\t\tSpan(Class: text-muted, Body: Attachments){\r\n\t\t\t\t\tLinkPage($user_info$, profile_view)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}.Style(padding-top:10px; padding-bottom:50px)\r\n\t\tDiv(col-sm-12 content){\r\n\t\t\tIf(#Status# == Status){\r\n\t\t\t\tDiv(row){\r\n\t\t\t\t\tDiv(col-md-10 col-md-offset-2 col-lg-6 col-lg-offset-3){\r\n\t\t\t\t\t\tForm(){\r\n                            Div(list-group){\r\n                                Div(row){\r\n                                    Div(col-md-3 mt-sm text-right){\r\n                                        Label(For: person_type){\r\n                                            Span(Body: Person Type)\r\n                                        }\r\n                                    }\r\n                                    Div(col-md-9 mc-sm text-left){\r\n                                        Data(person_type, \"value,name\"){\r\n                                                0,Please select\r\n                                                1,Resident\r\n                                                2,Visitor\r\n                                            }\r\n                                        Select(Source: person_type, Name: person_type,  Value: 0, NameColumn: \"name\", ValueColumn: \"value\")\r\n                                    }\r\n                                }\r\n                            }\r\n                            Div(list-group){\r\n                                Div(row){\r\n                                    Div(col-md-3 mt-sm text-right){\r\n                                        Label(For: Person Identifier){\r\n                                            Span(Body: Person Identifier)\r\n                                        }\r\n                                    }\r\n                                    Div(col-md-9 mc-sm text-left){\r\n                                        Data(person, \"value,name\"){\r\n                                                0,Please select\r\n                                                1,Emiratis ID\r\n                                                2,Passport Number\r\n                                            }\r\n                                        Select(Source: person, Name: person_identifier, Value: 0, NameColumn: \"name\", ValueColumn: \"value\")\r\n                                    }\r\n                                }\r\n                            }\r\n                            Div(list-group){\r\n                                Div(row){\r\n                                    Div(col-md-3 mt-sm text-right){\r\n                                        Label(For: nationality){\r\n                                            Span(Body: Nationality)\r\n                                        }\r\n                                    }\r\n                                    Div(col-md-9 mc-sm text-left){\r\n                                        Data(nationality_list, \"value,name\"){\r\n                                                0,Please select\r\n                                                1,Danish\r\n                                                2,English\r\n                                                3,Estonian\r\n                                                4,Finnish\r\n                                                5,Icelandic\r\n                                                6,Irish\r\n                                                7,Latvian\r\n                                                8,Norwegian\r\n                                                9,Swedish\r\n                                            }\r\n                                        Select(Source: nationality_list, Name: nationality, Value: 0, NameColumn: \"name\", ValueColumn: \"value\")\r\n                                    }\r\n                                }\r\n                            }\r\n                            Div(list-group){\r\n                                Div(row){\r\n                                    Div(col-md-3 mt-sm text-right){\r\n                                        Label(Body: name english){\r\n                                            Span(Body: Name English)\r\n                                        }\r\n                                    }\r\n                                    Div(col-md-9 mc-sm text-left){\r\n                                        Input(Name: name_english, Type: text, Placeholder: name english)\r\n                                    }\r\n                                }\r\n                            }\r\n                            Div(list-group){\r\n                                Div(row){\r\n                                    Div(col-md-3 mt-sm text-right){\r\n                                        Label(For: name_arabic){\r\n                                            Span(Body: Name Arabic)\r\n                                        }\r\n                                    }\r\n                                    Div(col-md-9 mc-sm text-left){\r\n                                        Input(Name: name_arabic, Type: text, Placeholder: name arabic)\r\n                                    }\r\n                                }\r\n                            }\r\n                            Div(list-group){\r\n                                Div(row){\r\n                                    Div(col-md-3 mt-sm text-right){\r\n                                        Label(For: title_deed_number){\r\n                                            Span(Body: Title Deed Number)\r\n                                        }\r\n                                    }\r\n                                    Div(col-md-9 mc-sm text-left){\r\n                                        Input(Name: title_deed_number, Type: text, Placeholder: Title Deed Number)\r\n                                    }\r\n                                }\r\n                            }\r\n                            Div(list-group){\r\n                                Div(row){\r\n                                    Div(col-md-3 mt-sm text-right){\r\n                                        Label(For: mobile_number){\r\n                                            Span(Body: Mobile Number)\r\n                                        }\r\n                                    }\r\n                                    Div(col-md-9 mc-sm text-left){\r\n                                        Input(Name: mobile_number, Type: text, Placeholder: Mobile Number)\r\n                                    }\r\n                                }\r\n                            }\r\n                            Div(list-group){\r\n                                Div(row){\r\n                                    Div(col-md-3 mt-sm text-right){\r\n                                        Label(For: email){\r\n                                            Span(Body: Email)\r\n                                        }\r\n                                    }\r\n                                    Div(col-md-9 mc-sm text-left){\r\n                                        Input(Name: email, Type: text, Placeholder: Email)\r\n                                    }\r\n                                }\r\n                            }\r\n                            Div(text-right){\r\n                                Button(Body: Add Persons, Class: btn ajman_button_darkgreen, Contract: AddPersons)\r\n                            }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t}.Else{\r\n\t\t\t\tDBFind(members, persones_src).Where(id=#id#).Vars(pre)\r\n\t\t\t\tDiv(row){\r\n\t\t\t\t\tDiv(col-md-10 col-md-offset-2 col-lg-6 col-lg-offset-3){\r\n\t\t\t\t\t\tForm(){\r\n                            Div(list-group){\r\n                                Div(row){\r\n                                    Div(col-md-3 mt-sm text-right){\r\n                                        Label(For: person_type){\r\n                                            Span(Body: Person Type)\r\n                                        }\r\n                                    }\r\n                                    Div(col-md-9 mc-sm text-left){\r\n                                        Data(person_type, \"value,name\"){\r\n                                                0,Please select\r\n                                                1,Resident\r\n                                                2,Visitor\r\n                                            }\r\n                                        Select(Source: person_type, Name: person_type,  Value: #pre_person_type#, NameColumn: \"name\", ValueColumn: \"value\")\r\n                                    }\r\n                                }\r\n                            }\r\n                            Div(list-group){\r\n                                Div(row){\r\n                                    Div(col-md-3 mt-sm text-right){\r\n                                        Label(For: person_identifier){\r\n                                            Span(Body: Person Identifier)\r\n                                        }\r\n                                    }\r\n                                    Div(col-md-9 mc-sm text-left){\r\n                                        Data(person, \"value,name\"){\r\n                                                0,Please select\r\n                                                1,Emiratis ID\r\n                                                2,Passport Number\r\n                                            }\r\n                                        Select(Source: person, Name: person_identifier, Value: #pre_person_identifier#, NameColumn: \"name\", ValueColumn: \"value\")\r\n                                    }\r\n                                }\r\n                            }\r\n                            Div(list-group){\r\n                                Div(row){\r\n                                    Div(col-md-3 mt-sm text-right){\r\n                                        Label(For: nationality){\r\n                                            Span(Body: Nationality)\r\n                                        }\r\n                                    }\r\n                                    Div(col-md-9 mc-sm text-left){\r\n                                        Data(nationality_list, \"value,name\"){\r\n                                                0,Please select\r\n                                                1,Danish\r\n                                                2,English\r\n                                                3,Estonian\r\n                                                4,Finnish\r\n                                                5,Icelandic\r\n                                                6,Irish\r\n                                                7,Latvian\r\n                                                8,Norwegian\r\n                                                9,Swedish\r\n                                            }\r\n                                        Select(Source: nationality_list, Name: nationality, Value: #pre_nationality#, NameColumn: \"name\", ValueColumn: \"value\")\r\n                                    }\r\n                                }\r\n                            }\r\n                            Div(list-group){\r\n                                Div(row){\r\n                                    Div(col-md-3 mt-sm text-right){\r\n                                        Label(Body: name english){\r\n                                            Span(Body: Name English)\r\n                                        }\r\n                                    }\r\n                                    Div(col-md-9 mc-sm text-left){\r\n                                        Input(Name: name_english, Value: #pre_name_english#)\r\n                                    }\r\n                                }\r\n                            }\r\n                            Div(list-group){\r\n                                Div(row){\r\n                                    Div(col-md-3 mt-sm text-right){\r\n                                        Label(For: name_arabic){\r\n                                            Span(Body: Name Arabic)\r\n                                        }\r\n                                    }\r\n                                    Div(col-md-9 mc-sm text-left){\r\n                                        Input(Name: name_arabic, Type: text, Value: #pre_name_arabic#)\r\n                                    }\r\n                                }\r\n                            }\r\n                            Div(list-group){\r\n                                Div(row){\r\n                                    Div(col-md-3 mt-sm text-right){\r\n                                        Label(For: title_deed_number){\r\n                                            Span(Body: Title Deed Number)\r\n                                        }\r\n                                    }\r\n                                    Div(col-md-9 mc-sm text-left){\r\n                                        Input(Name: title_deed_number, Type: text, Value: #pre_title_deed_number#)\r\n                                    }\r\n                                }\r\n                            }\r\n                            Div(list-group){\r\n                                Div(row){\r\n                                    Div(col-md-3 mt-sm text-right){\r\n                                        Label(For: mobile_number){\r\n                                            Span(Body: Mobile Number)\r\n                                        }\r\n                                    }\r\n                                    Div(col-md-9 mc-sm text-left){\r\n                                        Input(Name: mobile_number, Type: text, Value: #pre_mobile_number#)\r\n                                    }\r\n                                }\r\n                            }\r\n                            Div(list-group){\r\n                                Div(row){\r\n                                    Div(col-md-3 mt-sm text-right){\r\n                                        Label(For: email){\r\n                                            Span(Body: Email)\r\n                                        }\r\n                                    }\r\n                                    Div(col-md-9 mc-sm text-left){\r\n                                        Input(Name: email, Type: text, Value: #pre_email#)\r\n                                    }\r\n                                }\r\n                            }\r\n                            Div(text-right){\r\n                                Button(Body: Write, Class: btn ajman_button_darkgreen, Contract: EditPersons, Page:Ajman_persones, Params: \"id=#id#,person_type=Val(person_type),person_identifier=Val(person_identifier),nationality=Val(nationality),name_english=Val(name_english),name_arabic=Val(name_arabic),title_deed_number=Val(title_deed_number),mobile_number=Val(mobile_number),email=Val(email)\")\r\n                            }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n        }.Style(height:100vh)\r\n    }\r\n}",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Menu": "default_menu"
        },
        {
            "Type": "pages",
            "Name": "test_ajmal_clear_page",
            "Value": "DBFind(companies,Source: src_cmp).Custom(sel_btn){\r\n    Button(delete,Contract:aja_clear_table,Params:\"ID=#id#,Value=1\")\r\n}\r\nTable(Source: src_cmp)",
            "Conditions": "true",
            "Menu": "default_menu"
        },
        {
            "Type": "tables",
            "Name": "contracts",
            "Columns": "[{\"name\":\"name\",\"type\":\"text\",\"conditions\":\"false\"},{\"name\":\"value\",\"type\":\"text\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"active\",\"type\":\"character\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"token_id\",\"type\":\"number\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"wallet_id\",\"type\":\"number\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"conditions\",\"type\":\"text\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"}]",
            "Permissions": "{\"insert\": \"ContractConditions(\\\"MainCondition\\\")\", \"update\": \"ContractConditions(\\\"MainCondition\\\")\", \"new_column\": \"ContractConditions(\\\"MainCondition\\\")\"}"
        },
        {
            "Type": "tables",
            "Name": "keys",
            "Columns": "[{\"name\":\"pub\",\"type\":\"bytea\",\"conditions\":\"true\"},{\"name\":\"multi\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"amount\",\"type\":\"money\",\"conditions\":\"true\"},{\"name\":\"blocked\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"deleted\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"fin_inst\",\"type\":\"number\",\"conditions\":\"true\"}]",
            "Permissions": "{\"insert\": \"true\", \"update\": \"true\", \"new_column\": \"ContractConditions(\\\"MainCondition\\\")\"}"
        },
        {
            "Type": "tables",
            "Name": "history",
            "Columns": "[{\"name\":\"amount\",\"type\":\"money\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"txhash\",\"type\":\"bytea\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"comment\",\"type\":\"text\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"block_id\",\"type\":\"integer\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"sender_id\",\"type\":\"number\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"recipient_id\",\"type\":\"number\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"}]",
            "Permissions": "{\"insert\": \"ContractConditions(\\\"MainCondition\\\")\", \"update\": \"ContractConditions(\\\"MainCondition\\\")\", \"new_column\": \"ContractConditions(\\\"MainCondition\\\")\"}"
        },
        {
            "Type": "tables",
            "Name": "languages",
            "Columns": "[{\"name\":\"res\",\"type\":\"text\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"name\",\"type\":\"varchar\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"app_id\",\"type\":\"number\",\"conditions\":\"ContractConditions(\\\"MainConditions\\\")\"},{\"name\":\"conditions\",\"type\":\"text\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"}]",
            "Permissions": "{\"insert\": \"ContractConditions(\\\"MainCondition\\\")\", \"update\": \"ContractConditions(\\\"MainCondition\\\")\", \"new_column\": \"ContractConditions(\\\"MainCondition\\\")\"}"
        },
        {
            "Type": "tables",
            "Name": "menu",
            "Columns": "[{\"name\":\"name\",\"type\":\"varchar\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"value\",\"type\":\"text\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"conditions\",\"type\":\"text\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"}]",
            "Permissions": "{\"insert\": \"ContractConditions(\\\"MainCondition\\\")\", \"update\": \"ContractConditions(\\\"MainCondition\\\")\", \"new_column\": \"ContractConditions(\\\"MainCondition\\\")\"}"
        },
        {
            "Type": "tables",
            "Name": "pages",
            "Columns": "[{\"name\":\"menu\",\"type\":\"varchar\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"name\",\"type\":\"varchar\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"value\",\"type\":\"text\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"app_id\",\"type\":\"number\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"conditions\",\"type\":\"text\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"validate_mode\",\"type\":\"character\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"validate_count\",\"type\":\"number\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"}]",
            "Permissions": "{\"insert\": \"ContractConditions(\\\"MainCondition\\\")\", \"update\": \"ContractConditions(\\\"MainCondition\\\")\", \"new_column\": \"ContractConditions(\\\"MainCondition\\\")\"}"
        },
        {
            "Type": "tables",
            "Name": "blocks",
            "Columns": "[{\"name\":\"name\",\"type\":\"varchar\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"value\",\"type\":\"text\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"conditions\",\"type\":\"text\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"}]",
            "Permissions": "{\"insert\": \"ContractConditions(\\\"MainCondition\\\")\", \"update\": \"ContractConditions(\\\"MainCondition\\\")\", \"new_column\": \"ContractConditions(\\\"MainCondition\\\")\"}"
        },
        {
            "Type": "tables",
            "Name": "signatures",
            "Columns": "[{\"name\":\"name\",\"type\":\"varchar\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"value\",\"type\":\"json\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"conditions\",\"type\":\"text\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"}]",
            "Permissions": "{\"insert\": \"ContractConditions(\\\"MainCondition\\\")\", \"update\": \"ContractConditions(\\\"MainCondition\\\")\", \"new_column\": \"ContractConditions(\\\"MainCondition\\\")\"}"
        },
        {
            "Type": "tables",
            "Name": "members",
            "Columns": "[{\"name\":\"email\",\"type\":\"varchar\",\"conditions\":\"true\"},{\"name\":\"fin_inst\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"image_id\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"member_info\",\"type\":\"json\",\"conditions\":\"true\"},{\"name\":\"member_name\",\"type\":\"varchar\",\"conditions\":\"true\"},{\"name\":\"name_arabic\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"nationality\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"person_type\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"name_english\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"mobile_number\",\"type\":\"varchar\",\"conditions\":\"true\"},{\"name\":\"person_identifier\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"title_deed_number\",\"type\":\"number\",\"conditions\":\"true\"}]",
            "Permissions": "{\"insert\": \"true\", \"update\": \"true\", \"new_column\": \"ContractConditions(\\\"MainCondition\\\")\"}"
        },
        {
            "Type": "tables",
            "Name": "roles",
            "Columns": "[{\"name\":\"creator\",\"type\":\"json\",\"conditions\":\"true\"},{\"name\":\"deleted\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"image_id\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"role_name\",\"type\":\"varchar\",\"conditions\":\"true\"},{\"name\":\"role_type\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"company_id\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"date_created\",\"type\":\"datetime\",\"conditions\":\"true\"},{\"name\":\"date_deleted\",\"type\":\"datetime\",\"conditions\":\"true\"},{\"name\":\"default_page\",\"type\":\"varchar\",\"conditions\":\"true\"},{\"name\":\"financial_institutions\",\"type\":\"json\",\"conditions\":\"true\"}]",
            "Permissions": "{\"insert\": \"true\", \"update\": \"true\", \"new_column\": \"ContractConditions(\\\"MainCondition\\\")\"}"
        },
        {
            "Type": "tables",
            "Name": "roles_participants",
            "Columns": "[{\"name\":\"role\",\"type\":\"json\",\"conditions\":\"true\"},{\"name\":\"member\",\"type\":\"json\",\"conditions\":\"true\"},{\"name\":\"deleted\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"appointed\",\"type\":\"json\",\"conditions\":\"true\"},{\"name\":\"date_created\",\"type\":\"datetime\",\"conditions\":\"true\"},{\"name\":\"date_deleted\",\"type\":\"datetime\",\"conditions\":\"true\"}]",
            "Permissions": "{\"insert\": \"true\", \"update\": \"true\", \"new_column\": \"ContractConditions(\\\"MainCondition\\\")\"}"
        },
        {
            "Type": "tables",
            "Name": "notifications",
            "Columns": "[{\"name\":\"closed\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"sender\",\"type\":\"json\",\"conditions\":\"true\"},{\"name\":\"page_name\",\"type\":\"varchar\",\"conditions\":\"true\"},{\"name\":\"recipient\",\"type\":\"json\",\"conditions\":\"true\"},{\"name\":\"date_closed\",\"type\":\"datetime\",\"conditions\":\"true\"},{\"name\":\"page_params\",\"type\":\"json\",\"conditions\":\"true\"},{\"name\":\"date_created\",\"type\":\"datetime\",\"conditions\":\"true\"},{\"name\":\"notification\",\"type\":\"json\",\"conditions\":\"true\"},{\"name\":\"processing_info\",\"type\":\"json\",\"conditions\":\"true\"},{\"name\":\"date_start_processing\",\"type\":\"datetime\",\"conditions\":\"true\"}]",
            "Permissions": "{\"insert\": \"true\", \"update\": \"true\", \"new_column\": \"ContractConditions(\\\"MainCondition\\\")\"}"
        },
        {
            "Type": "tables",
            "Name": "sections",
            "Columns": "[{\"name\":\"page\",\"type\":\"varchar\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"title\",\"type\":\"varchar\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"delete\",\"type\":\"number\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"urlname\",\"type\":\"varchar\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"roles_access\",\"type\":\"text\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"}]",
            "Permissions": "{\"insert\": \"ContractConditions(\\\"MainCondition\\\")\", \"update\": \"ContractConditions(\\\"MainCondition\\\")\", \"new_column\": \"ContractConditions(\\\"MainCondition\\\")\"}"
        },
        {
            "Type": "tables",
            "Name": "applications",
            "Columns": "[{\"name\":\"name\",\"type\":\"varchar\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"uuid\",\"type\":\"uuid\",\"conditions\":\"false\"},{\"name\":\"deleted\",\"type\":\"number\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"conditions\",\"type\":\"text\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"}]",
            "Permissions": "{\"insert\": \"ContractConditions(\\\"MainCondition\\\")\", \"update\": \"ContractConditions(\\\"MainCondition\\\")\", \"new_column\": \"ContractConditions(\\\"MainCondition\\\")\"}"
        },
        {
            "Type": "tables",
            "Name": "binaries",
            "Columns": "[{\"name\":\"data\",\"type\":\"bytea\",\"conditions\":\"ContractAccess(\\\"UploadBinary\\\")\"},{\"name\":\"hash\",\"type\":\"varchar\",\"conditions\":\"ContractAccess(\\\"UploadBinary\\\")\"},{\"name\":\"name\",\"type\":\"varchar\",\"conditions\":\"false\"},{\"name\":\"app_id\",\"type\":\"number\",\"conditions\":\"false\"},{\"name\":\"member_id\",\"type\":\"number\",\"conditions\":\"false\"}]",
            "Permissions": "{\"insert\": \"ContractAccess(\\\"UploadBinary\\\")\", \"update\": \"ContractAccess(\\\"UploadBinary\\\")\", \"new_column\": \"ContractConditions(\\\"MainCondition\\\")\"}"
        },
        {
            "Type": "tables",
            "Name": "parameters",
            "Columns": "[{\"name\":\"name\",\"type\":\"varchar\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"value\",\"type\":\"text\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"conditions\",\"type\":\"text\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"}]",
            "Permissions": "{\"insert\": \"ContractConditions(\\\"MainCondition\\\")\", \"update\": \"ContractConditions(\\\"MainCondition\\\")\", \"new_column\": \"ContractConditions(\\\"MainCondition\\\")\"}"
        },
        {
            "Type": "tables",
            "Name": "app_params",
            "Columns": "[{\"name\":\"name\",\"type\":\"varchar\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"value\",\"type\":\"text\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"app_id\",\"type\":\"number\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"conditions\",\"type\":\"text\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"}]",
            "Permissions": "{\"insert\": \"ContractConditions(\\\"MainCondition\\\")\", \"update\": \"ContractConditions(\\\"MainCondition\\\")\", \"new_column\": \"ContractConditions(\\\"MainCondition\\\")\"}"
        },
        {
            "Type": "tables",
            "Name": "buffer_data",
            "Columns": "[{\"name\":\"key\",\"type\":\"varchar\",\"conditions\":\"false\"},{\"name\":\"value\",\"type\":\"json\",\"conditions\":\"true\"},{\"name\":\"member_id\",\"type\":\"number\",\"conditions\":\"false\"}]",
            "Permissions": "{\"insert\": \"true\", \"update\": \"true\", \"new_column\": \"ContractConditions(\\\"MainCondition\\\")\"}"
        },
        {
            "Type": "tables",
            "Name": "delayed_contracts",
            "Columns": "[{\"name\":\"limit\",\"type\":\"integer\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"key_id\",\"type\":\"number\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"counter\",\"type\":\"integer\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"deleted\",\"type\":\"boolean\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"block_id\",\"type\":\"integer\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"contract\",\"type\":\"varchar\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"conditions\",\"type\":\"text\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"every_block\",\"type\":\"integer\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"}]",
            "Permissions": "{\"insert\": \"ContractConditions(\\\"MainCondition\\\")\", \"update\": \"ContractConditions(\\\"MainCondition\\\")\", \"new_column\": \"ContractConditions(\\\"MainCondition\\\")\"}"
        },
        {
            "Type": "tables",
            "Name": "ecosystems",
            "Columns": "[{\"name\":\"name\",\"type\":\"varchar\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"}]",
            "Permissions": "{\"insert\": \"ContractConditions(\\\"MainCondition\\\")\", \"update\": \"ContractConditions(\\\"MainCondition\\\")\", \"new_column\": \"ContractConditions(\\\"MainCondition\\\")\"}"
        },
        {
            "Type": "tables",
            "Name": "metrics",
            "Columns": "[{\"name\":\"key\",\"type\":\"varchar\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"time\",\"type\":\"number\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"value\",\"type\":\"number\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"metric\",\"type\":\"varchar\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"}]",
            "Permissions": "{\"insert\": \"ContractConditions(\\\"MainCondition\\\")\", \"update\": \"ContractConditions(\\\"MainCondition\\\")\", \"new_column\": \"ContractConditions(\\\"MainCondition\\\")\"}"
        },
        {
            "Type": "tables",
            "Name": "system_parameters",
            "Columns": "[{\"name\":\"value\",\"type\":\"text\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"}]",
            "Permissions": "{\"insert\": \"ContractConditions(\\\"MainCondition\\\")\", \"update\": \"ContractConditions(\\\"MainCondition\\\")\", \"new_column\": \"ContractConditions(\\\"MainCondition\\\")\"}"
        },
        {
            "Type": "tables",
            "Name": "companies",
            "Columns": "[{\"name\":\"deleted\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"legal_form\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"license_id\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"company_info\",\"type\":\"json\",\"conditions\":\"true\"},{\"name\":\"company_name\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"company_name_ar\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"license_owner_id\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"title_deed_number\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"license_owner_name_arabic\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"license_owner_name_english\",\"type\":\"text\",\"conditions\":\"true\"}]",
            "Permissions": "{\"insert\": \"true\", \"update\": \"true\", \"new_column\": \"true\"}"
        }
    ]
}