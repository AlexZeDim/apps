contract voting_CreateNew {
    data {
        voting_name string
        type_voting int
        description string
        type_participants int
        type_decision int
        now_date string "date"
        start_time string "date"
        start_date string "date"
        end_date string "date"
        end_time string "date"
        volume int
        quorum int
    }

    func conditions {
        $start_date = $start_date + " "+ $start_time 
        $end_date = $end_date + " "+ $end_time 

        if ( $now_date >= $start_date ){
            warning "Voting start date is less than the current date"
        }
        
        if ( $start_date >= $end_date ){
            warning "Voting end date is less than the start date"
        }
        
        if ( ($volume < 50) || ($volume > 100) ){
            warning "Volume should be in the range from 50 to 100"  
        }
        
        if ( ($quorum < 5) || ($quorum > 100) ){
            warning "Quorum should be in the range from 5 to 100"  
        }

		$member_map = DBFind("members").Where("id=$", $key_id).Row()
		if ($member_map["id"] == nil){
			warning "You are not a member of the ecosystem"
		}
    }

    func action {
		$voting_id = DBInsert(`voting_instances`, `name,type_voting,description,typeparticipants,typedecision,startdate,enddate,volume,quorum,creator_id,creator_name,creator_avatar,flag_success,percent_success,number_participants,number_voters,flag_decision,flag_notifics,delete`, 
					$voting_name, $type_voting, $description, $type_participants, $type_decision, $start_date, $end_date, $volume, $quorum, $key_id, $member_map["member_name"], $member_map["avatar"], 0, 0, 0, 0, 0, 0, 0)
	
		// if all members are voting participants
		if ($type_participants==1){
			voting_Invite("votingID,var_id", $voting_id, 0)
		}
	}
}