contract voting_Invite {
    data {
        votingID int
        var_id int      //0, member_id, role_id
    }

    conditions {
		$voting_map = DBFind("voting_instances").Where("id=$ and enddate > now()", $votingID).Row()	
		if ($voting_map["id"] == nil){
			warning "Voting has expired. Can not add new participants"
		}
	
		$type_participants = Int($voting_map["typeparticipants"])
		$number_participants = Int($voting_map["number_participants"])
	
		if (($number_participants > 1) && (Int($voting_map["type_voting"]) == 2)){
			warning "This vote is a system. Add new participants are not possible"
		}

		if ($type_participants == 2){       //list of candidates
			$participant_id = DBFind("voting_participants").Where("voting_id=$ and member_id=$", $votingID, $var_id).One("id")
			if ($participant_id != nil){		
				warning "Member has already been added before"
			}
		}

		if ($type_participants == 3){       //list of candidates
			$participant_id = DBFind("voting_participants").Where("voting_id=$", $votingID).One("id")
			if ($participant_id != nil){		
				warning "Voting participants have already been added before"
			}
		}
    }

    action {
		if ($type_participants == 1){
			$ret_member = DBFind("members").Where("id != $", 0).Order("id")
			$i = 0
			while($i < Len($ret_member)){
				$vals_member = $ret_member[$i]
				
				DBInsert(`voting_participants`, `voting_id, member_id, member_name, member_avatar, decision`, $votingID, $vals_member["id"], $vals_member["member_name"], $vals_member["avatar"], 0)  
				$number_participants = $number_participants + 1
				$i = $i + 1
			} 
		}

		if ($type_participants == 2){
			$member_map = DBFind("members").Where("id = $", $var_id).Row()
			if ($member_map["id"] != nil){
				DBInsert(`voting_participants`, `voting_id, member_id, member_name, member_avatar, decision`, $votingID, $var_id, $member_map["member_name"], $member_map["avatar"], 0)  
				$number_participants = $number_participants + 1
			}
		}

		if ($type_participants == 3){
			$ret_member = DBFind("roles_assign").Where("role_id=$ and delete=0", $var_id).Order("id")
			$i = 0
			while($i < Len($ret_member)){
				$vals_member = $ret_member[$i]
				
				DBInsert(`voting_participants`, `voting_id, member_id, member_name, member_avatar, decision`, $votingID, $vals_member["member_id"], $vals_member["member_name"], $vals_member["member_avatar"], 0)  
				$number_participants = $number_participants + 1
				$i = $i + 1
			} 
		}

		DBUpdate(`voting_instances`, $votingID, `number_participants`, $number_participants)
    }
}