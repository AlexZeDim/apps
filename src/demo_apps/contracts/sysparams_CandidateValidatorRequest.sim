contract sysparams_CandidateValidatorRequest{
    data{
        HostIp string
        CommissionPub string
        CommissionAddress string
        Description string "optional"
        Comment string "optional"
    }
    
    func IsNotValidIp(ip string)bool{
        var parts array
        var i, lenParts, part int
        parts = Split(ip, ".")
        
        lenParts = Len(parts)
        if lenParts != 4{
            return true
        }
        while i< lenParts {
            part = Int(parts[i])
            if part < 0{
                return true
            }
            if part > 255{
                return true
            }
            i = i+1
        }
        
        return false
    }
    
    conditions{
        $candidateTbl = "sysparams_candidate"
        $roleName = "Candidate for validators"
        
        $CommissionAddress = AddressToId($CommissionAddress)
        if $CommissionAddress != PubToID($CommissionPub) {
            info "Address or Public key are invalide"
        }
        
        if IsNotValidIp($HostIp){
            warning "Please enter a valid ip address"
        }
        
        sysparams_RoleAssign("RoleName,KeyId", $roleName, $key_id)
    }
    
    action{
        
        DBInsert($candidateTbl, "host_ip,commission_pub,commission_address,description,comment,candidate_key_id,timestamp date_created,deleted", $HostIp, $CommissionPub, $CommissionAddress, $Description, $Comment, $key_id, $block_time, 0)
        
    }
    
}