contract Companies_Participants_Add {
    data {
        company_id int
        member_id int
        right_sign int
        inclusion_in_role int
        role_id int "optional"
    }

    conditions {
        // check creator of the company
        if ($company_id != $key_id) {
            warning "Sorry, you are not the creator of this company"
        }

        // check member
        $member_map = DBFind("members").Where("id = $", $member_id).Row()
        if ($member_map["id"] == nil) {
            warning "Member not found"
        }

        // check role
        if ($inclusion_in_role == 1) {
            $role_map = DBFind("roles_list").Where("id = $", $role_id).Row()
            if ($role_map["id"] == nil) {
                warning "Role not found"
            }

            if (Int($role_map["company_id"]) != $company_id) {
                warning "This role is not related to the specified company"
            }
        }

        // check - may be added before
        if ($inclusion_in_role == 1) {
            $assign_id = DBFind(`companies_participants`).Where(`company_id=$ and member_id=$ and role_id=$ and delete=$`, $company_id, $member_id, $role_id, 0).One("id")
        } else {
            $assign_id = DBFind(`companies_participants`).Where(`company_id=$ and member_id=$ and role_id=$ and delete=$`, $company_id, $member_id, 0, 0).One("id")
        }
        if ($assign_id != nil) {
            warning "This member has already been added to the specified role of the company"
        }
    }

    action {
        if ($inclusion_in_role == 0) {
            DBInsert(`companies_participants`, `company_id,member_id,member_name,member_avatar,right_sign,timestamp date_start,role_id`,
                $company_id, $member_id, $member_map["member_name"], $member_map["avatar"], $right_sign, $block_time,0)
        } else {
            DBInsert(`companies_participants`, `company_id,member_id,member_name,member_avatar,right_sign,timestamp date_start,role_id,role_name`,
                $company_id, $member_id, $member_map["member_name"], $member_map["avatar"], $right_sign, $block_time, $role_id, $role_map["role_name"])

            Roles_Assign("role_id,member_id", $role_id, $member_id)
        }
    }
}