Div(Class: content-wrapper){
	If(#notific_type#==1){
		SetVar(Name: vID, Value: #notific_param#)
	}

    If(#vID# > 0){

        DBFind(Name: voting_instances, Source: src_one).Where("id=#vID#").Vars(instance)
        
        SetTitle(#instance_name#)
        Div(Class: breadcrumb){
            LinkPage($voting$, voting_list)
            Span(/).Style(margin-right: 10px; margin-left: 10px;)
            Span(Class: text-muted, Body: #instance_name#)
        }

		SetVar(Name: vDateNow, Value: Now("YYYY-MM-DD HH:MI")) 
		SetVar(Name: vStartDate, Value: DateTime(DateTime: #instance_startdate#, Format: "YYYY-MM-DD HH:MI"))
		SetVar(Name: vEndDate, Value: DateTime(#instance_enddate#, "YYYY-MM-DD HH:MI")) 
		SetVar(Name: vCmpStartDate, Value: CmpTime(#vStartDate#,#vDateNow#)) 
		SetVar(Name: vCmpEndDate, Value: CmpTime(#vEndDate#,#vDateNow#))

		DBFind(Name: voting_participants, Source: src_two).Columns(id).Where("voting_id=#vID# and member_id=#key_id# and decision=0").Vars(participant)
        If(And(#instance_flag_fulldata#==1,#participant_id#>0,#instance_flag_decision#==0,#vCmpStartDate#<0,#vCmpEndDate#>0)){
            SetVar(Name: vOpportunityVote, Value: 1)
        }.Else{
            SetVar(Name: vOpportunityVote, Value: 0)
        }

        Div(Class: row df f-valign){
            Div(Class: col-md-2)
            Div(Class: col-md-8){

                Div(Class: panel panel-default){
                    Form(){ 

                        Div(Class: list-group-item text-center){
                            P(Class: h3 text-bold m0, Body: #instance_name#)
                            Div(Class: row df f-valign){
                                Div(Class: col-md-12 mt-sm){
									P(Class: h5 text-muted m0, Body: EcosysParam(Name: type_voting_decisions, Index: #instance_typedecision#))
								}
							}
                            Div(Class: row df f-valign){
                                Div(Class: col-md-6 mc-sm text-right){
                                    P(Class: h5 text-muted m0, Body: LangRes(description))
                                }
                                Div(Class: col-md-6 mc-sm text-left){
									P(Class: h5 text-muted m0, Body: #instance_description#)
                                }
                            }
                        }
						
                        Div(Class: list-group-item text-center){
                            Div(Class: row df f-valign){
                                Div(Class: col-md-6 mt-sm text-right){
                                    P(Class: h4 text-normal m0, Body: LangRes(type))
                                }
                                Div(Class: col-md-6 mt-sm text-left){
									P(Class: h4 text-normal m0, Body: EcosysParam(Name: type_voting, Index: #instance_type_voting#))
                                }
                            }
							If(Or(#instance_typedecision#==1,#instance_typedecision#==2,#instance_typedecision#==3,#instance_typedecision#==4)){
								Div(Class: row df f-valign){
									Div(Class: col-md-6 mc-sm text-right){
										P(Class: h4 text-normal m0, Body: LangRes(contract_accept))
									}
									Div(Class: col-md-6 mc-sm text-left){
										If(#instance_optional_contract_accept# == ""){
											P(Class: h4 text-muted m0, Body: LangRes(optional))
										}.Else{
											P(Class: h4 text-normal m0, Body: #instance_optional_contract_accept#)
										}
									}
								}
								Div(Class: row df f-valign){
									Div(Class: col-md-6 mc-sm text-right){
										P(Class: h4 text-normal m0, Body: LangRes(contract_reject))
									}
									Div(Class: col-md-6 mc-sm text-left){
										If(#instance_optional_contract_reject# == ""){
											P(Class: h4 text-muted m0, Body: LangRes(optional))
										}.Else{
											P(Class: h4 text-normal m0, Body: #instance_optional_contract_reject#)
										}
									}
								}
							}
                            Div(Class: row df f-valign){
                                Div(Class: col-md-6 mc-sm text-right){
                                    P(Class: h4 text-normal m0, Body: LangRes(filled))
                                }
                                Div(Class: col-md-6 mc-sm text-left){
                                    If(#instance_flag_fulldata# == 1){
                                        P(Class: h4 text-success m0, Body: LangRes(yes))
                                    }.Else{
                                        P(Class: h4 text-danger m0, Body: LangRes(no))
                                    } 
                                }
                            }
                            If(Or(#instance_typedecision#==1,#instance_typedecision#==2)){
                                Div(Class: row df f-valign){
                                    Div(Class: col-md-6 mt-sm text-right){
                                        P(Class: h5 text-normal m0){
											Span(Body: LangRes(role))
											Span(Class: text-danger, Body:*)
										}
                                    }
                                    Div(Class: col-md-6 mt-sm text-left){
										If(#instance_optional_role_id# > 0){
											DBFind(Name: roles_list, Source: src_roles_list).Where("id=#instance_optional_role_id#").Vars(roles)
											P(Class: h5 text-normal m0, Body: #roles_role_name# (LangRes(id): #instance_optional_role_id#))
										}.Else{
											P(Class: h5 text-danger m0, Body: LangRes(empty))
										}
                                    }
                                }
                                Div(Class: row df f-valign){
                                    Div(Class: col-md-6 mc-sm text-right){
                                        P(Class: h5 text-normal m0){
											Span(Body: LangRes(vacancies))
											Span(Class: text-danger, Body:*)
										}
                                    }
                                    Div(Class: col-md-6 mc-sm text-left){
										If(#instance_optional_role_vacancies# > 0){
											P(Class: h5 text-normal m0, Body: #instance_optional_role_vacancies#)
										}.Else{
											P(Class: h5 text-danger m0, Body: #instance_optional_role_vacancies#)
										}
                                    }
                                }
                                Div(Class: row df f-valign){
                                    Div(Class: col-md-6 mc-sm text-right){
                                        P(Class: h5 text-normal m0){
											Span(Body: LangRes(candidates))
											Span(Class: text-danger, Body:*)
										}
                                    }
                                    Div(Class: col-md-6 mc-sm text-left){
										If(#instance_optional_number_cands# > 0){
											P(Class: h5 text-normal m0, Body: #instance_optional_number_cands#)
										}.Else{
											P(Class: h5 text-danger m0, Body: #instance_optional_number_cands#)
										}
                                    }
                                }
                                Div(Class: row df){
                                    Div(Class: col-md-2 mt-sm)
                                    Div(Class: col-md-8 mt-sm text-left){
                                        DBFind(Name: voting_subject, Source: src_voting_subject).Where("voting_id=#vID#").Custom(custom_address){
                                            Span(Class: h6, Body: Address(#member_id#))
                                        }.Custom(custom_member){
                                            Button(Class: btn btn-link, Page: profile_view, PageParams: "v_member_id=#member_id#"){
                                                Image(Src: "#member_avatar#", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)
                                                Span(Class: h5 text-bold, Body: #member_name#)
                                            }
                                        }.Custom(custom_voting){
											If(#vOpportunityVote#==1){
												Input(Class: form-control hidden, Type: text, Name: votingID, Value: #vID#)
												Input(Class: form-control hidden, Type: text, Name: candidateID, Value: #member_id#)
												Button(Body: LangRes(vote), Class: btn btn-success, Page: voting_view, PageParams: "vID=#vID#", Contract: voting_AcceptCandidates)
											}
										}
                                        Table(src_voting_subject, "=custom_member,=custom_address,=custom_voting")
                                    }
                                    Div(Class: col-md-2 mt-sm)
                                }
                                Div(Class: row df f-valign){
                                    Div(Class: col-md-12 mc-sm){
                                        If(And(#vCmpStartDate#>0,#instance_type_voting#==1)){
                                            If(#instance_typedecision#==1){
                                                Button(Class: btn btn-link, Page: voting_decision_candidates, PageParams: "vID=#vID#"){
                                                    Span(Class: h5 text-bold, Body: LangRes(subject_voting_edit))
                                                }
                                            }
                                            If(#instance_typedecision#==2){
                                                Button(Class: btn btn-link, Page: voting_decision_election, PageParams: "vID=#vID#"){
                                                    Span(Class: h5 text-bold, Body: LangRes(subject_voting_edit))
                                                }
                                            }
                                        }
                                    }
                                }
                            } 
							If(#instance_typedecision#==3){
								DBFind(Name: voting_subject, Source: src_voting_subject).Columns(id,text_doc_hash,text_document).Where("voting_id=#vID#").Vars(subject)
                                Div(Class: row df f-valign){
                                    Div(Class: col-md-1 mt-lg)
                                    Div(Class: col-md-10 mt-lg){
										Div(Class: list-group-item){
											If(#subject_id# > 0){
												P(Class: h5 text-normal m0, Body: #subject_text_document#)
											}.Else{
												P(Class: h5 text-danger m0, Body: LangRes(empty))
											}	
										}
										Div(Class: list-group-item){
											If(#subject_id# > 0){
												P(Class: h6 text-muted m0, Body: Hash: #subject_text_doc_hash#)
											}.Else{
												P(Class: h6 text-muted m0, Body: Hash: LangRes(empty))
											}
										}
                                    }
                                    Div(Class: col-md-1 mt-lg)
                                }
                                Div(Class: row df f-valign){
                                    Div(Class: col-md-12 mc-sm){
										If(And(#vCmpStartDate#>0,#instance_type_voting#==1)){
											Button(Class: btn btn-link, Page: voting_decision_document, PageParams: "vID=#vID#"){
												Span(Class: h5 text-bold, Body: LangRes(subject_voting_edit))
											}
										}
                                    }
                                }
                                Div(Class: row df f-valign){
                                    Div(Class: col-md-1 mt-lg)
                                    Div(Class: col-md-10 mt-lg){
										If(#vOpportunityVote#==1){
											Input(Class: form-control hidden, Type: text, Name: votingID, Value: #vID#)
											Div(Class: pull-left){
												Button(Body: LangRes(reject), Class: btn btn-danger, Contract: voting_RejectDecision, PageParams: "vID=#vID#", Page: voting_view)
											}
											Div(Class: pull-right){
												Button(Body: LangRes(accept), Class: btn btn-success, Contract: voting_AcceptDecision, PageParams: "vID=#vID#", Page: voting_view)
											}
										}
                                    }
                                    Div(Class: col-md-1 mt-lg)
                                }
							}
							If(#instance_typedecision#==4){
								DBFind(Name: voting_subject, Source: src_voting_subject).Columns(id,formal_decision_description,formal_decision_table,formal_decision_tableid,formal_decision_column,formal_decision_colvalue).Where("voting_id=#vID#").Vars(subject)
								Div(Class: row df f-valign){
                                    Div(Class: col-md-6 mt-sm text-right){
                                        P(Class: h5 text-normal m0){
											Span(Body: LangRes(description))
											Span(Class: text-danger, Body:*)
										}
                                    }
                                    Div(Class: col-md-6 mt-sm text-left){
										If(#subject_id# > 0){
											P(Class: h5 text-normal m0, Body: #subject_formal_decision_description#)
										}.Else{
											P(Class: h5 text-danger m0, Body: LangRes(empty))
										}
                                    }
                                }
                                Div(Class: row df f-valign){
                                    Div(Class: col-md-6 mc-sm text-right){
                                        P(Class: h5 text-normal m0){
											Span(Body: LangRes(table_to_written))
											Span(Class: text-danger, Body:*)
										}
                                    }
                                    Div(Class: col-md-6 mc-sm text-left){
										If(#subject_id# > 0){
											P(Class: h5 text-normal m0, Body: #subject_formal_decision_table#)
										}.Else{
											P(Class: h5 text-danger m0, Body: LangRes(empty))
										}
                                    }
                                }
								If(#instance_type_voting#==1){
									Div(Class: row df f-valign){
										Div(Class: col-md-6 mc-sm text-right){
											P(Class: h5 text-normal m0){
												Span(Body: LangRes(row_id))
												Span(Class: text-danger, Body:*)
											}
										}
										Div(Class: col-md-6 mc-sm text-left){
											If(#subject_id# > 0){
												P(Class: h5 text-normal m0, Body: #subject_formal_decision_tableid#)
											}.Else{
												P(Class: h5 text-danger m0, Body: LangRes(empty))
											}
										}
									}
								}
                                Div(Class: row df f-valign){
                                    Div(Class: col-md-6 mc-sm text-right){
                                        P(Class: h5 text-normal m0){
											If(#instance_type_voting#==1){
												Span(Body: LangRes(column_name))
											}.Else{
												Span(Body: LangRes(parameter_name))
											}
											Span(Class: text-danger, Body:*)
										}
                                    }
                                    Div(Class: col-md-6 mc-sm text-left){
										If(#subject_id# > 0){
											P(Class: h5 text-normal m0, Body: #subject_formal_decision_column#)
										}.Else{
											P(Class: h5 text-danger m0, Body: LangRes(empty))
										}
                                    }
                                }
                                Div(Class: row df f-valign){
                                    Div(Class: col-md-6 mc-sm text-right){
                                        P(Class: h5 text-normal m0){
											Span(Body: LangRes(written_value))
											Span(Class: text-danger, Body:*)
										}
                                    }
                                    Div(Class: col-md-6 mc-sm text-left){
										If(#subject_id# > 0){
											P(Class: h5 text-normal m0, Body: #subject_formal_decision_colvalue#)
										}.Else{
											P(Class: h5 text-danger m0, Body: LangRes(empty))
										}
                                    }
                                }
                                Div(Class: row df f-valign){
                                    Div(Class: col-md-12 mc-sm){
										If(And(#vCmpStartDate#>0,#instance_type_voting#==1)){
											Button(Class: btn btn-link, Page: voting_decision_formal, PageParams: "vID=#vID#"){
												Span(Class: h5 text-bold, Body: LangRes(subject_voting_edit))
											}
										}
                                    }
                                }
                                Div(Class: row df f-valign){
                                    Div(Class: col-md-1 mt-lg)
                                    Div(Class: col-md-10 mt-lg){
										If(#vOpportunityVote#==1){
											Input(Class: form-control hidden, Type: text, Name: votingID, Value: #vID#)
											Div(Class: pull-left){
												Button(Body: LangRes(reject), Class: btn btn-danger, Contract: voting_RejectDecision, PageParams: "vID=#vID#", Page: voting_view)
											}
											Div(Class: pull-right){
												Button(Body: LangRes(accept), Class: btn btn-success, Contract: voting_AcceptDecision, PageParams: "vID=#vID#", Page: voting_view)
											}
										}
                                    }
                                    Div(Class: col-md-1 mt-lg)
                                }
							}
							If(#instance_typedecision#==5){
								DBFind(Name: voting_subject, Source: src_voting_subject).Columns(id,contract_accept,contract_reject).Where("voting_id=#vID#").Vars(subject)
								Div(Class: row df f-valign){
									Div(Class: col-md-6 mt-sm text-right){
                                        P(Class: h5 text-normal m0){
											Span(Body: LangRes(contract_accept))
											Span(Class: text-danger, Body:*)
										}
									}
									Div(Class: col-md-6 mt-sm text-left){
										If(#subject_id# > 0){
											P(Class: h5 text-normal m0, Body: #subject_contract_accept#)
										}.Else{
											P(Class: h5 text-danger m0, Body: LangRes(empty))
										}
									}
								}
								Div(Class: row df f-valign){
									Div(Class: col-md-6 mc-sm text-right){
                                        P(Class: h5 text-normal m0){
											Span(Body: LangRes(contract_reject))
											Span(Class: text-danger, Body:*)
										}
									}
									Div(Class: col-md-6 mc-sm text-left){
										If(#subject_id# > 0){
											P(Class: h5 text-normal m0, Body: #subject_contract_reject#)
										}.Else{
											P(Class: h5 text-danger m0, Body: LangRes(empty))
										}
									}
								}
                                Div(Class: row df f-valign){
                                    Div(Class: col-md-12 mc-sm){
										If(And(#vCmpStartDate#>0,#instance_type_voting#==1)){
											Button(Class: btn btn-link, Page: voting_decision_contract, PageParams: "vID=#vID#"){
												Span(Class: h5 text-bold, Body: LangRes(subject_voting_edit))
											}
										}
                                    }
                                }
                                Div(Class: row df f-valign){
                                    Div(Class: col-md-1 mt-lg)
                                    Div(Class: col-md-10 mt-lg){
										If(#vOpportunityVote#==1){
											Input(Class: form-control hidden, Type: text, Name: votingID, Value: #vID#)
											Div(Class: pull-left){
												Button(Body: LangRes(reject), Class: btn btn-danger, Contract: voting_RejectDecision, PageParams: "vID=#vID#", Page: voting_view)
											}
											Div(Class: pull-right){
												Button(Body: LangRes(accept), Class: btn btn-success, Contract: voting_AcceptDecision, PageParams: "vID=#vID#", Page: voting_view)
											}
										}
                                    }
                                    Div(Class: col-md-1 mt-lg)
                                }
							}
                        }
						
                        Div(Class: list-group-item text-center){
                            Div(Class: row df f-valign){
                                Div(Class: col-md-6 mt-sm text-right){
                                    P(Class: h5 text-normal m0, Body: LangRes(status))
                                }
                                Div(Class: col-md-6 mt-sm text-left){
									If(#instance_flag_success#==1){ 
										P(Class: h5 text-success m0, Body: LangRes(success))
									}.Else{
										If(#vCmpEndDate#<0){
											P(Class: h5 text-muted m0, Body: LangRes(finished))
										}.Else{	
											If(#vCmpStartDate#<0){ 
												P(Class: h5 text-success m0, Body: LangRes(started))
											}.Else{	
												P(Class: h5 text-warning m0, Body: LangRes(waiting))
											}
										}
									}
                                }
                            }
							Div(Class: row df f-valign){
								Div(Class: col-md-6 mc-sm text-right){
									P(Class: h5 text-normal m0, Body: LangRes(notifications))
								}
								Div(Class: col-md-6 mc-sm text-left){
									If(#instance_flag_notifics#==1){
										P(Class: h5 text-normal m0, Body: LangRes(yes))
									}.Else{
										P(Class: h5 text-normal m0, Body: LangRes(no))
									}
								}
							}
                            Div(Class: row df f-valign){
                                Div(Class: col-md-6 mc-sm text-right){
                                    P(Class: h5 text-normal m0, Body: LangRes(decision))
                                }
                                Div(Class: col-md-6 mc-sm text-left){
									If(#instance_flag_decision#==-2){
										P(Class: h5 text-normal m0, Body: LangRes(not_enough_votes))
									}
									If(#instance_flag_decision#==-1){ 
										P(Class: h5 text-danger m0, Body: LangRes(rejected))
									}
									If(#instance_flag_decision#==0){
										P(Class: h5 text-normal m0, Body: LangRes(no))
									}
									If(#instance_flag_decision#==1){
										P(Class: h5 text-success m0, Body: LangRes(accepted))
									}
                                }
                            }
							Div(Class: row df f-valign){
								Div(Class: col-md-6 mt-sm text-right){
									P(Class: h5 text-normal m0, Body: LangRes(date_start))
								}
								Div(Class: col-md-6 mt-sm text-left){
									If(#vCmpStartDate#<0){						
										P(Class: h5 text-muted m0, Body: DateTime(DateTime: #instance_startdate#, Format: "DD.MM.YYYY HH:MI"))
									}.Else{
										P(Class: h5 text-normal m0, Body: DateTime(DateTime: #instance_startdate#, Format: "DD.MM.YYYY HH:MI"))
									}
								}
							}
							Div(Class: row df f-valign){
								Div(Class: col-md-6 mc-sm text-right){
									P(Class: h5 text-normal m0, Body: LangRes(date_end))
								}
								Div(Class: col-md-6 mc-sm text-left){
									If(#vCmpEndDate#<0){						
										P(Class: h5 text-muted m0, Body: DateTime(DateTime: #instance_enddate#, Format: "DD.MM.YYYY HH:MI"))
									}.Else{
										P(Class: h5 text-normal m0, Body: DateTime(DateTime: #instance_enddate#, Format: "DD.MM.YYYY HH:MI"))
									}
								}
							}
							Div(Class: row df f-valign){
								Div(Class: col-md-6 mt-sm text-right){
									P(Class: h5 text-normal m0, Body: LangRes(voting_volume))
								}
								Div(Class: col-md-6 mt-sm text-left){
									P(Class: h5 text-normal m0, Body: #instance_volume#)
								}
							}
							Div(Class: row df f-valign){
								Div(Class: col-md-6 mc-sm text-right){
									P(Class: h5 text-normal m0, Body: LangRes(voting_quorum))
								}
								Div(Class: col-md-6 mc-sm text-left){
									P(Class: h5 text-normal m0, Body: #instance_quorum#)
								}
							}
							Div(Class: row df f-valign){
								Div(Class: col-md-6 mt-sm text-right){
									P(Class: h5 text-normal m0){
										Span(Body: LangRes(participants))
										Span(Class: text-danger, Body:*)
									}
								}
								Div(Class: col-md-6 mt-sm text-left){
									If(#instance_number_participants# > 0){
										P(Class: h5 text-normal m0, Body: #instance_number_participants#)
									}.Else{
										P(Class: h5 text-danger m0, Body: #instance_number_participants#)
									}
								}
							}
                            Div(Class: row df f-valign){
                                Div(Class: col-md-2 mt-sm)
                                Div(Class: col-md-8 mt-sm text-left){
								
									DBFind(Name: voting_participants, Source: src_voting_participants).Columns(id,decision,member_name,member_id,member_avatar,decision_date).Where("voting_id=#vID#").Custom(custom_address){
                                            P(Class: h6 m0, Body: Address(#member_id#))
                                        }.Custom(custom_member){
                                            Button(Class: btn btn-link, Page: profile_view, PageParams: "v_member_id=#member_id#"){
                                                Image(Src: "#member_avatar#", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)
                                                Span(Class: h5 text-bold, Body: #member_name#)
                                            }
                                        }.Custom(custom_decision){

											If(Or(#instance_typedecision#==1,#instance_typedecision#==2)){ 
												If(#decision#==0){ 
													P(Class: h6 m0, Body: LangRes(did_not_vote))
												}.Else{
													DBFind(Name: members, Source: src_member).Where("id=#decision#").Vars(list)
													P(Class: text-success text-center h6 m0, Body: $vote_for_candidate$:)
													P(Class: text-success text-center h6 m0, Body: #list_member_name# Address(#decision#) )
													P(Class: text-success text-center h6 m0, Body: $at$ DateTime(DateTime: #decision_date#, Format: "DD.MM.YYYY HH:MI"))
												}
											}
											If(#instance_typedecision#==3){ 
												If(#decision#==0){
													P(Class: h6 m0, Body: LangRes(did_not_vote))
												}
												If(#decision#==1){ 
													P(Class: text-success h6 m0, Body: $document_accept$ $at$ DateTime(DateTime: #decision_date#, Format: "DD.MM.YYYY HH:MI"))
												}
												If(#decision#==-1){ 
													P(Class: text-danger h6 m0, Body: $document_reject$ $at$ DateTime(DateTime: #decision_date#, Format: "DD.MM.YYYY HH:MI"))
												}
											}
											If(#instance_typedecision#==4){
												If(#decision#==0){
													P(Class: h6 m0, Body: LangRes(did_not_vote))
												}
												If(#decision#==1){
													P(Class: text-success h6 m0, Body: $decision_accept$ $at$ DateTime(DateTime: #decision_date#, Format: "DD.MM.YYYY HH:MI"))
												}
												If(#decision#==-1){ 
													P(Class: text-danger h6 m0, Body: $decision_reject$ $at$ DateTime(DateTime: #decision_date#, Format: "DD.MM.YYYY HH:MI"))
												}
											}
											If(#instance_typedecision#==5){ 
												If(#decision#==0){
													P(Class: h6 m0, Body: LangRes(did_not_vote))
												}
												If(#decision#==1){ 
													P(Class: text-success h6 m0, Body: $contract_accepted$ $at$ DateTime(DateTime: #decision_date#, Format: "DD.MM.YYYY HH:MI"))
												}
												If(#decision#==-1){ 
													P(Class: text-danger h6 m0, Body: $contract_rejected$ $at$ DateTime(DateTime: #decision_date#, Format: "DD.MM.YYYY HH:MI"))
												}
											}
										}
                                        Table(src_voting_participants, "=custom_member,=custom_decision")
								
                                }
								Div(Class: col-md-2 mt-sm)
                            }
							Div(Class: row df f-valign){
								Div(Class: col-md-12 mc-sm){
									If(And(#vCmpStartDate#>0,#instance_type_voting#==1)){
										Button(Class: btn btn-link, Page: voting_invite, PageParams: "vID=#vID#"){
											Span(Class: h5 text-bold, Body: LangRes(participants_add))
										}
									}
								}
							}
						}
						
                        Div(Class: list-group-item text-center){
                            Div(Class: row df f-valign){
                                Div(Class: col-md-1 mt-sm )
                                Div(Class: col-md-5 mt-sm text-center){
									P(Class: h4 text-normal m0, Body: LangRes(voted))
                                }
                                Div(Class: col-md-5 mt-sm text-center){
									P(Class: h4 text-normal m0, Body: LangRes(progress))
                                }
                                Div(Class: col-md-1 mt-sm)
                            }
                            Div(Class: row df f-valign){
                                Div(Class: col-md-1 mt-sm )
                                Div(Class: col-md-5 mt-sm text-center){
									P(Class: h6 text-muted m0, Body: LangRes(voting_graph_voted))
                                }
                                Div(Class: col-md-5 mt-sm text-center){
									P(Class: h6 text-muted m0, Body: LangRes(voting_graph_progress))
                                }
                                Div(Class: col-md-1 mt-sm)
                            }
                            Div(Class: row df f-valign){
                                Div(Class: col-md-1 mt-sm )
                                Div(Class: col-md-5 mt-sm text-center){
                                    P(Class: h3 text-normal m0, Body: #instance_number_voters# / #instance_percent_voters#)
                                }
                                Div(Class: col-md-5 mt-sm text-center){
                                    P(Class: h3 text-normal m0, Body: #instance_percent_success# / 100)
                                }
                                Div(Class: col-md-1 mt-sm)
                            }
						}
						
                    }
                }

            }
            Div(Class: col-md-2)
        }   
    }.Else{
        Div(Class: md-12 alert alert-danger text-center){
            Span(Body: LangRes(attention))
        }
    }
}