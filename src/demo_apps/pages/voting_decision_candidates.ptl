Div(Class: content-wrapper){
	
    If(#vID# > 0){

        DBFind(Name: voting_instances, Source: src_voting_instances).Where("id=#vID#").Vars(instance)

        SetTitle($subject_voting$)
        Div(Class: breadcrumb){
            LinkPage($voting$, voting_list)
            Span(/).Style(margin-right: 10px; margin-left: 10px;)
            LinkPage(#instance_name#, voting_view,, "vID=#vID#")
            Span(/).Style(margin-right: 10px; margin-left: 10px;)
            Span(Class: text-muted, Body: $subject_voting$)
        }

        Div(Class: row df f-valign){
            Div(Class: col-md-2)
            Div(Class: col-md-8){

                Div(Class: panel panel-primary){
                    Form(){  
					
						Input(Name: memberID, Class: form-control hidden, Type: text, Value: 0)
						Input(Name: votingID, Class: form-control hidden, Type: text, Value: #vID#)
					
						Div(Class: list-group-item){
							Div(Class: row df f-valign){
								Div(Class: col-md-3 mt-sm text-right){
									Label($candidates$)
								}
								Div(Class: col-md-6 mt-sm text-left){
                                    Div(form-text text-muted, $can_apply_voting$)
								} 
								Div(Class: col-md-3 mc-sm text-right){
                                    Button(Body: LangRes(apply), Class: btn btn-primary, Page: voting_decision_candidates, PageParams: "vID=Val(votingID)", Contract: voting_SubjectCandidates)
                                } 
							}
                            Div(Class: row df){
                    			Div(Class: col-md-3 mt-sm)
                    			Div(Class: col-md-8 mt-sm text-left){
                                    DBFind(Name: voting_subject, Source: src_voting_subject).Where("voting_id=#vID#").Custom(custom_address){
                                        Span(Address(#member_id#))
	                                }.Custom(custom_member){
										Button(Class: btn btn-link, Page: profile_view, PageParams: "v_member_id=#member_id#"){
											Image(Src: "#member_avatar#", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)
											Span(Class: h5 text-bold, Body: #member_name#)
										}
									}
                                    Table(src_voting_subject, "$candidates$=custom_member,$member_id$=custom_address")
                                }
                    			Div(Class: col-md-1 mt-sm)
                            }
                        }

                        Div(Class: list-group-item){
                            Div(Class: row df f-valign){
                                Div(Class: col-md-3 mt-sm text-right){
                                    Label(For: roleID){
                                        Span(Body: LangRes(role))
                                    }
                                }
                                Div(Class: col-md-9 mb-sm text-left){
                                    DBFind(Name: roles_list, Source: source_roles).Columns(role_name, id).Where("role_type=2 and delete=0")
                                    Select(Name: roleID, Source: source_roles, NameColumn: role_name, ValueColumn: id, Value: #instance_optional_role_id#)
                                } 
                            }

                            Div(row df f-valign){
                                Div(Class: col-md-3 mt-sm text-right){
                                    Label(For: vacancies){
                                        Span(Body: LangRes(vacancies))
                                    }
                                }
                    			Div(Class: col-md-9 mc-sm text-left){
                    			    Input(Name: vacancies, Class: form-control, Type: Number, Value: #instance_optional_role_vacancies#)
                                }
                            }                    
                        }

                        Div(Class: list-group-item){
                            Div(Class: row df f-valign){
                                Div(Class: col-md-3 mt-sm text-right){
                                    Label(For: contract_accept){
                                        Span(Body: LangRes(contract_accept))
                                    }
                                    P(Class: m0 text-muted, Body: $optional$)
                                }
                                Div(Class: col-md-9 mc-sm text-left){
                                    Input(Name: contract_accept, Class: form-control, Type: text, Value: #instance_optional_contract_accept#)
                                    P(Class: text-muted, Body: $contract_accept_des$)
                                }
                            }                     
                            Div(Class: row df f-valign){
                                Div(Class: col-md-3 mt-sm text-right){
                                    Label(For: contract_reject){
                                        Span(Body: LangRes(contract_reject))
                                    }
                                    P(Class: m0 text-muted, Body: $optional$)
                                }
                                Div(Class: col-md-9 mc-sm text-left){
                                    Input(Name: contract_reject, Class: form-control, Type: text, Value: #instance_optional_contract_reject#)
                                    P(Class: m0 text-muted, Body: $contract_reject_des$)
                                }
                            }                     
                        }

                        Div(Class: panel-footer clearfix){
                            Div(Class: pull-right){
                                Button(Body: LangRes(back), Class: btn btn-default, Page: voting_view, PageParams: "vID=#vID#")
                                Button(Body: LangRes(save), Class: btn btn-primary, Page: voting_view, PageParams: "vID=#vID#", Contract: voting_SubjectSettings)
                            }
                        }
                    }
                }
            }
            Div(Class: col-md-2)
        }
        
    }.Else{

        Div(Class: md-12 alert alert-danger text-center){
            Span(Body: LangRes(attention))
        }
    }
}