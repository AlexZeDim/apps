Div(Class: content-wrapper){
	
    If(Or(#param_company_id#>0,#param_company_id#<0)){

        DBFind(Name: companies, Source: src_companies).Where("id=#param_company_id#").Vars(instance)
		
        SetTitle($participants$)
        Div(Class: breadcrumb){
            LinkPage($companies$, companies_list)
            Span(/).Style(margin-right: 10px; margin-left: 10px;)
            LinkPage(#instance_company_name#, companies_view,, "company_id=#param_company_id#")
            Span(/).Style(margin-right: 10px; margin-left: 10px;)
            Span(Class: text-muted, Body: $participants$)
        }

        Div(Class: row df f-valign){
            Div(Class: col-md-3)
            Div(Class: col-md-6){
			
                Div(Class: panel panel-primary){
					Div(Class: panel-heading, Body: LangRes(participants))
                    Form(){
					
						Input(Name: company_id, Class: form-control hidden, Type: text, Value: #param_company_id#)
					
						Div(Class: list-group-item){
							Div(Class: row df f-valign){
								Div(Class: col-md-3 mt-sm text-right){
                                    Label(){
                                        Span(Body: LangRes(company))
                                        Span(Class: text-danger, Body:*)
                                    }
								}
								Div(Class: col-md-9 mt-sm text-left){
									Span(Class: h5, Body: #instance_company_name#)
								} 
							}
						}

                        Div(Class: list-group-item){
                            Div(Class: row df f-valign){
                                Div(Class: col-md-3 mt-sm text-right){
                                    Label(){
                                        Span(Body: LangRes(member))
                                        Span(Class: text-danger, Body:*)
                                    }
                                }
                                Div(Class: col-md-9 mc-sm text-left){
                                    DBFind(Name: members, Source: source_members).Columns(member_name, id).Custom(custom_username){
                                        Span(Body: #member_name# ( Address(#id#) ) ) 
                                    }
                                    Select(Name: member_id, Source: source_members, NameColumn: custom_username, ValueColumn: id)
                                    Data(src_sign,"id,name"){ 
                                        0,$right_sign_no$
                                        1,$right_sign_yes$
                                    }
                                    RadioGroup(Name: right_sign, Source: src_sign, NameColumn: "name", ValueColumn: "id")
                                } 
                            }
                        }

                        Div(Class: list-group-item){
                            Div(Class: row df f-valign){
                                Div(Class: col-md-3 mt-lg text-right){
                                    Label(){
                                        Span(Body: LangRes(assign))
                                        Span(Class: text-danger, Body:*)
                                    }
                                }
                                Div(Class: col-md-9 mc-sm text-left){
                                    Data(src_inclusion,"id,name"){
                                        0,$no_include_in_role$
                                        1,$include_in_role$
                                    }
                                    RadioGroup(Name: inclusion_in_role, Source: src_inclusion, NameColumn: "name", ValueColumn: "id")
                                }
                            }
                        }

                        Div(Class: list-group-item){
                            Div(Class: row df f-valign){
                                Div(Class: col-md-3 mt-sm text-right){
                                    Label(){
                                        Span(Body: LangRes(role))
                                    }
                                }
                                Div(Class: col-md-9 mc-sm text-left){
                                    DBFind(Name: roles_list, Source: source_roles).Columns(role_name, id).Where("company_id=#param_company_id# and delete=0")
                                    Select(Name: role_id, Source: source_roles, NameColumn: role_name, ValueColumn: id)
                                    P(Class: m0 text-muted, Body: $select_role_if_include$)
                                }
                            }
                        }

                        Div(Class: panel-footer clearfix){
                            Div(Class: pull-right){
                                Button(Body: LangRes(add),  Class: btn btn-primary, Page: companies_view, PageParams: "company_id=#param_company_id#", Contract: Companies_Participants_Add)
                            }
                        }
						
					}
				}
				
            }
            Div(Class: col-md-3)
        }
        
    }.Else{

        Div(Class: md-12 alert alert-danger text-center){
            Span(Body: LangRes(attention))
        }
    }
}