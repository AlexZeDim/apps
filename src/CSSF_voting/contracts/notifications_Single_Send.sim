contract notifications_Single_Send {
    data {
        member_id int
        sender int
        icon_name string
        text_header string
        text_body string "optional"
        page_name string
        params_map map
    }

    conditions {
        $member_map = DBFind("keys").Where("id=?", $member_id).Row()
        if !$member_map {
            warning "notifications_Single_Send: Key member not found"
        }

        if $sender == 1 {
            $sender_map = DBFind("keys").Where("id = $", $key_id).Row()
            if !$sender_map {
                warning "notifications_Single_Send: Key sender not found"
            }
        }
        if $sender == 2 {
            // !!! need to fix role_id to the global variable !!!!
            $sender_map = DBFind("roles").WhereId(1).Row()
            if !$sender_map {
                warning "notifications_Single_Send: Admin role not found"
            }
        }
    }

    action {
        var recipient map
        recipient["member_id"] = $member_map["id"]
        recipient["member_name"] = IdToAddress(Int($member_map["id"]))

        var sender map
        if $sender == 1 {
            sender["type"] = 1
            sender["member_id"] = $sender_map["id"]
            sender["member_name"] = IdToAddress(Int($sender_map["id"]))
        }
        if $sender == 2 {
            sender["type"] = 2
            sender["role_id"] = $sender_map["id"]
            sender["role_name"] = $sender_map["role_name"]
        }

        var notification map
        notification["header"] = $text_header
        notification["type"] = 1
        notification["icon"] = $icon_name
        notification["body"] = $text_body

        DBInsert("notifications", "recipient,sender,notification,page_name,page_params,timestamp date_created",
            recipient, sender, notification, $page_name, $params_map, $block_time)
    }
}