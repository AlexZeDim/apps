contract voting_InstallTemplates{
    data{}
    conditions{}

    action{
        var columns string
        columns = "volume,init_contract,contract_reject,contract_accept,title,vacancies,candidates,reject_params,type_decision,type_voting,type_participants,quorum,voters,subject,accept_params,type"

        // voting for validator
        DBInsert("voting_templates", columns, 70, "sysparams_StartVotingValidator", "", "sysparams_AcceptValidator", "Voting for Validator", 1, 2, "", 2, 2, 3, 51, 5, "Validator", "","law")

        // voting for system param
        DBInsert("voting_templates", columns, 70, "sysparams_InitVoting", "", "", "Voting for System param value", 0, 4, "", 4, 2, 3, 51, 4, "System param", "","law")

        // voting for valued ecosystem
        DBInsert("voting_templates", columns, 70, "sysparams_InvestorRefresh", "", "", "Voting for Valued Ecosystem", 0, 0, "", 4, 1, 3, 51, 4, "Valued ecosystem", "","law")

        // voting for tokenrefund
        DBInsert("voting_templates", columns, 70, "sysparams_InvestorRefresh", "tokenrefund_Reject", "tokenrefund_Accept", "Token Refund", 0, 0, "", 0, 0, 3, 51, 4, "Token refund", "","law")
    }
}