contract Roles_Assign {
    data {
        rid int
        member_id int
    }
    
    conditions {
        $role_map = DBFind("roles").Columns("id,deleted,role_type,role_name,image_id,creator->member_id").Where("id = $", $rid).Row()
        if !$role_map {
            warning "Role not found"
        }
        
        $member_map = DBFind("members").Where("id = $", $member_id).Row()
        if !$member_map {
            warning "Member not found"
        }
        
        $appointer_map = DBFind("members").Where("id = $", $key_id).Row()
        if !$appointer_map {
            warning "Appointer not found"
        }
        
        if $role_map["deleted"] == 1 {
            warning "This role has been deleted. The appointment of members is impossible"
        }
        
        var specialRules map
        specialRules["sysparams_AcceptValidator"] = "Validator"
        specialRules["sysparams_DelegateRefresh"] = "Delegate"
        specialRules["sysparams_CandidateValidatorRequest"] = "Candidate for validators"
        specialRules["voting_TemplateRun"] = "Investor with voting rights"
        specialRules["tokenrefund_Start"] = "Investor with voting rights"
        
        if !(specialRules[$original_contract] == $role_map["role_name"]) {
            if $role_map["role_type"] != 1 && $role_map["role_type"] != 4 {
                warning "This role is not assignable. The appointment of members is impossible"
            }
            // check creator of the role
            if $role_map["creator.member_id"] != $key_id {
                warning "Sorry, you are not the creator of this role. The appointment of members is impossible"
            }
        }
        
        $assign_id = DBFind("roles_participants").Where("role->id=$ and member->member_id=$ and deleted=0", $rid, $member_id).One("id")
        if $assign_id {
            warning "This member has already been added"
        }
        
    }
    
    action {
        var role map
        role["id"] = $role_map["id"]
        role["type"] = $role_map["role_type"]
        role["name"] = $role_map["role_name"]
        role["image_id"] = $role_map["image_id"]
        
        var member map
        member["member_id"] = $member_map["id"]
        member["member_name"] = $member_map["member_name"]
        member["image_id"] = $member_map["image_id"]
        
        var appointed map
        appointed["member_id"] = $appointer_map["id"]
        appointed["member_name"] = $appointer_map["member_name"]
        appointed["image_id"] = $appointer_map["image_id"]
        
        DBInsert("roles_participants", "role,member,appointed,timestamp date_created", role, member, appointed, $block_time)
    }
}