
DBFind(applications,src_app).Columns("name,id").Where("name='Basic application'").Vars(application)
SetTitle("List of votings")

If(GetVar(Search)){
    SetVar(v_Where,"voting->name='#Search#' and deleted=0")
}.Else{
    SetVar(v_Where,"deleted=0").(Search,)
}

DBFind(votings,src_voting).Custom(_id){
    Span(Class: h5, Body: #id#)

    DBFind(votings).Columns("date_started").Where("id=#id# and date_started < now()").Vars(started)
    DBFind(votings).Columns("date_ended").Where("id=#id# and date_ended < now()").Vars(ended)

    If(#started_id#>0){
        SetVar(isStarted,1)
    }.Else{
        SetVar(isStarted,-1)
    }
    If(#ended_id#>0){
        SetVar(isEnded,1)
    }.Else{
        SetVar(isEnded,-1)
    }
}.Custom(_name){
    LinkPage(Page: voting_view, PageParams: "vID=#id#"){
        Span(Class: h5 text-bold, Body: #voting.name#)
    }
}.Custom(_subject){
    If(Or(#isStarted#<0,#voting.type#==2)){
        Span(Class: h6, Body: AppParam(App:#application_id#, Name: type_voting_decisions, Index: #voting.type_decision#))
    }.Else{
        If(#voting.type_decision# == 1){
            LinkPage(Page: voting_decision_candidates, PageParams: "vID=#id#"){
                Span(Class: h6 text-bold, Body: AppParam(App:#application_id#, Name: type_voting_decisions, Index: #voting.type_decision#))
            }
        }.ElseIf(#voting.type_decision# == 2){
            LinkPage(Page: voting_decision_election, PageParams: "vID=#id#"){
                Span(Class: h6 text-bold, Body: AppParam(App:#application_id#, Name: type_voting_decisions, Index: #voting.type_decision#))
            }
        }.ElseIf(#voting.type_decision# == 3){
            LinkPage(Page: voting_decision_document, PageParams: "vID=#id#"){
                Span(Class: h6 text-bold, Body: AppParam(App:#application_id#, Name: type_voting_decisions, Index: #voting.type_decision#))
            }
        }.ElseIf(#voting.type_decision# == 4){
            LinkPage(Page: voting_decision_formal, PageParams: "vID=#id#"){
                Span(Class: h6 text-bold, Body: AppParam(App:#application_id#, Name: type_voting_decisions, Index: #voting.type_decision#))
            }
        }.ElseIf(#voting.type_decision# == 5){
            LinkPage(Page: voting_decision_contract, PageParams: "vID=#id#"){
                Span(Class: h6 text-bold, Body: AppParam(App:#application_id#, Name: type_voting_decisions, Index: #voting.type_decision#))
            }
        }
    }
}.Custom(_participants){
    If(Or(#isStarted#<0,#voting.type#==2)){
        Span(Class: h6, Body: AppParam(App:#application_id#, Name: type_voting_participants, Index: #voting.type_participants#))
    }.Else{
        LinkPage(Page: voting_invite, PageParams: "vID=#id#"){
            Span(Class: h6 text-bold, Body: AppParam(App:#application_id#, Name: type_voting_participants, Index: #voting.type_participants#))
        }
    }
}.Custom(_creator){
    LinkPage(Class: text-primary h5 text-bold, Page: profile_view, PageParams: "v_member_id=#creator.member_id#"){
        Span(Body: #creator.member_name#)
    }
}.Custom(_date){
    If(#isStarted#>0){
        Div(Class: text-muted, Body: DateTime(DateTime: #date_started#, Format: "DD.MM.YYYY HH:MI"))
    }.Else{
        Div(Class: text-bold, Body: DateTime(DateTime: #date_started#, Format: "DD.MM.YYYY HH:MI"))
    }
    If(#isEnded#>0){
        Div(Class: text-muted, Body: DateTime(DateTime: #date_ended#, Format: "DD.MM.YYYY HH:MI"))
    }.Else{
        Div(Class: text-bold, Body: DateTime(DateTime: #date_ended#, Format: "DD.MM.YYYY HH:MI"))
    }
}.Custom(_type){
    Span(Class: h6, Body: AppParam(App:#application_id#, Name: type_voting, Index: #voting.type#))
}.Custom(_progress){
    Div(Class: text-center h5 text-bold, Body: #progress.percent_success# %)
}.Custom(_decision){
    If(#flags.decision# == 0){
        If(And(#isEnded#>0,#creator.member_id#==#key_id#)){
            Div(Class: text-center, Body: Button(Body: LangRes(decision), Class: btn btn-primary, Contract: voting_CheckDecision, Params: "votingID=#id#", Page: voting_list))
        }.Else{
            Div(Class: text-muted text-center, Body: LangRes(no))
        }
    }.ElseIf(#flags.decision# == -2){
        Div(Class: text-muted text-center, Body: LangRes(not_enough_votes))
    }.ElseIf(#flags.decision# == 1){
        Div(Class: text-success text-center, Body: LangRes(accepted))
    }.ElseIf(#flags.decision# == -1){
        Div(Class: text-danger text-center, Body: LangRes(rejected))
    }
}.Custom(_status){
    Div(text-center){
        If(#flags.success# == 1){
            Span(Class: text-success, Body: LangRes(success))
        }.ElseIf(#isEnded#>0){
            Span(Class: text-muted, Body: LangRes(finished))
        }.ElseIf(#isStarted#>0){
            Button(Class: btn btn-link, Page: voting_view, PageParams: "vID=#id#"){
                Span(Class: h4, Body: Em(Class: fa icon-eye))
            }
        }.Else{
            Span(Class: text-warning, Body: LangRes(waiting))
        }
    }
}.Custom(_actions){
    Div(text-right){
        If(And(#isStarted#<0,#creator.member_id#==#key_id#)){
            Button(Body: Em(Class: fa fa-trash), Class: btn btn-default, Contract: voting_Delete, Params: "votingID=#id#", Page: voting_list).Alert(Text: $want_delete_voting$, ConfirmButton: $yes$, CancelButton: $no$, Icon: question)
        }
    }
}.Where(#v_Where#).Order(id desc).Columns("id,voting->name,voting->type,voting->type_decision,voting->type_participants,flags->success,flags->decision,progress->percent_success,creator->member_id,creator->member_name,date_started,date_ended,deleted")

If(comment=="create voting work good"){
    AddToolButton(Title: $create$, Page: voting_create, Icon: icon-plus)
}
Div(content-wrapper){
    Form(panel panel-primary){
        Div(panel-body){
            Div(row){
                Div(col-md-12){
                    Div(input-group){
                        Div(input-group-addon){
                            LangRes(name)
                        }
                        Input(Name: Search, Value: #Search#)
                        Div(input-group-btn){
                            Button(Body: Em(Class: fa fa-search), Class: btn btn-default, Page: voting_list, PageParams: "Search=Val(Search)")
                        }
                    }
                }
                Div(col-md-12){
                    Div(table-responsive){
                        Table(src_voting, "$id$=_id,$name$=_name,$type$=_type,$subject_voting$=_subject,$participants$=_participants,$date_start$/$date_end$=_date,$creator$=_creator,$progress$=_progress,$decision$=_decision,$status$=_status,=_actions")
                    }
                }
            }
            If(GetVar(Search)){
                Div(row){
                    Div(col-md-12 mt-lg){
                        Div(text-center){
                            Button(Body: $view_all$, Class: btn btn-default, Page: voting_list)
                        }
                    }
                }
            }
        }
    }
}