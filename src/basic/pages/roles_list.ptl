SetVar(this_page, @1roles_list)
SetVar(pager_table, @1roles).(pager_page, #this_page#).(pager_limit, 25)
Include(@1pager_header)

SetTitle($@1roles$)
Span(Class: ml-sm){
    P(Class: text-muted h6 m0 ml-lg mb, Body: $@1roles_list_desc$)
}
DBFind(@1applications).Where({name:"Basic", ecosystem:1}).Columns("name,id").Vars(application)
AddToolButton(Page: @1roles_create, Icon: icon-plus, Title: $@1create$).Popup(50, $@1new_role$)

If(GetVar(Search)!=""){
    SetVar(pager_where,"{ecosystem:#ecosystem_id#, role_name:{$like:#Search#}}")
}.Else{
    SetVar(pager_where,"{ecosystem:#ecosystem_id#, id:{$neq:0}}").(Search,)
}

DBFind(#pager_table#, src_roles).Count(all_roles)
If(#all_roles#>0){
    Div(list-group-item ml-lg mr-lg pt-lg){
        SetVar(search_name, LangRes(@1role))
        Include(@1search_body2)
    }

    DBFind(#pager_table#, src_roles).Where(#pager_where#).Order({deleted:"1", id:"1"}).Limit(#pager_limit#).Offset(#pager_offset#).Columns("id,role_name,role_type,image_id,creator->member_id,creator->member_name,date_created,date_deleted,deleted,roles_access").Custom(_id){
        If(#deleted# == 0){
            SetVar(style_text,).(style_link,"text-primary")
        }.Else{
            SetVar(style_text,"text-muted").(style_link,"text-muted")
        }
        Span(Class: #style_text#, Body: #id#)
    }.Custom(_creator){
        If(And(#creator.member_name#!=NULL,#creator.member_name#!="")){
            LinkPage(Class: #style_link# text-bold, Page: @1profile_view, PageParams: "v_key_id=#creator.member_id#"){
                #creator.member_name#
            }
        }
    }.Custom(_name){
        LinkPage(Class: #style_link# h5 text-bold, Page: @1roles_view, PageParams: "v_role_id=#id#"){
            If(#image_id#>0){
                Image(Src: Binary().ById(#image_id#), Class: mr-sm).Style(width: 30px; border: 1px solid #5A5D63;)
                #role_name#
            }.Else{
                Div(){
                    Span(Class: fa icon-settings fa-2x mr-sm).(#role_name#)
                }.Style(display:flex; align-items:center;)
            }
        }
    }.Custom(_date){
        Div(#style_text# small){
            Div(text-nowrap){DateTime(DateTime: #date_created#, Format: "DD.MM.YYYY HH:MI")}
            Div(text-nowrap){DateTime(DateTime: #date_deleted#, Format: "DD.MM.YYYY HH:MI")}
        }
    }.Custom(_type){
        Span(Class: #style_text#, Body: AppParam(Ecosystem: 1, App: #application_id#, Name: roles_types, Index: #role_type#))
    }.Custom(_status){
        Span(Class:#style_text#){
            If(#deleted# == 0){
                LangRes(@1active)
            }.Else{
                LangRes(@1deleted)
            }
        }
    }.Custom(_access){
        If(#creator.member_id#==#key_id#){
            SetVar(access,done)
        }.Else{
            SetVar(access,)
        }

        If(And(#roles_access#!="NULL",#roles_access#!="",#roles_access#!="[]")){
            DBFind(@1roles,src_roles_list).Where({id:{"$in":#roles_access#}}).Columns("id,role_name").Count(access_count).Order(role_name)
            Div(#style_text#){
                ForList(src_roles_list){
                    If(And(#role_id#==#id#)){
                        SetVar(access,done)
                    }

                    If(#access_count#!=#src_roles_list_index#){
                        Span("#role_name#,",mr-sm)
                    }.Else{
                        #role_name#
                    }
                }
            }.Style(word-break: break-all;)
        }
    }.Custom(_actions){
        Div(text-right button-group text-nowrap){
            If(#access#=="done"){
                If(And(#deleted#==0,#role_type#!=3)){
                    Button(Class: fa fa-trash btn btn-danger mh-sm, Contract: @1RolesDelete, Params: "ops=D,rid=#id#", Page: @1roles_list).Alert(Text: "$@1sure_want_delete$", ConfirmButton: $@1yes$, CancelButton: $@1no$, Icon: question)
                }.ElseIf(#deleted#==1){
                    Button(Class: fa fa-recycle btn btn-info mh-sm, Contract: @1RolesDelete, Params: "ops=R,rid=#id#", Page: @1roles_list)
                }
                Button(Class: fa fa-edit btn btn-default mh-sm, PageParams: "rid=#id#", Page: @1roles_create).Popup(50, $@1edit_role$)
            }
        }
    }.Count(count)

    Div(fullscreen){
        Div(table-responsive ml-lg mr-lg){
            Div(list-group-item){
                If(#count# > 0){
                    Table(src_roles,"$@1role$=_name,$@1type$=_type,$@1creator$=_creator,$@1role_created_deleted$=_date,$@1status$=_status,$@1roles_access$=_access,=_actions")
                }.Else{
                    Div(Class: text-center h4 text-muted, Body: "$@1roles$ $@1not_founded$")
                }
            }.Style(
                margin-top:-15px;
                tbody > tr:nth-of-type(odd) {
                    background-color: #f8f9fc;
                }
            )
        }
    }
    Div(mt-sm ml-lg mr-sm mb-sm){
        Include(@1pager)
    }
}.Else{
    Div(list-group-item text-center ml-lg mr-lg pt-lg pb-lg){
        Button(Body: $@1install_default_roles$, Class: btn btn-primary, Page: @1roles_list, Contract: @1RolesInstall)
    }
}