SetVar(this_page,"@1ecosystems_list")
DBFind(@1applications).Where({ecosystem:1, name:"Basic"}).Columns("name,id").Vars(application)
SetVar(template_id, AppParam(Ecosystem:1, App:#application_id#, Name: voting_ves_template_id))
DBFind(@1buffer_data).Where({ecosystem:#ecosystem_id#, member_id:#key_id#, key:"metrics"}).Vars(m)
JsonToSource(src_metrics,#m_value#)

If(GetVar(Search)){
    SetVar(pager_where,"{name:{$like:#Search#}, id:{$neq:1}}")
}.Else{
    SetVar(pager_where,"{id:{$neq:1}}").(Search,)
}

Div(fullscreen){
    SetTitle($@1ecosystems$)
    Div(breadcrumb){
        Span(Class: text-muted, Body: $@1ecosystems_list_desc$)
    }
    AddToolButton(Title: $@1update_metrics$, Page: @1ecosystems_metrics_update, Icon: icon-refresh).Popup(Header: $@1update_metrics$, Width: "30")
    AddToolButton(Title: $@1create$, Page: @1ecosystem_new, Icon: icon-plus).Popup(Header: $@1create$, Width: "30")

    Include(@1search_body)
    SetVar(pager_table, @1ecosystems).(pager_page, @1ecosystems_list).(pager_limit, 20)
    Include(@1pager_header)

    DBFind(#pager_table#, src_ecosystems).Limit(#pager_limit#).Where(#pager_where#).Order(id).Offset(#pager_offset#).Custom(_id){
        Span(#id#)
    }.Custom(_name){
        Span(#name#)
    }.Custom(_metrics){
        If(#m_id#>0){
            SetVar(eco_id,#id#)
            ForList(src_metrics){
                If(#key#==#eco_id#){
                    LinkPage(Body: `#value#`, Page: @1sysparams_metrics, PageParams:"Id=#key#")
                }
            }
        }
    }.Custom(_valued){
        If(#template_id#>0){
            If(#is_valued#==0){
                Input(Name: RowId, Type: hidden, Value: #id#)
                Button(Body: $@1start_voting_ves$, Class: btn btn-link, Page: @1voting_list, Contract: @1VotingVesCreate)
            }
        }
        If(#is_valued#==1){
            $@1is_valued$
        }
    }.Custom(_actions){
        SetVar(k_id,)
        DBFind(@1notifications).Where({ecosystem:#ecosystem_id#, "sender->member_id":#key_id#, "page_params->ecosystem_id":#id#, closed:0}).Count(notific_count)
        DBFind(@1keys).Where({id:#key_id#, ecosystem:#id#}).Vars("k")

        If(And(#notific_count#==0,#k_id#=="")){
            Button(Class: btn btn-link pull-right, Body: $@1request_membership$, Contract: @1MembershipRequest, Page: @1ecosystems_list, Params: "ecosystem_num=#id#")
        }
    }.Count(count)

    If(#count# != 0){
        Div(table-responsive){
            Table(src_ecosystems, Columns: "$@1ecosystem_name$=_name,$@1valued$=_valued,$@1metrics$=_metrics,=_actions")
        }.Style(
            tbody > tr:nth-of-type(odd) {
                background-color: #ffffff;
            }
            tbody > tr > td {
                word-break: break-all;
                font-weight: 400;
                font-size: 13px;
                color: #666;
                border-top: 1px solid #eee;
                vertical-align: middle;
            }
            tr > *:first-child {
                padding-left:20px;
            }
            tr > *:last-child {
                padding-right:30px;
                text-align:right;
                width: 100px;
            }
            thead {
                background-color: #f6f7fa;
            }
        )
    }.Else{
        Span(Class: h4 text-center, Body: "$@1ecosystems$ $@1not_founded$")
    }
}
Include(@1pager)