SetVar(this_page,@1notifications_roles_send).(back_page,@1notifications_list)
If(GetVar(TargetEcosystem)==""){
    SetVar(TargetEcosystem,#ecosystem_id#)
}
DBFind(@1applications).Columns("name,id").Where({ecosystem:1, name:"Basic"}).Vars(application)
DBFind(@1ecosystems, ecosystems).Columns("id,name").Count(eco_count)
Form(){
    Div(list-group-item){
        Div(row){
            Div(col-md-3 mt-sm text-right){
                Label(){
                    Span(Body: LangRes(@1ecosystem)).(Class: text-danger, Body:*)
                }
            }
            Div(col-md-9 text-left){
                Select(Name: eco_id, Source: ecosystems, NameColumn: name, ValueColumn: id, Value: #TargetEcosystem#)
            }
        }
    }
    Div(list-group-item){
        Div(row){
            Div(col-md-3 mt-sm text-right){
                Label(){
                    Span(Body: LangRes(@1recipient)).(Class: text-danger, Body:*)
                }
            }
            Div(col-md-9 mb-sm text-left){
                DBFind(@1roles,source_roles).Where({ecosystem:#TargetEcosystem#, deleted:0}).Columns("id,role_name")
                Select(Name: rid, Source: source_roles, NameColumn: role_name, ValueColumn: id)
            }.Hide(eco_id!=#TargetEcosystem#)
            Div(col-md-9 mb-sm text-left){
                Button(Class: btn btn-primary fa fa-recycle, Page: #this_page#, Params: "TargetEcosystem=Val(eco_id)")
            }.Show(eco_id!=#TargetEcosystem#)
        }
        Div(row){
            Div(col-md-3 mt-sm text-right){
                Label(){
                    Span(Body: LangRes(@1closure_type)).(Class: text-danger, Body:*)
                }
            }
            Div(col-md-9 mc-sm text-left){
                AppParam(Ecosystem: 1, App: #application_id#, Name: notification_closure, Source: src_closure_type)
                Select(Name: closure_type, Source: src_closure_type, NameColumn: name, ValueColumn: id)
            }
        }
    }
    Div(list-group-item){
        Div(row){
            Div(col-md-3 mt-sm text-right){
                Label(){
                    Span(Body: LangRes(@1sender)).(Class: text-danger, Body:*)
                }
            }
            Div(col-md-9 mc-sm text-left){
                AppParam(Ecosystem: 1, App: #application_id#, Name: notification_sender, Source: src_sender)
                Select(Name: sender, Source: src_sender, NameColumn: name, ValueColumn: id)
            }
        }
    }
    Div(list-group-item){
        Div(row){
            Div(col-md-3 mt-sm text-right){
                Label(){
                    Span(Body: LangRes(@1icon)).(Class: text-danger, Body:*)
                }
            }
            Div(col-md-9 mb-sm text-left){
                AppParam(Ecosystem: 1, App: #application_id#, Name: notification_icon, Source: src_icon)
                Select(Name: icon_name, Source: src_icon, NameColumn: name, ValueColumn: name)
            }
        }
        Div(row){
            Div(col-md-3 mt-sm text-right){
                Label(){
                    Span(Body: LangRes(@1header)).(Class: text-danger, Body:*)
                }
            }
            Div(col-md-9 mb-sm text-left){
                Input(Name: text_header, Value: "Header text").Validate(minLength:3, maxLength:255)
                InputErr(Name: text_header, minLength: $@1validate_name$, maxLength: $@1validate_role_name$)
            }
        }
        Div(row){
            Div(col-md-3 mt-sm text-right){
                Label(){
                    Span(Body: LangRes(@1body_text))
                }
            }
            Div(col-md-9 mc-sm text-left){
                Input(Name: text_body, Value: "Body text")
            }
        }
    }
    Div(list-group-item){
        Div(row){
            Div(col-md-3 mt-sm text-right){
                Label(){
                    Span(Body: LangRes(@1page)).(Class: text-danger, Body:*)
                }
            }
            Div(col-md-9 mb-sm text-left){
                Input(Name: page_name, Value: "@1notifications_testpage").Validate(minLength:3, maxLength:255)
                InputErr(Name: page_name, minLength: $@1validate_name$, maxLength: $@1validate_role_name$)
            }
        }
        Div(row){
            Div(col-md-3 mt-sm text-right){
                Label(){
                    Span(Body: LangRes(@1params))
                }
            }
            Div(col-md-9 mc-sm text-left){
                Input(Name: params_map, Value: `{"param_int":"10","param_str":"my_string"}`)
            }
        }

    }
    Div(row mt-lg){
        Div(col-md-12){
            Button(Body: LangRes(@1back), Class: btn btn-default, Page: #back_page#, PageParams: "type=1")
            Button(Body: LangRes(@1send), Class: btn btn-primary pull-right, Page: #back_page#, PageParams: "type=1", Contract: @1NotificationsSend, Params: "current_role_id=#role_id#")
        }
    }
}