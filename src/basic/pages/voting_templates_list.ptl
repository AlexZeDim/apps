SetVar(this_page, @1voting_templates_list)
SetVar(pager_table, @1voting_templates).(pager_page, #this_page#).(pager_limit, 25)
Include(@1pager_header)

SetTitle($@1voting_templates$)
Span(Class: ml-sm){
    P(Class: text-muted h6 m0 ml-lg mb){
        LinkPage($@1votings$, @1voting_list)
        Span(Class: mh-sm, Body: /)
        Span($@1voting_templates$, text-muted)
    }
}
DBFind(@1applications).Where({ecosystem:1, name:"Basic"}).Columns("name,id").Vars(application)

If(GetVar(Search)!=""){
    SetVar(pager_where,"{ecosystem:#ecosystem_id#, title:{$like:#Search#}}")
}.Else{
    SetVar(pager_where,"{ecosystem:#ecosystem_id#, id:{$gt:0}}").(Search,)
}

DBFind(@1voting_templates).Count(templates_count)
If(Or(#templates_count#>0,#ecosystem_id#!=1)){
    AddToolButton(Title: $@1create$, Page: @1voting_template_create, Icon: icon-plus).Popup(50, $@1voting_template_create$)

    Div(list-group-item ml-lg mr-lg pt-lg){
        SetVar(search_name, LangRes(@1template))
        Include(@1search_body2)
    }

    DBFind(#pager_table#, src_templates).Where(#pager_where#).Order(id).Limit(#pager_limit#).Offset(#pager_offset#).Custom(_participants){
        AppParam(Ecosystem:1, App:#application_id#, Name:type_voting_participants, Index: #type_participants#)
    }.Custom(_decision){
        AppParam(Ecosystem:1, App:#application_id#, Name:type_voting_decisions, Index: #type_decision#)
    }.Custom(_type){
        AppParam(Ecosystem:1, App:#application_id#, Name:type_voting, Index: #type_voting#)
    }.Custom(_actions){
        Div(text-right){
            Button(Class: btn btn-default fa fa-eye, Page: @1voting_template_start, PageParams: "TemplateId=#id#")
        }
    }.Custom(_contracts){
        If(And(#init_contract#!="",#init_contract#!="NULL")){
            Div(){#init_contract#}
        }
        If(And(#contract_accept#!="",#contract_accept#!="NULL")){
            Div(){#contract_accept#}
        }
        If(And(#contract_reject#!="",#contract_reject#!="NULL")){
            Div(){#contract_reject#}
        }
    }.Custom(_vq){
        #volume#/#quorum#
    }.Custom(_vacancies){
        If(#vacancies#>0){
            #vacancies#
        }
    }.Count(count)

    Div(fullscreen){
        Div(table-responsive ml-lg mr-lg){
            Div(list-group-item){
                If(#count# > 0){
                    Table(Source: src_templates, Columns:"$@1template$=title,$@1voting_subject$=subject,$@1voting_volume$ / $@1voting_quorum$=_vq,$@1voting_type$=_type,$@1participants$=_participants,$@1decision$=_decision,$@1vacancies$=_vacancies,$@1contracts$=_contracts,=_actions")
                }.Else{
                    Div(Class: text-center h4 text-muted, Body: "$@1voting_templates_not_found$")
                }                       
            }.Style(
                margin-top:-15px;
                tbody > tr:nth-of-type(odd) {
                    background-color: #f8f9fc;
                }
            )
        }
    }
    Div(mt-sm ml-lg mr-sm mb-sm){
        Include(@1pager)
    }
}.Else{
    Div(list-group-item text-center ml-lg mr-lg pt-lg pb-lg){
        Form(){
            Data(autofill, "value,description"){
                yes,$@1use_default_voting_templates$
                no,$@1select_default_templates_manually$
            }
            RadioGroup(Name: fill_ids, Source: autofill, NameColumn: description, ValueColumn: value)
            Button(Body: $@1install_default_templates$, Class: btn btn-primary, Page: @1voting_templates_list, Contract: @1VotingTemplatesInstall)
        }
    }
}