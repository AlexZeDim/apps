DBFind(@1applications).Where({ecosystem:1, name:"Basic"}).Columns("id").Vars(application)
SetVar(role_validator, AppParam(Ecosystem:1, App:#application_id#, Name: role_validator))
SetTitle($@1platform_parameters$)
JsonToSource(nodes){
    SysParam(full_nodes)
}
ForList(nodes){
    Div(#key_id#)
}
DBFind(@1system_parameters, src_sysparams).Order(id).Limit(250).Custom(_actions){
    SetVar(sp_id,0)
    DBFind(@1contracts).Where({ecosystem:1, name:#name#}).Columns(id).Vars(sp)
    If(#sp_id#>0){
        LinkPage(Class: fa fa-edit, Page: @1sysparams_voting, PageParams: "param_index=#id#,param_name=#name#")
    }.Else{
        $@1contract_404$
    }
}.Custom(_val){
    Div(){
        #value#
    }.Style(max-width: 500px;overflow: hidden;)
}
Div(){
    Div(breadcrumb){
        Div(Class:text-muted, Body: $@1platform_params_desc$)
    }
    DBFind(@1roles_participants).Where({ecosystem:#ecosystem_id#, "member->member_id":#key_id#, "role->id":#role_validator#, deleted:0}).Columns("id").Vars(validator)
    If(#validator_id#>0){
        AddToolButton(Title: $@1sysparams_validator_resign$, Icon: icon-pin, Page: @1sysparams_validator_resign)
    }
    Div(table-responsive){
        Table(src_sysparams,"$@1name$=name,$@1value$=_val,=_actions")
    }
}.Style(
    tbody > tr:nth-of-type(odd) {
        background-color: #fafbfc;
    }
    tbody > tr > td {
        word-break: break-all;
        font-weight: 400;
        font-size: 13px;
        color: #666;
        border-top: 1px solid #eee;
        vertical-align: middle;
    }
    tr > *:first-child {
        padding-left:20px;
    }
    tr > *:last-child {
        padding-right:30px;
        text-align:right;
        width: 100px;
    }
    thead {
        background-color: #eee;
    }
    table a {
        font-size: 18px;
    }
)