SetVar(this_page, @1poll_list).(this_table, @1voting_templates)
Include(@1pager_header)

SetTitle(Polls Template)
Span(Class: h5 m0 mb ml-lg){
    LinkPage(Class: ml-sm, Body: Polls, Page: @1poll, PageParams: "type=0" )
    Span(Class: text-muted mh, Body: /)
    Span(Class: text-muted, Body: Polls Template)
}.Style(
    display: inline-block;
)

If(GetVar(search)){
    SetVar(where,{ecosystem:#ecosystem_id#, "title":{"$like":#search#}})
}.Else{
    SetVar(where,{ecosystem:#ecosystem_id#, "id":{"$gt":0}, poll:1}).(Search,)
}

Div(list-group-item ml-lg mr-lg pt-lg){
    SetVar(search_name, LangRes(@1template))
    Include(@1search)
}

DBFind(@1applications).Where({ecosystem:1, name:"Basic"}).Columns("name,id").Vars(application)
DBFind(#this_table#).Where({ecosystem:#ecosystem_id#}).Count(all_templates_count)
DBFind(#this_table#, src).Where(#where#).Order({"id": 1}).Limit(#pager_limit#).Offset(#pager_offset#).Custom(_participants){
    AppParam(Ecosystem:1, App:#application_id#, Name:type_voting_participants, Index: #type_participants#)
}.Custom(_decision){
    AppParam(Ecosystem:1, App:#application_id#, Name:type_voting_decisions, Index: #type_decision#)
}.Custom(_type){
    AppParam(Ecosystem:1, App:#application_id#, Name:type_voting, Index: #type_voting#)
}.Custom(_actions){
    Div(text-right){
        Button(Class: btn btn-default fa fa-eye, Page: @1poll_create_start, PageParams: "TemplateId=#id#")
    }
}.Custom(_contracts){
    If(And(#init_contract#!="",#init_contract#!="NULL")){
        Div(){#init_contract#}
    }
    If(And(#contract_accept#!="",#contract_accept#!="NULL")){
        Div(){#contract_accept#}
    }
    If(And(#contract_reject#!="",#contract_reject#!="NULL")){
        Div(){#contract_reject#}
    }
}.Custom(_vq){
    #volume#/#quorum#
}.Custom(_vacancies){
    If(#vacancies#>0){
        #vacancies#
    }
}.Count(count)

If(EcosysParam(Ecosystem:1, Name: role_admin) == #role_id#){
    If(Or(#count#>0,#ecosystem_id#>1,)){
        AddToolButton(Title: Create Poll, Page: @1poll_create, Icon: icon-plus).Popup(40, Create new poll)
    }
}

Div(fullscreen){
    Div(table-responsive ml-lg mr-lg){
        Div(list-group-item){
            If(#count# > 0){
                Table(src, "$@1template$=title,$@1voting_subject$=subject,$@1voting_volume$ / $@1voting_quorum$=_vq,$@1voting_type$=_type,$@1participants$=_participants,$@1decision$=_decision,$@1vacancies$=_vacancies,$@1contracts$=_contracts,=_actions")
            }.ElseIf(#all_templates_count# > 0){
                Div(Class: text-center h4 text-muted, Body: "$@1voting_templates_not_found$")
            }.ElseIf(#ecosystem_id# == 1){
                Form(Class: text-center h6){
                    Data(autofill, "value,description"){
                        yes,$@1use_default_voting_templates$
                        no,$@1select_default_templates_manually$
                    }
                    RadioGroup(Name: fill_ids, Source: autofill, NameColumn: description, ValueColumn: value).Style(line-height: 20px;)
                    Button(Body: $@1install_default_templates$, Class: btn btn-primary, Page: @1voting_templates_list, Contract: @1VotingTemplatesInstall)
                }
            }
        }.Style(
            margin-top:-15px;
            tbody > tr:nth-of-type(odd) {
                background-color: #f8f9fc;
            }
        )
    }
}
Div(mt-sm ml-lg mr-sm mb-sm){
    Include(@1pager)
}