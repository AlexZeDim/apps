contract TokensTransfer {
    data {
        Amount money
        Sender_AccountId int
        Recipient_AccountId int
        Comment string "optional"
    }
    func getPermission() bool {
        var array_permissions array result i int prevContract string
        array_permissions = ["@1TokensSend"]

        prevContract = $stack[0]
        if Len($stack) > 2 {
            prevContract = $stack[Len($stack) - 2]
        }
        while i < Len(array_permissions) {
            var contract_name string
            contract_name = array_permissions[i]
            if contract_name==prevContract {
                result = 1
            }
            i = i + 1
        }

        if result == 0 {
            error LangRes("@1tokens_transfer_cannot_be_made", "en")
        }
        return 0
    }


    conditions {
        //getting permission to run
        getPermission()

        //check amount
        if $Amount == 0 {
            error LangRes("@1amount_zero", "en")
        }
        if $Amount < 0 {
            error LangRes("@1amount_less_zero", "en")
        }

        //check the sender
        if !DBFind("@1keys").Where({ecosystem:$ecosystem_id, id:$Sender_AccountId}).One("id") {
            error Sprintf(LangRes("@1sender_x_invalid", "en"), $Sender_AccountId)
        }

        //check balance
        $sender_balance = Money(DBFind("@1keys").Where({ecosystem:$ecosystem_id, id:$Sender_AccountId}).One("amount"))
        if $Amount > $sender_balance {
            error LangRes("@1amount_less_than_needed", "en")
        }

        //check the recipient
        if !DBFind("@1keys").Where({ecosystem:$ecosystem_id, id:$Recipient_AccountId}).One("id") {
            error Sprintf(LangRes("@1recipient_x_invalid", "en"), $Recipient_AccountId)
        }
    }

    action {
        DBUpdate("@1keys", $Sender_AccountId, {"-amount":$Amount})
        DBUpdate("@1keys", $Recipient_AccountId, {"+amount":$Amount})
        var m map
        m["sender_id"] = $Sender_AccountId
        m["recipient_id"] = $Recipient_AccountId
        m["amount"] = $Amount
        m["comment"] = $Comment
        m["block_id"] = $block
        m["txhash"] = $txhash
        m["ecosystem"] = $ecosystem_id
        DBInsert("@1history", m)
    }
}