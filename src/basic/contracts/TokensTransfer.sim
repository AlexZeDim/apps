contract TokensTransfer {
    data {
        Amount money
        SenderId int
        RecipientId int
        Comment string "optional"
    }

    func getPermission() {
        var array_permissions array result i int prevContract string
        array_permissions = ["@1TokensSend", "@1PoaTokensSend", "@1TokensRefund"]

        prevContract = $stack[0]
        if Len($stack) > 2 {
            prevContract = $stack[Len($stack) - 2]
        }
        if permissions[prevContract] != 1 {
            error LangRes("@1tokens_transfer_cannot_be_made", "en")
        }
    }

    func checkSender() {
        var sender_map map
        sender_map = DBFind("@1keys").Where({ecosystem:$ecosystem_id, id:$SenderId}).Row()

        if !sender_map {
            error Sprintf(LangRes("@1sender_x_invalid", "en"), $SenderId)
        }
        if Int(sender_map["blocked"]) != 0 {
            error LangRes("@1sender_blocked", "en")
        }
        if Int(sender_map["deleted"]) != 0 {
            error LangRes("@1sender_deleted", "en")
        }
        if Money(sender_map["amount"]) < $Amount {
            error LangRes("@1amount_less_than_needed", "en")
        }
    }

    func checkRecipient() {
        var recipient_map map
        recipient_map = DBFind("@1keys").Where({ecosystem:$ecosystem_id, id:$RecipientId}).Row()

        if !recipient_map {
            error Sprintf(LangRes("@1recipient_x_invalid", "en"), $RecipientId)
        }
        if Int(recipient_map["blocked"]) != 0 {
            error LangRes("@1recipient_blocked", "en")
        }
        if Int(recipient_map["deleted"]) != 0 {
            error LangRes("@1recipient_deleted", "en")
        }
    }

    conditions {
        getPermission()   //getting permission to run
        checkSender()     //check the sender
        checkRecipient()  //check the recipient
        
        //check amount
        if $Amount == 0 {
            error LangRes("@1amount_zero", "en")
        }
        if $Amount < 0 {
            error LangRes("@1amount_less_zero", "en")
        }
    }

    action {
        DBUpdate("@1keys", $SenderId, {"-amount": $Amount})
        DBUpdate("@1keys", $RecipientId, {"+amount": $Amount})
        var m map
        m["sender_id"] = $SenderId
        m["recipient_id"] = $RecipientId
        m["amount"] = $Amount
        m["comment"] = $Comment
        m["block_id"] = $block
        m["txhash"] = $txhash
        m["ecosystem"] = $ecosystem_id
        DBInsert("@1history", m)
    }
}