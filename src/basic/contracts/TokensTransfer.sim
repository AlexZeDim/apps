contract TokensTransfer {
    data {
        Amount money
        Sender_AccountId int
        Recipient_AccountId int
        Comment string "optional"
    }
    func checkPermission() {
        var permissions map prevContract string
        permissions = {"@1TokensSend":1, "@1TokensRefund":1, "@1TokensEmissionWithdraw":1}

        prevContract = $stack[0]
        if Len($stack) > 2 {
            prevContract = $stack[Len($stack) - 2]
        }
        if permissions[prevContract] != 1 {
            error LangRes("@1tokens_transfer_cannot_be_made", "en")
        }
    }

    conditions {
        //getting permission to run
        checkPermission()

        //check amount
        if $Amount == 0 {
            error LangRes("@1amount_zero", "en")
        }
        if $Amount < 0 {
            error LangRes("@1amount_less_zero", "en")
        }

        var sender_map map
        sender_map = DBFind("@1keys").Where({ecosystem:$ecosystem_id, id:$Sender_AccountId}).Row()
        var recipient_map map
        recipient_map = DBFind("@1keys").Where({ecosystem:$ecosystem_id, id:$Recipient_AccountId}).Row()

        //check the sender
        if !sender_map {
            error Sprintf(LangRes("@1sender_x_invalid", "en"), $Sender_AccountId)
        }
        if Money(sender_map["amount"]) < $Amount {
            error LangRes("@1amount_less_than_needed", "en")
        }

        //check the recipient
        if !recipient_map {
            error Sprintf(LangRes("@1recipient_x_invalid", "en"), $Recipient_AccountId)
        }
    }

    action {
        DBUpdate("@1keys", $Sender_AccountId, {"-amount": $Amount})
        DBUpdate("@1keys", $Recipient_AccountId, {"+amount": $Amount})
        var m map
        m["sender_id"] = $Sender_AccountId
        m["recipient_id"] = $Recipient_AccountId
        m["amount"] = $Amount
        m["comment"] = $Comment
        m["block_id"] = $block
        m["txhash"] = $txhash
        m["ecosystem"] = $ecosystem_id
        DBInsert("@1history", m)
    }
}