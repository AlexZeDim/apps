contract VotingValidatorInit {
    data {
        KeyId int
    }
    func getAppRoleId(id int, name string, warn bool) int {
        var rid int
        rid = Int(AppParam(id, name, 1))
        if rid == 0 && warn{
            warning Sprintf(LangRes("@1role_not_set_application_parameter", "en"), name)
        }
        return rid
    }

    conditions {
        ContractConditions("MainCondition")

        var appId roleId participant_id int
        appId = Int(DBFind("@1applications").Where({ecosystem:1, name:"Basic"}).Columns("name,id").One("id"))
        roleId = getAppRoleId(appId, "role_validator", true)
        participant_id = Int(DBFind("@1roles_participants").Where({ecosystem:$ecosystem_id, deleted:0, "role->id":roleId, "member->member_id":$KeyId}).One("id"))
        if (participant_id > 0){
            warning LangRes("@1candidate_already_validator", "en")  
        }

        $candidate = DBFind("sysparams_candidate").Where({candidate_key_id:$KeyId, deleted:0}).Row() //no $ecosystem_id
        if !$candidate{
            warning LangRes("@1candidate_not_found", "en")
        }
    }
    
    action {
        @1DelegateRefresh()
    }
}