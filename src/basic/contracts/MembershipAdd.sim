contract MembershipAdd {
    data {
        memberskeys string
    }

    func addPub(pub_key string) {
        if Size(pub_key) < 128 {
            error LangRes("@1key_too_short", "en")
        }
        if Size(pub_key) > 128 {
            error LangRes("@1key_too_long", "en")
        }

        var k_id int
        k_id = PubToID(pub_key)
        if k_id == 0 {
            warning LangRes("@1public_key_invalid", "en")
        }
        $check_user = DBFind("@1keys").Where({id:k_id, ecosystem:$ecosystem_id})
        if $check_user {
            error LangRes("@1key_already_exists", "en")
        }

        DBInsert("@1keys",{id:k_id, pub:pub_key, ecosystem:$ecosystem_id})
    }

    conditions {
        if $memberskeys == "" {
            warning LangRes("@1public_key_empty", "en")
        }
        $memberskeys = Replace($memberskeys, " ", "")
        $memberskeys = Replace($memberskeys, "\n", "")
        $memberskeys = Replace($memberskeys, "\r", "")

        var admin_id int
        admin_id = EcosysParam("role_admin")
       
        if !RoleAccess(Int(admin_id)) {
            warning LangRes("@1access_denied", "en")
        }

        if ($ecosystem_id == 1) {
            error LangRes("@1impossible_for_platform_ecosystem", "en")
        }
    }

    action {
        if Contains($memberskeys, ",") {
            var pub_array array
            pub_array = Split($memberskeys, ",")

            var i int
            while i < Len(pub_array) {
                var pub_key string
                pub_key = Str(pub_array[i])
                addPub(pub_key)
                i = i + 1
            }
        } else {
            addPub($memberskeys)
        }
    }
}