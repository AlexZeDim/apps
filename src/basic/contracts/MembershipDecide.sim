contract MembershipDecide {
    data {
        notific_id int
        Accept int
    }
    
    conditions {
        $request = DBFind("@1notifications").Where({ecosystem:$ecosystem_id, id:$notific_id}).Columns("id,closed,sender->member_id,page_params->ecosystem_id").Row()

        if Int($request["closed"]) == 1 {
            warning LangRes("@1request_processed_already", "en")
        }

        var founder_id ecoId int
        ecoId = Int($request["page_params.ecosystem_id"])
        founder_id = DBFind("@1parameters").Where({name:"founder_account", ecosystem:ecoId}).One("value")

        if founder_id != $key_id {
            warning LangRes("@1ecosystem_not_founder", "en")
        }
    }
    
    action {
        var params map
        params["ecosystem_id"] = $request["page_params.ecosystem_id"]
        if ($Accept == 0){
            params["status"] = 1

            var pub string mid eco_id int
            mid = Int($request["sender.member_id"])
            eco_id = Int($request["page_params.ecosystem_id"])
            pub = DBFind("@1keys").Where({ecosystem:$ecosystem_id, id:mid}).One("pub") 
            DBInsert("@1keys", {id:mid,pub:pub,ecosystem:eco_id})
        }
        else{
            params["status"] = 0
        }

        var icon header body page ecoName ecoId string
        ecoId = $request["page_params.ecosystem_id"]
        ecoName = DBFind("@1ecosystems").Where({id:ecoId}).One("name")
        icon = "icon icon-user-follow"
        header = LangRes("@1request_approved", "en")
        body = Sprintf(LangRes("@1ecosystem_request_approved", "en"), ecoName, ecoId)
        page = "membership_user_view"

        @1NotificationsSend("member_id,sender,icon_name,text_header,text_body,page_name,params_map", $request["sender.member_id"], 1, icon, header, body, page, params)
        @1NotificationsClose("notific_id", $notific_id)
    }
}