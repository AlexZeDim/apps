SetVar(role_admin, EcosysParam(Ecosystem:1, Name: role_admin))
SetTitle($@1single_notifics$)
If(And(#role_id#==#role_admin#,#ecosystem_id#==1)){
    DBFind(@1ecosystems).Count(ecos_count)
    If(#ecos_count#>1){
        AddToolButton(Title: $@1broadcast_send$, Page: @1notifications_broadcast, Icon: icon-plus)
    }
}
AddToolButton(Title: $@1send$, Page: @1notifications_single_send, Icon: icon-plus).Popup(Header: $@1create$, Width: "50")

If(GetVar(Search)){
    SetVar(pager_where,"{ecosystem:#ecosystem_id#, notification->type:1, recipient->member_name:{$like: #Search#}, recipient->member_id:#key_id#}")
}.Else{
    SetVar(pager_where,"{ecosystem:#ecosystem_id#, notification->type:1, recipient->member_id:#key_id#}").(Search,)
}

Include(@1search_body)
SetVar(pager_table, @1notifications).(pager_page, @1notifications_list).(pager_limit, 20)
Include(@1pager_header)

DBFind(#pager_table#, src_notifications).Limit(#pager_limit#).Where(#pager_where#).Order([{closed: "1"},{id: "-1"}]).Offset(#pager_offset#).Columns("id,recipient->member_id,recipient->member_name,recipient->image_id,sender->type,sender->member_id,sender->member_name,sender->role_id,sender->role_name,notification->icon,page_name,page_params,date_created,date_closed,closed").Custom(custom_id){
    If(#closed# == 0){
        SetVar(Name: style_text, Value: "text-normal")
        SetVar(Name: style_link, Value: "text-primary")
    }.Else{
        SetVar(Name: style_text, Value: "text-muted")
        SetVar(Name: style_link, Value: "text-muted")
    }
    Span(Class: #style_text#, Body: #id#)
}.Custom(custom_recipient){
    LinkPage(Class: #style_link# h5 text-bold, Page: @1profile_view, PageParams: "v_key_id=#recipient.member_id#"){
        If(#recipient.image_id#>0){
            Image(Src: Binary().ById(#recipient.image_id#), Class: img-circle).Style(width: 30px; border: 1px solid #5A5D63; margin-right: 10px;)
            Span(#recipient.member_name#)
        }.Else{
            Div(){
                Span(Em(Class: fa icon-user fa-2x)).Style(margin-right:10px;)
                Span(#recipient.member_name#)
            }.Style(display:flex; align-items:center;)
        }
    }
}.Custom(custom_arrow){
    Em(Class: fa fa-long-arrow-right fa-1x #style_text#)
}.Custom(custom_sender){
    If(#sender.type#==1){
        LinkPage(Class: #style_link# h5 text-bold, Page: @1profile_view, PageParams: "v_key_id=#sender.member_id#"){
            Span(Body: #sender.member_name#)
        }
    }
    If(#sender.type#==2){
        LinkPage(Class: #style_link# h5 text-bold, Page: @1roles_view, PageParams: "v_role_id=#sender.role_id#"){
            Span(Body: #sender.role_name#)
        }
    }
}.Custom(custom_icon){
    Em(Class: fa #notification.icon# fa-2x #style_text#)
}.Custom(custom_page){
    LinkPage(Class: #style_link# h5 text-bold, Page: #page_name#, PageParams: "notific_id=#id#"){
        Span(Body: #page_name#)
    }
}.Custom(custom_date){
    Div(Class: #style_text# h6 m0, Body: DateTime(DateTime: #date_created#, Format: "DD.MM.YYYY HH:MI"))
    Div(Class: #style_text# h6 m0, Body: DateTime(DateTime: #date_closed#, Format: "DD.MM.YYYY HH:MI"))
}.Custom(custom_status){
    If(#closed# == 0){
        Span(Class: #style_text#, Body: LangRes(@1active))
    }.Else{
        Span(Class: #style_text#, Body: LangRes(@1closed))
    }
}.Custom(actions){
    Div(pull-right){
        If(#closed# == 0){
            Button(Body: Em(Class: fa fa-trash), Class: btn btn-default, Contract: @1NotificationsClose, Params: "notific_id=#id#", Page: @1notifications_list).Alert(Text: "$@1want_close_notification$", ConfirmButton: $@1yes$, CancelButton: $@1no$, Icon: question)
        }
    }
}.Count(count)

If(#count# != 0){
    Div(table-responsive){
        Table(Source: src_notifications, Columns: "$@1icon$=custom_icon,$@1page$=custom_page,$@1sender$=custom_sender,=custom_arrow,$@1recipient$=custom_recipient,$@1sent$ / $@1closed$=custom_date,$@1status$=custom_status,=actions")
    }.Style(
        tbody > tr:nth-of-type(odd) {
            background-color: #ffffff;
        }
        tbody > tr > td {
            word-break: break-all;
            font-weight: 400;
            font-size: 13px;
            color: #666;
            border-top: 1px solid #eee;
            vertical-align: middle;
        }
        tr > *:first-child {
            padding-left:20px;
        }
        tr > *:last-child {
            padding-right:30px;
            text-align:right;
            width: 100px;
        }
        thead {
            background-color: #f6f7fa;
        }
    )
}.Else{
    Span(Class: h4 text-center, Body: "$@1notifications$ $@1not_founded$")
}