DBFind(applications).Columns("name,id").Where("name='Basic application'").Vars(application)
SetTitle($notifications_broadcast$)
DBFind(ecosystems).Ecosystem(1).Count(ecos_count)
Div(content-wrapper){
    If(And(#role_id#==1,#ecosystem_id#==1,#ecos_count#>1)){
        DBFind(roles,src_roles).Ecosystem(2).Where("role_type=3").Columns("id,role_name")
        Form(panel panel-primary){
            Div(panel-body){
                Div(row mt){
                    Div(col-sm-4 mt text-right){
                        LangRes(message_header)
                    }
                    Div(col-sm-8){
                        Input(Name: Header, Type: textarea)
                    }
                }
                Div(row mt){
                    Div(col-sm-4 mt text-right){
                        LangRes(message_body)
                    }
                    Div(col-sm-8){
                        Input(Name: Body, Type: textarea)
                    }
                }
                Div(row mt){
                    Div(col-sm-4 mt text-right){
                        LangRes(message_role)
                    }
                    Div(col-sm-8){
                        Select(Name: RoleId, Source: src_roles, NameColumn: role_name, ValueColumn: id)
                    }
                }
            }
            Div(panel-footer text-left){
                Button(Body: LangRes(cancel), Class: btn btn-default, Page: notifications_list)
                Button(Body: LangRes(send), Class: btn btn-primary pull-right, Contract: @1NotificationsBroadcast, Params: "notific_id=#notific_id#", Page: notifications_list)
            }
        }
    }.Else{
        Div(col-sm-12 alert alert-warning text-center){
            If(#role_id#!=1){
                LangRes(only_admin_action)
            }
            If(#ecosystem_id#!=1){
                LangRes(only_first_ecosystem_action)
            }
            If(#ecos_count#==1){
                LangRes(not_more_ecosystems)
            }
        }
    }
}