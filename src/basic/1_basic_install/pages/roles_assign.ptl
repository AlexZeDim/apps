DBFind(Name:applications, Source:src_app).Columns("name,id").Where("name='Basic application'").Vars(app)
Div(content-wrapper){
    
    If(#v_role_id# > 0){
        DBFind(Name: roles, Source: src_roles).Columns("id,role_name,role_type").Where("id=#v_role_id#").Vars(prefix)
        
        SetTitle($assign$)
        Div(breadcrumb){
            LinkPage($roles$, roles_list)
            Span(/).Style(margin-right: 10px; margin-left: 10px;)
            LinkPage(#prefix_role_name#, roles_view,, "v_role_id=#v_role_id#")
            Span(/).Style(margin-right: 10px; margin-left: 10px;)
            Span(Class: text-muted, Body: $assign$)
        }
        
        Div(row){
            Div(col-md-6 col-md-offset-3){
                Form(panel panel-primary){
                    Div(panel-heading){LangRes(assign)}
                    Div(panel-body){
                        Div(list-group-item){
                            Div(row){
                                Div(col-md-3 mt-sm text-right){
                                    Label(){
                                        Span(Body: LangRes(role))
                                        Span(Class: text-danger, Body:*)
                                    }
                                }
                                Div(col-md-9 mb-sm text-left){
                                    Input(Type: hidden, Name: rid, Value: #prefix_id#)
                                    SetVar(Name: var_prefix_role_name, Value: LangRes(#prefix_role_name#))
                                    Input(Name: input_prefix_role_name, Value: #var_prefix_role_name#, Disabled: true)
                                }
                            }
                            Div(row){
                                Div(col-md-3 mt-sm text-right){
                                    Label(){
                                        Span(Body: LangRes(type)).(Class: text-danger, Body:*)
                                    }
                                }
                                Div(col-md-9 mb-sm text-left){
                                    SetVar(Name: var_prefix_role_type, Value: AppParam(App:#app_id#, Name: roles_types, Index: #prefix_role_type#))
                                    Input(Name: input_prefix_role_type, Value: #var_prefix_role_type#, Disabled: true)
                                    If(#prefix_role_type# != 1){
                                        P(Class: m0 text-danger h6, Body: LangRes(appointment_impossible))
                                    }
                                }
                            }
                            If(#prefix_role_type# == 1){
                                Div(row){
                                    Div(col-md-3 mt-sm text-right){
                                        Label(){
                                            Span(Body: LangRes(member)).(Class: text-danger, Body:*)
                                        }
                                    }
                                    Div(col-md-9 text-left){
                                        DBFind(Name: members, Source: source_members).Columns("id,member_name").Custom(custom_username){
                                            #member_name# (Address(#id#) )
                                        }
                                        Select(Name: member_id, Source: source_members, NameColumn: custom_username, ValueColumn: id)
                                    }
                                }
                            }
                        }
                    }
                    Div(panel-footer text-right){
                        Button(Body: LangRes(back), Class: btn btn-default, Page: roles_view, PageParams: "v_role_id=#v_role_id#")
                        If(#prefix_role_type# == 1){
                            Button(Body: LangRes(assign), Class: btn btn-primary, Page: roles_view, PageParams: "v_role_id=#v_role_id#", Contract: Roles_Assign, Params: "member_id=Val(member_id)").Alert(Text: $want_assign_member_to_role$, ConfirmButton: $yes$, CancelButton: $no$, Icon: question)
                        }
                    }
                }
            }
        }
    }.Else{
        Div(md-12 alert alert-danger text-center){
            Span(Body: LangRes(attention))
        }
    }
}