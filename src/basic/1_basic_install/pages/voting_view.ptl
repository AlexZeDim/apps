DBFind(Name:applications, Source:src_app).Columns("name,id").Where("name='Basic application'").Vars(app)
Div(content-wrapper){
    If(#notific_id#>0){
        DBFind(Name: notifications, Source: src_notifications).Where("id=#notific_id#").Columns("page_params->voting_id").Vars(notific)
        SetVar(Name: vID, Value: #notific_page_params_voting_id#)
    }
    
    If(#vID# > 0){
        DBFind(Name: votings, Source: src_voting).Columns("id,voting->name,voting->volume,voting->quorum,voting->type,voting->type_decision,voting->description,optional->role_id,optional->role_vacancies,optional->number_candidates,optional->contract_accept,optional->contract_reject,progress->number_participants,progress->number_voters,progress->percent_success,progress->percent_voters,flags->success,flags->full_data,flags->decision,flags->notifics,date_started,date_ended").Where("id=#vID#").Vars(instance)
        
        SetTitle(#instance_voting_name#)
        Div(breadcrumb){
            LinkPage($voting$, voting_list)
            Span(/).Style(margin-right: 10px; margin-left: 10px;)
            Span(Class: text-muted, Body: #instance_voting_name#)
        }
        
        SetVar(Name: vDateNow, Value: Now("YYYY-MM-DD HH:MI"))
        SetVar(Name: vStartDate, Value: DateTime(DateTime: #instance_date_started#, Format: "YYYY-MM-DD HH:MI"))
        SetVar(Name: vEndDate, Value: DateTime(#instance_date_ended#, "YYYY-MM-DD HH:MI"))
        SetVar(Name: vCmpStartDate, Value: CmpTime(#vStartDate#,#vDateNow#))
        SetVar(Name: vCmpEndDate, Value: CmpTime(#vEndDate#,#vDateNow#))
        
        DBFind(Name: votings_participants, Source: src_check).Columns("id").Where("voting_id=#vID# and member->member_id='#key_id#' and decision=0").Vars(participant)
        If(And(#vCmpStartDate#<0,#vCmpEndDate#>0,#instance_flags_full_data#==1,#instance_flags_decision#==0,#participant_id#>0)){
            SetVar(Name: vOpportunityVote, Value: 1)
        }.Else{
            SetVar(Name: vOpportunityVote, Value: 0)
        }
        
        Div(row){
            Div(col-lg-10 col-lg-offset-1){
                Form(panel panel-default){
                    Input(Type: hidden, Name: votingID, Value: #vID#)
                    
                    Div(list-group-item text-center){
                        P(Class: h3 text-bold m0, Body: #instance_voting_name#)
                        Div(row){
                            Div(col-md-12 mt-sm){
                                P(Class: h5 text-muted m0, Body: AppParam(App:#app_id#, Name: type_voting_decisions, Index: #instance_voting_type_decision#))
                            }
                        }
                        Div(row){
                            Div(col-md-6 mt-sm text-right){
                                P(Class: h5 text-muted m0, Body: LangRes(description))
                            }
                            Div(col-md-6 mt-sm text-left){
                                P(Class: h5 text-muted m0, Body: #instance_voting_description#)
                            }
                        }
                    }
                    
                    Div(list-group-item text-center){
                        Div(row){
                            Div(col-md-6 mt-sm text-right){
                                P(Class: h4 text-normal m0, Body: LangRes(type))
                            }
                            Div(col-md-6 mt-sm text-left){
                                P(Class: h4 text-normal m0, Body: AppParam(App:#app_id#, Name: type_voting, Index: #instance_voting_type#))
                            }
                        }
                        If(Or(#instance_voting_type_decision#==1,#instance_voting_type_decision#==2,#instance_voting_type_decision#==3,#instance_voting_type_decision#==4)){
                            Div(row){
                                Div(col-md-6 mt-sm text-right){
                                    P(Class: h4 text-normal m0, Body: LangRes(contract_accept))
                                }
                                Div(col-md-6 mt-sm text-left){
                                    If(#instance_optional_contract_accept# == ""){
                                        P(Class: h4 text-muted m0, Body: LangRes(optional))
                                    }.Else{
                                        P(Class: h4 text-normal m0, Body: #instance_optional_contract_accept#)
                                    }
                                }
                            }
                            Div(row){
                                Div(col-md-6 mt-sm text-right){
                                    P(Class: h4 text-normal m0, Body: LangRes(contract_reject))
                                }
                                Div(col-md-6 mt-sm text-left){
                                    If(#instance_optional_contract_reject# == ""){
                                        P(Class: h4 text-muted m0, Body: LangRes(optional))
                                    }.Else{
                                        P(Class: h4 text-normal m0, Body: #instance_optional_contract_reject#)
                                    }
                                }
                            }
                        }
                        Div(row){
                            Div(col-md-6 mt-sm text-right){
                                P(Class: h4 text-normal m0, Body: LangRes(filled))
                            }
                            Div(col-md-6 mt-sm text-left){
                                If(#instance_flags_full_data# == 1){
                                    P(Class: h4 text-success m0, Body: LangRes(yes))
                                }.Else{
                                    P(Class: h4 text-danger m0, Body: LangRes(no))
                                }
                            }
                        }
                        If(Or(#instance_voting_type_decision#==1,#instance_voting_type_decision#==2)){
                            Div(row){
                                Div(col-md-6 mt-sm text-right){
                                    P(Class: h5 text-normal m0){
                                        Span(Body: LangRes(role))
                                        Span(Class: text-danger, Body:*)
                                    }
                                }
                                Div(col-md-6 mt-sm text-left){
                                    If(#instance_optional_role_id# > 0){
                                        DBFind(Name: roles, Source: src_roles).Columns("id,role_name").Where("id=#instance_optional_role_id#").Vars(prefix)
                                        P(Class: h5 text-normal m0, Body: #prefix_role_name# (LangRes(id): #prefix_id#))
                                    }.Else{
                                        P(Class: h5 text-danger m0, Body: LangRes(empty))
                                    }
                                }
                            }
                            Div(row){
                                Div(col-md-6 mt-sm text-right){
                                    P(Class: h5 text-normal m0){
                                        Span(Body: LangRes(vacancies))
                                        Span(Class: text-danger, Body:*)
                                    }
                                }
                                Div(col-md-6 mt-sm text-left){
                                    If(#instance_optional_role_vacancies# > 0){
                                        P(Class: h5 text-normal m0, Body: #instance_optional_role_vacancies#)
                                    }.Else{
                                        P(Class: h5 text-danger m0, Body: #instance_optional_role_vacancies#)
                                    }
                                }
                            }
                            Div(row){
                                Div(col-md-6 mt-sm text-right){
                                    P(Class: h5 text-normal m0){
                                        Span(Body: LangRes(candidates))
                                        Span(Class: text-danger, Body:*)
                                    }
                                }
                                Div(col-md-6 mt-sm text-left){
                                    If(#instance_optional_number_candidates# > 0){
                                        P(Class: h5 text-normal m0, Body: #instance_optional_number_candidates#)
                                    }.Else{
                                        P(Class: h5 text-danger m0, Body: #instance_optional_number_candidates#)
                                    }
                                }
                            }
                            Div(row){
                                Div(col-sm-8 col-sm-offset-2 col-lg-8 col-lg-offset-2){
                                    DBFind(Name: votings_subject, Source: src_voting_subject).Columns("id,subject->member_id,subject->member_name").Where("voting_id=#vID#").Custom(custom_address){
                                        Span(Class: h6, Body: Address(#subject.member_id#))
                                    }.Custom(custom_member){
                                        LinkPage(Class: text-primary h5 text-bold, Page: profile_view, PageParams: "v_member_id=#subject.member_id#"){
                                            Span(Body: #subject.member_name#)
                                        }
                                    }.Custom(custom_voting){
                                        If(#vOpportunityVote#==1){
                                            Button(Body: LangRes(vote), Class: btn btn-success, Page: voting_view, PageParams: "vID=#vID#", Contract: voting_AcceptCandidates, Params: "candidateID=#subject.member_id#")
                                        }
                                    }.Order("id")
                                    Table(src_voting_subject, "=custom_member,=custom_address,=custom_voting")
                                }
                            }
                            Div(row){
                                Div(col-md-12 mt-sm){
                                    If(And(#vCmpStartDate#>0,#instance_voting_type#==1)){
                                        If(#instance_voting_type_decision#==1){
                                            Button(Class: btn btn-link, Page: voting_decision_candidates, PageParams: "vID=#vID#"){
                                                Span(Class: h5 text-bold, Body: LangRes(subject_voting_edit))
                                            }
                                        }
                                        If(#instance_voting_type_decision#==2){
                                            Button(Class: btn btn-link, Page: voting_decision_election, PageParams: "vID=#vID#"){
                                                Span(Class: h5 text-bold, Body: LangRes(subject_voting_edit))
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        If(#instance_voting_type_decision#==3){
                            DBFind(Name: votings_subject, Source: src_voting_subject).Columns("id,subject->text,subject->hash").Where("voting_id=#vID#").Vars(subject)
                            Div(row){
                                Div(col-sm-8 col-sm-offset-2 col-lg-8 col-lg-offset-2 mt-lg){
                                    Div(list-group-item){
                                        If(#subject_id# > 0){
                                            P(Class: h5 text-normal m0, Body: #subject_subject_text#)
                                        }.Else{
                                            P(Class: h5 text-danger m0, Body: LangRes(empty))
                                        }
                                    }
                                    Div(list-group-item){
                                        If(#subject_id# > 0){
                                            P(Class: h6 text-muted m0, Body: Hash: #subject_subject_hash#)
                                        }.Else{
                                            P(Class: h6 text-muted m0, Body: Hash: LangRes(empty))
                                        }
                                    }
                                }
                            }
                            Div(row){
                                Div(col-md-12 mt-sm){
                                    If(And(#vCmpStartDate#>0,#instance_voting_type#==1)){
                                        Button(Class: btn btn-link, Page: voting_decision_document, PageParams: "vID=#vID#"){
                                            Span(Class: h5 text-bold, Body: LangRes(subject_voting_edit))
                                        }
                                    }
                                }
                            }
                            Div(row){
                                Div(col-sm-8 col-sm-offset-2 col-lg-8 col-lg-offset-2){
                                    If(#vOpportunityVote#==1){
                                        Div(pull-left){
                                            Button(Body: LangRes(reject), Class: btn btn-danger, Contract: voting_RejectDecision, PageParams: "vID=#vID#", Page: voting_view)
                                        }
                                        Div(pull-right){
                                            Button(Body: LangRes(accept), Class: btn btn-success, Contract: voting_AcceptDecision, PageParams: "vID=#vID#", Page: voting_view)
                                        }
                                    }
                                }
                            }
                        }
                        If(#instance_voting_type_decision#==4){
                            DBFind(Name: votings_subject, Source: src_voting_subject).Columns("id,subject->description,subject->table,subject->table_id,subject->column,subject->column_value").Where("voting_id=#vID#").Vars(subject)
                            Div(row){
                                Div(col-md-6 mt-sm text-right){
                                    P(Class: h5 text-normal m0){
                                        Span(Body: LangRes(table_to_written))
                                        Span(Class: text-danger, Body:*)
                                    }
                                }
                                Div(col-md-6 mt-sm text-left){
                                    If(#subject_id# > 0){
                                        P(Class: h5 text-normal m0, Body: #subject_subject_table#)
                                    }.Else{
                                        P(Class: h5 text-danger m0, Body: LangRes(empty))
                                    }
                                }
                            }
                            If(#instance_voting_type#==1){
                                Div(row){
                                    Div(col-md-6 mt-sm text-right){
                                        P(Class: h5 text-normal m0){
                                            Span(Body: LangRes(row_id))
                                            Span(Class: text-danger, Body:*)
                                        }
                                    }
                                    Div(col-md-6 mt-sm text-left){
                                        If(#subject_id# > 0){
                                            P(Class: h5 text-normal m0, Body: #subject_subject_table_id#)
                                        }.Else{
                                            P(Class: h5 text-danger m0, Body: LangRes(empty))
                                        }
                                    }
                                }
                            }
                            Div(row){
                                Div(col-md-6 mt-sm text-right){
                                    P(Class: h5 text-normal m0){
                                        If(#instance_voting_type#==1){
                                            Span(Body: LangRes(column_name))
                                        }.Else{
                                            Span(Body: LangRes(parameter_name))
                                        }
                                        Span(Class: text-danger, Body:*)
                                    }
                                }
                                Div(col-md-6 mt-sm text-left){
                                    If(#subject_id# > 0){
                                        P(Class: h5 text-normal m0, Body: #subject_subject_column#)
                                    }.Else{
                                        P(Class: h5 text-danger m0, Body: LangRes(empty))
                                    }
                                }
                            }
                            Div(row){
                                Div(col-md-6 mt-sm text-right){
                                    P(Class: h5 text-normal m0){
                                        Span(Body: LangRes(written_value))
                                        Span(Class: text-danger, Body:*)
                                    }
                                }
                                Div(col-md-6 mt-sm text-left){
                                    If(#subject_id# > 0){
                                        P(Class: h5 text-normal m0, Body: #subject_subject_column_value#)
                                    }.Else{
                                        P(Class: h5 text-danger m0, Body: LangRes(empty))
                                    }
                                }
                            }
                            Div(row){
                                Div(col-md-6 mt-sm text-right){
                                    P(Class: h5 text-normal m0){
                                        Span(Body: LangRes(description))
                                    }
                                }
                                Div(col-md-6 mt-sm text-left){
                                    If(#subject_id# > 0){
                                        If(#subject_subject_description# == ""){
                                            P(Class: h5 text-muted m0, Body: LangRes(optional))
                                        }.Else{
                                            P(Class: h5 text-normal m0, Body: #subject_subject_description#)
                                        }
                                    }.Else{
                                        P(Class: h5 text-danger m0, Body: LangRes(empty))
                                    }
                                }
                            }
                            Div(row){
                                Div(col-md-12 mt-sm){
                                    If(And(#vCmpStartDate#>0,#instance_voting_type#==1)){
                                        Button(Class: btn btn-link, Page: voting_decision_formal, PageParams: "vID=#vID#"){
                                            Span(Class: h5 text-bold, Body: LangRes(subject_voting_edit))
                                        }
                                    }
                                }
                            }
                            Div(row){
                                Div(col-sm-8 col-sm-offset-2 col-lg-8 col-lg-offset-2){
                                    If(#vOpportunityVote#==1){
                                        Div(pull-left){
                                            Button(Body: LangRes(reject), Class: btn btn-danger, Contract: voting_RejectDecision, PageParams: "vID=#vID#", Page: voting_view)
                                        }
                                        Div(pull-right){
                                            Button(Body: LangRes(accept), Class: btn btn-success, Contract: voting_AcceptDecision, PageParams: "vID=#vID#", Page: voting_view)
                                        }
                                    }
                                }
                            }
                        }
                        If(#instance_voting_type_decision#==5){
                            DBFind(Name: votings_subject, Source: src_voting_subject).Columns("id,subject->contract_accept,subject->contract_reject").Where("voting_id=#vID#").Vars(subject)
                            Div(row){
                                Div(col-md-6 mt-sm text-right){
                                    P(Class: h5 text-normal m0){
                                        Span(Body: LangRes(contract_accept))
                                        Span(Class: text-danger, Body:*)
                                    }
                                }
                                Div(col-md-6 mt-sm text-left){
                                    If(#subject_id# > 0){
                                        P(Class: h5 text-normal m0, Body: #subject_subject_contract_accept#)
                                    }.Else{
                                        P(Class: h5 text-danger m0, Body: LangRes(empty))
                                    }
                                }
                            }
                            Div(row){
                                Div(col-md-6 mt-sm text-right){
                                    P(Class: h5 text-normal m0){
                                        Span(Body: LangRes(contract_reject))
                                        Span(Class: text-danger, Body:*)
                                    }
                                }
                                Div(col-md-6 mt-sm text-left){
                                    If(#subject_id# > 0){
                                        P(Class: h5 text-normal m0, Body: #subject_subject_contract_reject#)
                                    }.Else{
                                        P(Class: h5 text-danger m0, Body: LangRes(empty))
                                    }
                                }
                            }
                            Div(row){
                                Div(col-md-12 mt-sm){
                                    If(And(#vCmpStartDate#>0,#instance_voting_type#==1)){
                                        Button(Class: btn btn-link, Page: voting_decision_contract, PageParams: "vID=#vID#"){
                                            Span(Class: h5 text-bold, Body: LangRes(subject_voting_edit))
                                        }
                                    }
                                }
                            }
                            Div(row){
                                Div(col-sm-8 col-sm-offset-2 col-lg-8 col-lg-offset-2){
                                    If(#vOpportunityVote#==1){
                                        Div(pull-left){
                                            Button(Body: LangRes(reject), Class: btn btn-danger, Contract: voting_RejectDecision, PageParams: "vID=#vID#", Page: voting_view)
                                        }
                                        Div(pull-right){
                                            Button(Body: LangRes(accept), Class: btn btn-success, Contract: voting_AcceptDecision, PageParams: "vID=#vID#", Page: voting_view)
                                        }
                                    }
                                }
                            }
                        }
                    }
                    
                    Div(list-group-item text-center){
                        Div(row){
                            Div(col-md-6 mt-sm text-right){
                                P(Class: h5 text-normal m0, Body: LangRes(status))
                            }
                            Div(col-md-6 mt-sm text-left){
                                If(#instance_flags_success#==1){
                                    P(Class: h5 text-success m0, Body: LangRes(success))
                                }.Else{
                                    If(#vCmpEndDate#<0){
                                        P(Class: h5 text-muted m0, Body: LangRes(finished))
                                    }.Else{
                                        If(#vCmpStartDate#<0){
                                            P(Class: h5 text-success m0, Body: LangRes(started))
                                        }.Else{
                                            P(Class: h5 text-warning m0, Body: LangRes(waiting))
                                        }
                                    }
                                }
                            }
                        }
                        Div(row){
                            Div(col-md-6 mt-sm text-right){
                                P(Class: h5 text-normal m0, Body: LangRes(notifications))
                            }
                            Div(col-md-6 mt-sm text-left){
                                If(#instance_flags_notifics#==1){
                                    P(Class: h5 text-normal m0, Body: LangRes(yes))
                                }.Else{
                                    P(Class: h5 text-normal m0, Body: LangRes(no))
                                }
                            }
                        }
                        Div(row){
                            Div(col-md-6 mt-sm text-right){
                                P(Class: h5 text-normal m0, Body: LangRes(decision))
                            }
                            Div(col-md-6 mt-sm text-left){
                                If(#instance_flags_decision#==-2){
                                    P(Class: h5 text-normal m0, Body: LangRes(not_enough_votes))
                                }
                                If(#instance_flags_decision#==-1){
                                    P(Class: h5 text-danger m0, Body: LangRes(rejected))
                                }
                                If(#instance_flags_decision#==0){
                                    P(Class: h5 text-normal m0, Body: LangRes(no))
                                }
                                If(#instance_flags_decision#==1){
                                    P(Class: h5 text-success m0, Body: LangRes(accepted))
                                }
                            }
                        }
                        Div(row){
                            Div(col-md-6 mt-sm text-right){
                                P(Class: h5 text-normal m0, Body: LangRes(date_start))
                            }
                            Div(col-md-6 mt-sm text-left){
                                If(#vCmpStartDate#<0){
                                    P(Class: h5 text-muted m0, Body: DateTime(DateTime: #instance_date_started#, Format: "DD.MM.YYYY HH:MI"))
                                }.Else{
                                    P(Class: h5 text-normal m0, Body: DateTime(DateTime: #instance_date_started#, Format: "DD.MM.YYYY HH:MI"))
                                }
                            }
                        }
                        Div(row){
                            Div(col-md-6 mt-sm text-right){
                                P(Class: h5 text-normal m0, Body: LangRes(date_end))
                            }
                            Div(col-md-6 mt-sm text-left){
                                If(#vCmpEndDate#<0){
                                    P(Class: h5 text-muted m0, Body: DateTime(DateTime: #instance_date_ended#, Format: "DD.MM.YYYY HH:MI"))
                                }.Else{
                                    P(Class: h5 text-normal m0, Body: DateTime(DateTime: #instance_date_ended#, Format: "DD.MM.YYYY HH:MI"))
                                }
                            }
                        }
                        Div(row){
                            Div(col-md-6 mt-sm text-right){
                                P(Class: h5 text-normal m0, Body: LangRes(voting_volume))
                            }
                            Div(col-md-6 mt-sm text-left){
                                P(Class: h5 text-normal m0, Body: #instance_voting_volume#)
                            }
                        }
                        Div(row){
                            Div(col-md-6 mt-sm text-right){
                                P(Class: h5 text-normal m0, Body: LangRes(voting_quorum))
                            }
                            Div(col-md-6 mt-sm text-left){
                                P(Class: h5 text-normal m0, Body: #instance_voting_quorum#)
                            }
                        }
                        Div(row){
                            Div(col-md-6 mt-sm text-right){
                                P(Class: h5 text-normal m0){
                                    Span(Body: LangRes(participants))
                                    Span(Class: text-danger, Body:*)
                                }
                            }
                            Div(col-md-6 mt-sm text-left){
                                If(#instance_progress_number_participants# > 0){
                                    P(Class: h5 text-normal m0, Body: #instance_progress_number_participants#)
                                }.Else{
                                    P(Class: h5 text-danger m0, Body: #instance_progress_number_participants#)
                                }
                            }
                        }
                        Div(row){
                            Div(col-sm-8 col-sm-offset-2 col-lg-8 col-lg-offset-2){
                                DBFind(Name: votings_participants, Source: src_voting_participants).Columns("id,member->member_id,member->member_name,decision_date,decision").Where("voting_id=#vID#").Custom(custom_address){
                                    P(Class: h6 m0, Body: Address(#member.member_id#))
                                }.Custom(custom_member){
                                    LinkPage(Class: text-primary h5 text-bold, Page: profile_view, PageParams: "v_member_id=#member.member_id#"){
                                        Span(Body: #member.member_name#)
                                    }
                                }.Custom(custom_decision){
                                    
                                    If(Or(#instance_voting_type_decision#==1,#instance_voting_type_decision#==2)){
                                        If(#decision#==0){
                                            P(Class: h6 m0, Body: LangRes(did_not_vote))
                                        }.Else{
                                            P(Class: text-success text-center h6 m0, Body: $vote_for_candidate$:)
                                            P(Class: text-success text-center h6 m0, Body: Address(#decision#) )
                                            P(Class: text-success text-center h6 m0, Body: $at$ DateTime(DateTime: #decision_date#, Format: "DD.MM.YYYY HH:MI"))
                                        }
                                    }
                                    If(#instance_voting_type_decision#==3){
                                        If(#decision#==0){
                                            P(Class: h6 m0, Body: LangRes(did_not_vote))
                                        }
                                        If(#decision#==1){
                                            P(Class: text-success h6 m0, Body: $document_accept$ $at$ DateTime(DateTime: #decision_date#, Format: "DD.MM.YYYY HH:MI"))
                                        }
                                        If(#decision#==-1){
                                            P(Class: text-danger h6 m0, Body: $document_reject$ $at$ DateTime(DateTime: #decision_date#, Format: "DD.MM.YYYY HH:MI"))
                                        }
                                    }
                                    If(#instance_voting_type_decision#==4){
                                        If(#decision#==0){
                                            P(Class: h6 m0, Body: LangRes(did_not_vote))
                                        }
                                        If(#decision#==1){
                                            P(Class: text-success h6 m0, Body: $decision_accept$ $at$ DateTime(DateTime: #decision_date#, Format: "DD.MM.YYYY HH:MI"))
                                        }
                                        If(#decision#==-1){
                                            P(Class: text-danger h6 m0, Body: $decision_reject$ $at$ DateTime(DateTime: #decision_date#, Format: "DD.MM.YYYY HH:MI"))
                                        }
                                    }
                                    If(#instance_voting_type_decision#==5){
                                        If(#decision#==0){
                                            P(Class: h6 m0, Body: LangRes(did_not_vote))
                                        }
                                        If(#decision#==1){
                                            P(Class: text-success h6 m0, Body: $contract_accepted$ $at$ DateTime(DateTime: #decision_date#, Format: "DD.MM.YYYY HH:MI"))
                                        }
                                        If(#decision#==-1){
                                            P(Class: text-danger h6 m0, Body: $contract_rejected$ $at$ DateTime(DateTime: #decision_date#, Format: "DD.MM.YYYY HH:MI"))
                                        }
                                    }
                                }.Order("id")
                                Table(src_voting_participants, "=custom_member,=custom_decision")
                            }
                        }
                        Div(row){
                            Div(col-md-12 mt-sm){
                                If(And(#vCmpStartDate#>0,#instance_voting_type#==1)){
                                    Button(Class: btn btn-link, Page: voting_invite, PageParams: "vID=#vID#"){
                                        Span(Class: h5 text-bold, Body: LangRes(participants_add))
                                    }
                                }
                            }
                        }
                    }
                    
                    Div(list-group-item text-center){
                        Div(row){
                            Div(col-md-1 mt-sm)
                            Div(col-md-5 mt-sm text-center){
                                P(Class: h4 text-normal m0, Body: LangRes(voted))
                            }
                            Div(col-md-5 mt-sm text-center){
                                P(Class: h4 text-normal m0, Body: LangRes(progress))
                            }
                            Div(col-md-1 mt-sm)
                        }
                        Div(row){
                            Div(col-md-1 mt-sm)
                            Div(col-md-5 mt-sm text-center){
                                P(Class: h6 text-muted m0, Body: LangRes(voting_graph_voted))
                            }
                            Div(col-md-5 mt-sm text-center){
                                P(Class: h6 text-muted m0, Body: LangRes(voting_graph_progress))
                            }
                            Div(col-md-1 mt-sm)
                        }
                        Div(row){
                            Div(col-md-1 mt-sm)
                            Div(col-md-5 mt-sm text-center){
                                P(Class: h3 text-normal m0, Body: #instance_progress_number_voters# / #instance_progress_percent_voters#)
                            }
                            Div(col-md-5 mt-sm text-center){
                                P(Class: h3 text-normal m0, Body: #instance_progress_percent_success# / 100)
                            }
                            Div(col-md-1 mt-sm)
                        }
                    }
                }
            }
        }
    }.Else{
        Div(md-12 alert alert-danger text-center){
            Span(Body: LangRes(attention))
        }
    }
}