contract tests_voting_Create{
    data{}

    action{
        var volume quorum vacancies int SUBJ voters candidates INIT ACCEPT PARAMS REJECT CANDIDATE VOTER string
        volume = 50
        quorum = 51
        vacancies = 1

        SUBJ = "voting template subject"
        INIT = "tests_voting_Init"
        ACCEPT = "tests_voting_Accept"
        REJECT = "tests_voting_Reject"
        CANDIDATE = "Testing Elective role"
        VOTER = "Testing Voter role"

        candidates = DBFind("roles").Where("role_name=? and deleted=0", CANDIDATE).One("id")
        if !candidates {
            candidates = Roles_Create("role_name,role_type,icon,company_id", CANDIDATE, 2, "", 0)
        }
        voters = DBFind("roles").Where("role_name=? and deleted=0", VOTER).One("id")
        if !voters {
            voters = Roles_Create("role_name,role_type,icon,company_id", VOTER, 1, "", 0)
            Roles_Assign("rid,member_id", voters, $key_id)
        }

        var typeParticipants typeDecision typeVoting templateId kid duration int title tableWritten rowId columnName newValue textDocument string
        tableWritten = "tests"
        rowId = "1"
        columnName = "value1"
        duration = 1
        typeDecision = 1
        typeVoting = 1
        while typeDecision <= 5 {
            typeParticipants = 1
            while typeParticipants <= 3 {
                if typeParticipants != 2 { // passed with manually entering participants
                    title = Sprintf("New Voting d%v:p%v:v%v", typeDecision, typeParticipants, typeVoting)
                    templateId = voting_TemplateStore("Title,TypeParticipants,TypeVoting,TypeDecision,Volume,Quorum,Subject,Voters,Candidates,InitContract,Vacancies,ContractAccept,ParamsAccept,ContractReject,ParamsReject", title, typeParticipants, typeVoting, typeDecision, volume, quorum, SUBJ,Str(voters), Str(candidates), INIT, vacancies, ACCEPT, PARAMS, REJECT, PARAMS)

                    newValue = Sprintf("It is new value for template #%v", templateId)
                    textDocument = Sprintf("Test text Document for voting template #%v", templateId)

                    voting_TemplateRun("TemplateId,Duration,KeyId,TableWritten,RowId,ColumnName,NewValue,TextDocument", templateId, duration, kid, tableWritten, rowId, columnName, newValue, textDocument)
                }
                typeParticipants = typeParticipants + 1
            }
            typeDecision = typeDecision + 1
        }
    }
}