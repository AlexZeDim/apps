Data(form, "Name,Type,Src"){
    Interval,number,
    Aggregate,select,aggregates
}
Data(aggregates, "id,name"){
    max,Maximum
    min,Minimum
    avg,Average
}
Form(){
    ForList(form){
        Div(row form-group){
            Div(col-sm-3 text-right){
                Label(For:#Name#){
                    LangRes(#Name#)
                }
            }
            Div(col-sm-9){
                If(#Type#==datetime){
                    Input(Name:#Name#, Type:date)
                }.ElseIf(#Type#==select){
                    Select(Name: #Name#, Source: #Src#, NameColumn: name, ValueColumn: id)
                }.Else{
                    Input(Name:#Name#, Type:#Type#)
                }
            }
        }
    }
    Div(form-group text-left){
        Button(Body: LangRes(back), Class: btn btn-default, Page: membership_ecosystems_list)
        Button(Body: LangRes(update_metrics), Page: membership_ecosystems_list, Class:btn pull-right btn-primary, Contract:MetricsUpdate)
    }
}