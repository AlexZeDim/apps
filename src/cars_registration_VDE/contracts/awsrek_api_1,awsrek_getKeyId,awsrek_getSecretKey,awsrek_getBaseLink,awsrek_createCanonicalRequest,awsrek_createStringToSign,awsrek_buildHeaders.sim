contract awsrek_api_1 {
}

//Key ID from amazon
func awsrek_getKeyId() string {
	return "AKIAI4XUCOPZY7ZAS6AQ"
}

//Secret key from amazon
func awsrek_getSecretKey() string {
    return "AWS45zdRSFLRALOKsrjQ1FhCjNCuzYeJda3lNOdIavAG"
}

//Base amazon URL for API requests
func awsrek_getBaseLink() string {
    return "https://rekognition.us-east-1.amazonaws.com/"
}

//Creates canonical request http://docs.aws.amazon.com/general/latest/gr/sigv4-create-canonical-request.html
func awsrek_createCanonicalRequest(params map, json_payload string) string {
    var canon string
    canon = "POST\n/\n\n"
    
    var param_keys array
    param_keys = GetMapKeys(params)
	
	var param_len int
	param_len = Len(param_keys)
	
	var can_headers map
	var i int	
    while(i < param_len) {
		var key string
		key = param_keys[i]
		
		var value string
		value = params[key]
		
		can_headers[ ToLower( key ) ] = TrimSpace( value );
		
		i = i + 1
	}
	var sorted_keys array
	sorted_keys = SortedKeys(can_headers)
	i = 0
	while(i < param_len) {
		var key string
		key = sorted_keys[i]
		
		var value string
		value = can_headers[key]
		
		canon = Sprintf("%s%s%s%s%s", canon, key, ":", value, "\n")
		i = i + 1
	}
    canon = Sprintf("%s%s", canon, "\n")
	canon =	Sprintf("%s%s%s", canon, Join(sorted_keys, ";"), "\n")
	canon =	Sprintf("%s%s", canon, Sha256(json_payload))

	return canon
}

//Creates string to sign http://docs.aws.amazon.com/general/latest/gr/sigv4-create-string-to-sign.html
func awsrek_createStringToSign(longDate string, credentialScope string, canon string) string {
	var hash string
	hash = Sha256(canon);
	return Sprintf("AWS4-HMAC-SHA256\n%s\n%s\n%s", longDate, credentialScope, Sha256(canon));
}

//Creates headers for request 
func awsrek_buildHeaders(now_time int, aws_method string, content_length int) map {
	var ret map
	ret["host"] = "rekognition.us-east-1.amazonaws.com"
	ret["content-type"] = "application/x-amz-json-1.1"
	ret["x-amz-date"] = Date("20060102T150405Z", now_time)
	ret["x-amz-target"] = Sprintf("%s%s", "RekognitionService.", aws_method)
	ret["content-length"] = Str(content_length)
	ret["user-agent"] = "LDP"

	return ret
}