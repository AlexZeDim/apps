Div(content-wrapper){
    SetTitle($members$)

    DBFind(Name: keys, Source: src_keys).Columns("id,multi,fin_inst,deleted,blocked").Custom(custom_id){
        Span(Class: h5 text-muted, Body: #id#)
    }.Custom(custom_member_id){
        Span(Class: h5, Body: Address(#id#))
    }.Custom(custom_username){
        SetVar(Name: row_member_name, Value: "")
        DBFind(Name: members, Source: src_member).Columns("id,member_name").Where("id=#id#").Vars(row)
        LinkPage(Class: text-primary h5 text-bold, Page: profile_view, PageParams: "v_member_id=#id#"){
            Div(){
                Span(Em(Class: fa icon-user fa-2x)).Style(margin-right:10px;)
                Span(#row_member_name#)
            }.Style(display:flex; align-items:center;)
        }
    }.Custom(custom_fin){
        If(#fin_inst#>0){
            DBFind(Name: roles, Source: src_adfdf).Columns("id,role_name").Where("id=#fin_inst#").Vars(rosdfw)
            LinkPage(Class: h5 text-primary, Page: roles_view, PageParams: "v_role_id=#rosdfw_id#"){
                Div(){
                    Span(Em(Class: fa icon-settings fa-2x)).Style(margin-right:10px;)
                    Span(#rosdfw_role_name#)
                }.Style(display:flex; align-items:center;)
            }
        }
    }.Custom(custom_action){
        SetVar(check_id, 0)
        DBFind(Name: roles_participants).Columns("id").Where("role->id='#fin_inst#' and member->member_id='#key_id#' and deleted=0").Vars(check)
        If(#check_id#>0){
			If(#deleted#==0){
				Div(Class: pull-right){
					Button(Body: Em(Class: fa icon-trash) Remove, Class: btn btn-danger, Contract: Member_Removing, Params: "member_id=#id#", Page: members_list)
				}
			}
			If(And(#blocked#==0,#deleted#==0)){
				Div(Class: pull-right){
					Button(Body: Em(Class: fa icon-lock) Block, Class: btn btn-warning, Contract: Member_Blocking, Params: "member_id=#id#", Page: members_list)
				}.Style(padding-right:10px;)
			}
			If(And(#blocked#==1,#deleted#==0)){
				Div(Class: pull-right){
					Button(Body: Em(Class: fa icon-note) Restore, Class: btn btn-success, Contract: Member_UnBlocking, Params: "member_id=#id#", Page: members_list)
				}.Style(padding-right:10px;)
			}
        }
    }.Custom(custom_status){
		If(#deleted#==1){
			Span(Class: text-danger h4, Body: Deleted)
		}
		If(And(#deleted#==0,#blocked#==1)){
			Span(Class: text-warning h4, Body: Blocked)
		}
		If(And(#deleted#==0,#blocked#==0)){
			Span(Class: text-success h4, Body: Active)
		}
    }.Where("multi=1 and fin_inst>0")

    Form(panel panel-primary){
        Div(panel-body){
            Div(row){
                Div(col-md-12){
                    Table(Source: src_keys, Columns: "$address$=custom_member_id,Financial institution=custom_fin,Status=custom_status,=custom_action")
                }
            }
        }
    }

    DBFind(Name: roles_participants, Source: src_roles).Columns("id").Where("role->type='4' and member->member_id='#key_id#' and deleted=0").Vars(rl1)
    If(#rl1_id#>0){
        DBFind(Name: keys, Source: src_rec).Columns("id,multi").Custom(custom_id){
            Span(Class: h5 text-muted, Body: #id#)
        }.Custom(custom_member_id){
            Span(Class: text-bold h4, Body: Address(#id#))
        }.Custom(action){
            Div(Class: pull-right){
                Button(Body: Em(Class: fa fa-thumbs-down) Reject, Class: btn btn-danger, Contract: Reject_Request, Params: "member_id=#id#", Page: members_list)
            }
            Div(Class: pull-right){
                Button(Body: Em(Class: fa fa-thumbs-up) Accept, Class: btn btn-success, PageParams: "v_member_id=#id#", Page: profile_edit_member)
            }.Style(padding-right:10px;)
        }.Where("multi=0")

        Form(panel panel-default){
            Div(panel-heading text-center){
                Span(Class: h3, Body: Membership requests)
            }
            Div(panel-body){
                Div(row){
                    Div(col-md-12){
                        Table(Source: src_rec, Columns: "$address$=custom_member_id,$id$=custom_id,=action")
                    }
                }
            }
        }
    }

    DBFind(Name: roles_participants, Source: src_roles).Columns("id").Where("role->type='3' and member->member_id='#key_id#' and deleted=0").Vars(rl2)
    If(#rl2_id#>0){
        DBFind(Name: keys, Source: src_rec).Columns("id,multi").Custom(custom_id){
            Span(Class: h5 text-muted, Body: #id#)
        }.Custom(custom_member_id){
            Span(Class: text-bold h4, Body: Address(#id#))
        }.Custom(action){
            Div(Class: pull-right){
                Button(Body: Em(Class: fa fa-thumbs-down) Reject, Class: btn btn-danger, Contract: Reject_Request, Params: "member_id=#id#", Page: members_list)   
            }
            Div(Class: pull-right){
                Button(Body: Em(Class: fa fa-thumbs-up) Accept, Class: btn btn-success, PageParams: "v_member_id=#id#", Page: profile_edit_institution)
            }.Style(padding-right:10px;)
        }.Where("multi=0")

        Form(panel panel-default){
            Div(panel-heading text-center){
                Span(Class: h3, Body: Requests from financial institutions)
            }
            Div(panel-body){
                Div(row){
                    Div(col-md-12){
                        Table(Source: src_rec, Columns: "$address$=custom_member_id,$id$=custom_id,=action")
                    }
                }
            }
        }
    }


}