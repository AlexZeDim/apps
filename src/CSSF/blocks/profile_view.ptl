Div(content-wrapper){
    SetTitle($user_info$)

    If(Or(#v_member_id#>0,#v_member_id#<0)){
    }.Else{
        SetVar(Name: v_member_id, Value: #key_id#)
    }
    DBFind(Name: members, Source: src_member).Where("id=#v_member_id#").Vars(prefix)
    DBFind(Name: keys, Source: src_keys).Where("id=#key_id#").Vars(tokens)
    
    Form(row){
        Div(col-sm-8 col-sm-offset-2 col-lg-6 col-lg-offset-3){
            Div(panel panel-default){
                Div(panel-heading text-center){
                    Span(Class: h3, Body: LangRes(user_info))
                }
                Div(panel-body){
                    Div(form-group){
                        Div(row){
                            Div(col-md-12 mt-sm text-center){
                                If(Or(#prefix_id#>0,#prefix_id#<0)){
                                    If(#prefix_id# == #key_id#){
                                        Button(Class: btn btn-link, Page: profile_edit, PageParams: "v_member_id=#key_id#"){
                                            Span(Class: fa icon-user fa-5x)
                                            Div(m0 h3 text-bold){#prefix_member_name#}
                                        }
                                    }.Else{
                                        Div(){
                                            Span(Class: fa icon-user fa-5x)
                                            Div(m0 h3 text-bold){#prefix_member_name#}
                                        }
                                    }
                                }.Else{
                                    Span(Class: h3 text-bold, Body: "No profile available")
                                }
                            }
                        }
                    }
                    If(Or(#prefix_id#>0,#prefix_id#<0)){
                        Div(list-group-item text-center){
                            Div(text-muted m0 h5, Body: LangRes(address))
                            Span(Class: h5, Body: Address(#prefix_id#))
                        }
                    }
                    Div(list-group-item text-center){
                        Div(text-muted m0 h5, Body: LangRes(roles))
                        DBFind(Name: roles_participants, Source: src_check).Columns("id").Where("member->member_id='#v_member_id#' and deleted=0").Vars(check)
                        If(#check_id#>0){
                            DBFind(Name: roles_participants, Source: src_roles).Columns("role->id,role->name").Where("member->member_id='#v_member_id#' and deleted=0").Order("id")
                            ForList(src_roles){
                                Span(){
                                    LinkPage(Page: roles_view, PageParams: "v_role_id=#role.id#"){
                                        Span(Class: h5 text-bold, Body: "#role.name#")
                                    }
                                }.Style(margin-right: 5px; margin-left: 5px;)
                            }
                        }.Else{
                            Span(LangRes(no))
                        }
                    }
                    If(Or(#prefix_id#>0,#prefix_id#<0)){
                        If(#prefix_id# == #key_id#){ 
                            Div(list-group-item text-center){
                                Div(text-muted m0 h5, Body: Tokens)
                                    Span(Class:text-bold h4, Body: #tokens_amount# APL)
                            }
                        }
                    }

					DBFind(Name: keys).Where("id=#v_member_id#").Vars(check_b)
                    If(And(#check_b_blocked#==1,#check_b_deleted#==0)){
						Div(list-group-item text-center){
							Div(text-warning text-bold m0 h3, Body: Member blocked)
						}
					}
                    If(#check_b_deleted#==1){
						Div(list-group-item text-center){
							Div(text-danger text-bold m0 h3, Body: Member removed)
						}
					}
                }
            }

            If(Or(#prefix_id#>0,#prefix_id#<0)){
                If(#prefix_id# == #key_id#){
					If(And(#tokens_blocked#==0,#tokens_deleted#==0)){
						Div(panel panel-default){
							Div(panel-heading text-center){
								Span(Class: h3, Body: Sending tokens)
							}
							Div(panel-body){
								Div(list-group-item){
									Div(row){
										Div(col-md-3 mt-sm text-right){
											Label(){
												Span(Body: Recipient)
												Span(Class: text-danger, Body:*)
											}
										}
										Div(col-md-9 mc-sm text-left){
											DBFind(Name: members, Source: source_members).Columns("id,member_name").Where("fin_inst>0 and id != #key_id#").Custom(custom_username){
												Address(#id#)
											}
											Select(Name: Recipient, Source: source_members, NameColumn: custom_username, ValueColumn: id)
										}
									}
								}
								Div(list-group-item){
									Div(row){
										Div(col-md-3 mt-sm text-right){
											Label(){
												Span(Body: Amount (APL))
												Span(Class: text-danger, Body:*)
											}
										}
										Div(col-md-9 mc-sm text-left){
											Input(Name: Amount, Type: Money)
										}
									}
								}
								Div(row){
									Div(col-md-12 mt-lg text-right){
										Button(Body: Send, Class: btn btn-primary, Contract: TokensTransfer, Page: transactions)
									}
								}
							}
						}
					}
                }
            }

        }
    }
}