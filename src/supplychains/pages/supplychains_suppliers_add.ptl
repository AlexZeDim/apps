Div(Class: content-wrapper){

    SetTitle($create_supplier$)
	Div(breadcrumb){
        LinkPage($suppliers$, supplychains_suppliers)
        Span(/).Style(margin-right: 10px; margin-left: 10px;)
		Span(Class: text-muted, Body: $create_supplier$)
	}
	
    Div(Class: row df f-valign){
        Div(Class: col-md-3)
        Div(Class: col-md-6){

            Div(Class: panel panel-primary){
                Div(Class: panel-heading, Body: LangRes(create_supplier))
                Form(){

					If(#supplier_id#>0){
						Input(Name: supplier_id, Class: form-control hidden, Type: Number, Value: #supplier_id#)
						DBFind(Name: supplychains_suppliers, Source: src_suppliers).Where(id=#supplier_id#).Vars(prefix)
					}.Else{
						Input(Name: supplier_id, Class: form-control hidden, Type: Number, Value: 0)
						SetVar(Name: prefix_name, Value: "")
						SetVar(Name: prefix_supplier_type, Value: 1)
					}
						
                    Div(Class: list-group-item){
                        Div(Class: row df f-valign){
                            Div(Class: col-md-3 mt-sm text-right){
                                Label(For: supplier_name){
                                    Span(Body: LangRes(name))
                                }
                            }
                            Div(Class: col-md-9 mc-sm text-left){
								Input(Name: supplier_name, Class: form-control, Type: text, Value: #prefix_name#)
                            } 
                        }
                    }
					
                    Div(Class: list-group-item){
                        Div(Class: row df f-valign){
                            Div(Class: col-md-3 mt-sm text-right){
                                Label(For: supplier_type){
                                    Span(Body: LangRes(supplier_type))
                                }
                            }
                            Div(Class: col-md-9 mc-sm text-left){
							   EcosysParam(Name: supply_suppliers, Source: src_supplier_type)
							   Select(Name: supplier_type, Source: src_supplier_type, NameColumn: name, ValueColumn: id, Value: #prefix_supplier_type#)
                            } 
                        }
                    }
					
                    Div(Class: list-group-item){
                        Div(Class: row df f-valign){
                            Div(Class: col-md-3 mt-sm text-right){
                                Label(For: supplier_map){
                                    Span(Body: LangRes(map))
                                }
                            }
                            Div(Class: col-md-9 mc-sm text-left){
								If(#supplier_id#>0){
									InputMap(Name: supplier_map, Type: polygon, MapType: hybrid, Value: #prefix_supplier_map#)
								}.Else{
									InputMap(Name: supplier_map, Type: polygon, MapType: hybrid, Value: `{"zoom":8, "center":{"lat":55.749942860682545,"lng":37.6207172870636}}`)
								}
                            } 
                        }
                    }

                    Div(Class: panel-footer clearfix){
                        Div(Class: pull-right){
                            Button(Body: LangRes(back), Class: btn btn-default, Page: supplychains_suppliers)
                            Button(Body: LangRes(save), Class: btn btn-primary, Page: supplychains_suppliers, Contract: supplychains_suppliers_add)
                        }
                    }
                }

            }
        }

        Div(Class: col-md-3)
    }
}