Div(content-wrapper){

	SetTitle($supply_chain$)
    Div(breadcrumb){
        LinkPage($supply_chain$, supplychains_list)
        Span(/).Style(margin-right: 10px; margin-left: 10px;)
        Span(Class: text-muted, Body: $supply_chain$)
    }
	
	DBFind(supplychains_supply, src_supply).Where("cargo_id = #cargo_id#").Vars("supply")
	
	If(#supply_id# > 0){
		Div(Class: row df f-valign){
			Div(Class: col-md-2)
			Div(Class: col-md-8){
			
				Div(Class: panel panel-primary){
					Form(){
						Input(Name: cargo_id, Class: form-control hidden, Type: Number, Value: #cargo_id#)
						
						Div(Class: list-group-item){
							Div(Class: row df f-valign){
								DBFind(supplychains_cargos, src_cargos).Where("id=#cargo_id#").Vars("cargo")
								
								Div(Class: col-md-3 mt-sm text-center){
									Image(Src: "#cargo_qr_code#").Style(width: 120px;)
								}
								Div(Class: col-md-3 mt-sm text-right){
									Div(Body: LangRes(supplier):)
									Div(Body: LangRes(cargo):)
									If(#supply_step#>-2){
										Div(Body: LangRes(recipient):)
										Div(Body: LangRes(date_dispatch):)
										Div(Body: LangRes(date_receipt):)
									}
									If(#supply_status#>2){
										Div(Body: LangRes(finished_steps):)
									}
								} 
								Div(Class: col-md-6 mt-sm text-left){
									Div(Body: #supply_supplier_name#)
									Div(Body: #supply_cargo_name#)
									If(#supply_step#>-2){
										Div(Body: #supply_recipient_name#)
										Div(Body: DateTime(DateTime: #supply_date_dispatch#, Format: "DD.MM.YYYY"))
										Div(Body: DateTime(DateTime: #supply_date_receipt#, Format: "DD.MM.YYYY"))
									}
									If(#supply_status#>2){
										Div(Body: #supply_step# / #supply_total_steps#)
									}
								} 
							}
						}          
						
						DBFind(supplychains_steps, src_pos).Where("supply_id=#supply_id#").Order("step")
						ForList(src_pos){
						
							SetVar(hol_id, 0)
							SetVar(rec_id, 0)
						
							DBFind(supplychains_steps, src_resource).Where("supply_id=#supply_id# and step=#step#").Vars("resource")
							DBFind(roles_assign, src_hol).Where("role_id=#holder_role_id# and delete=0").Vars("hol")
							DBFind(roles_assign, src_rec).Where("role_id=#receiver_role_id# and delete=0").Vars("rec")
							
							Div(list-group-item) {
								Div(row df f-valign){
									Div(col-md-2 m-xs text-center){
										Div(h5, #holder_name#)
										
										If(Or(#holder_signature#>0,#holder_signature#<0)){
											Div(h5 m0 text-success, LangRes(supply_successfully_signed))
											Div(h5 m0 text-success, DateTime(DateTime: #holder_date_signature#, Format: "DD.MM.YYYY HH:MI"))
										}	
									}
									Div( col-md-3 m-xs text-right){
										If(#hol_id#>0){
											LinkPage(Page: profile_view, PageParams: "v_member_id=#hol_member_id#"){
												Span(Class: h5, Body: #hol_member_name#)
												If(#hol_member_avatar# != ""){
													Image(Src: "#hol_member_avatar#", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-left: 10px;)
												}
											}
										}
									   Div(h6 text-muted, EcosysParam(supply_type, #holder_type#))
									}
									Div( col-md-2 m-xs text-center){
										Div(h4 text-normal, Em(Class: fa fa-arrow-right))
										
										If(#step_photo#==#step#){
											LinkPage(Page: supplychains_view, PageParams: "cargo_id=#cargo_id#"){
												Span(Class: h5, Body: LangRes(supply_hide))
											}
										}.Else{
											If(#resource_photo# != ""){
												LinkPage(Page: supplychains_view, PageParams: "cargo_id=#cargo_id#,step_photo=#step#"){
													Span(Class: h5, Body: LangRes(supply_photo))
												}
											}
										}
									}
									Div( col-md-3 m-xs text-left){
										If(#rec_id#>0){
											LinkPage(Page: profile_view, PageParams: "v_member_id=#rec_member_id#"){
												If(#rec_member_avatar# != ""){
													Image(Src: "#rec_member_avatar#", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)
												}
												Span(Class: h5, Body: #rec_member_name#)
											}
										}
										Div(h6 text-muted, EcosysParam(supply_type,#receiver_type#))
									}
									Div( col-md-2 m-xs text-center){
										Div(h5 , #receiver_name# )
										
										If(Or(#receiver_signature#>0,#receiver_signature#<0)){
											Div(h5 m0 text-success, LangRes(supply_successfully_signed))
											Div(h5 m0 text-success, DateTime(DateTime: #receiver_date_signature#, Format: "DD.MM.YYYY HH:MI"))
										}
									}
								}
								
								If(#step_photo#==#step#){
									Div(row df f-valign){
										Div(col-md-12 m-xs text-center){
											Image(Src: "#resource_photo#").Style(width: 450px;)
										}
									}
								}
							}
						}

						If(#supply_step#==-2){
							Div(Class: list-group-item){
								Div(Class: row df f-valign){
									Div(Class: col-md-4 mt-sm text-right){
										Label(){
											Span(Body: LangRes(recipient))
										}
									}
									Div(Class: col-md-8 mb-sm text-left){
										DBFind(supplychains_recipients, src_recipientsList).Columns(name,id).Where("delete=0")
										Select(Source: src_recipientsList, Name: recipient_id, NameColumn: name, ValueColumn: id)
									}
								}
								Div(Class: row df f-valign){
									Div(Class: col-md-4 mt-sm text-right){
										Label(){
											Span(Body: LangRes(date_dispatch))
										}
									}
									Div(Class: col-md-8 mb-sm text-left){
										Input(Name: date_dispatch, Class: form-control, Type: date, Value: Now("YYYY-MM-DD"))
									}
								}
								Div(Class: row df f-valign){
									Div(Class: col-md-4 mt-sm text-right){
										Label(){
											Span(Body: LangRes(date_receipt))
										}
									}
									Div(Class: col-md-8 mc-sm text-left){
										Input(Name: date_receipt, Class: form-control, Type: date, Value: Now("YYYY-MM-DD", 10 days))
									}
								}
							}
						}
						
						If(#supply_step#==-1){
							Div(Class: list-group-item){
								Div(Class: row df f-valign){
									Div(Class: col-md-4 mt-sm text-right){
										Label(){
											Span(Body: LangRes(transport_company))
										}
									}
									Div(Class: col-md-8 mc-sm text-left){
										DBFind(supplychains_transport, src_transport).Where("delete=0")
										Select(Name: transport_id, Source: src_transport, NameColumn: name, ValueColumn: id)
									}
								}
							}
						}
						
						If(And(#supply_step#>-1,#supply_status#==1)){
							Div(Class: list-group-item){
								Div(Class: row df f-valign){
									Div(Class: col-md-4 mt-sm text-right){
										Label(){
											Span(Body: LangRes(transport_company))
										}
									}
									Div(Class: col-md-8 mb-sm text-left){
										Div(Class: input-group){
											DBFind(supplychains_transport, src_transport).Where("delete=0")
											Select(Name: transport_id, Source: src_transport, NameColumn: name, ValueColumn: id)
											Div(Class: input-group-btn){
												Button(Contract: supplychains_step_add, Body: LangRes(next_step), Params: "cargo_id=#cargo_id#,transport_id=Val(transport_id),warehouse_id=0,param=1", Page: supplychains_view, PageParams: "cargo_id=#cargo_id#", Class: btn btn-primary)
											}
										}
									}
								}
								Div(Class: row df f-valign){
									Div(Class: col-md-4 mt-sm text-right){
										Label(){
											Span(Body: LangRes(warehouse))
										}
									}
									Div(Class: col-md-8 mc-sm text-left){
										Div(Class: input-group){
											DBFind(supplychains_warehouses, src_warehouses).Where("delete=0")
											Select(Name: warehouse_id, Source: src_warehouses, NameColumn: name, ValueColumn: id)
											Div(Class: input-group-btn){
												Button(Contract: supplychains_step_add, Body: LangRes(next_step), Params: "cargo_id=#cargo_id#,transport_id=0,warehouse_id=Val(warehouse_id),param=2", Page: supplychains_view, PageParams: "cargo_id=#cargo_id#", Class: btn btn-primary)
											}
										}
									}
								}
							}
						}
						

						If(#supply_step#==-2){
							Div(Class: panel-footer clearfix){
								Div(Class: pull-right){
									Button(Body: LangRes(next_step), Class: btn btn-primary, Contract: supplychains_supply_add_recipient, Params: "cargo_id=#cargo_id#, recipient_id=Val(recipient_id), date_dispatch=Val(date_dispatch), date_receipt=Val(date_receipt)", Page: supplychains_view, PageParams: "cargo_id=#cargo_id#")
								}
							}
						}
						If(#supply_step#==-1){
							Div(Class: panel-footer clearfix){
								Div(Class: pull-right){
									Button(Body: LangRes(next_step), Class: btn btn-primary, Contract: supplychains_supply_add_transport, Params: "cargo_id=#cargo_id#, transport_id=Val(transport_id)", Page: supplychains_view, PageParams: "cargo_id=#cargo_id#")
								}
							}
						}
						If(And(#supply_step#>-1,#supply_status#==1)){
							Div(Class: panel-footer clearfix){
								Div(Class: pull-right){
									Button(Body: LangRes(recipient_point), Class: btn btn-primary, Contract: supplychains_recipient_point, Params: "cargo_id=#cargo_id#", Page: supplychains_view, PageParams: "cargo_id=#cargo_id#")
								}
							}
						}
						If(#supply_status#==2){
							Div(Class: panel-footer clearfix){
								Div(Class: pull-right){
									Button(Body: LangRes(start_supply_chain), Class: btn btn-primary, Contract: supplychains_start, Params: "cargo_id=#cargo_id#", Page: supplychains_view, PageParams: "cargo_id=#cargo_id#")
								}
							}
						}

					}
				}
			}
			Div(Class: col-md-3)
		}
    }.Else{
        Div(Class: md-12 alert alert-danger text-center){
            Span(Body: LangRes(supply_chain_not_created))
        }
    }
}