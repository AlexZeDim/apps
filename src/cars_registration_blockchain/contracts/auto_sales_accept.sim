contract auto_sales_accept {
    data {
        protocol_id int
    }

    conditions {
		$protocol = DBFind("vde_registration_protocols").Where("id=$", $protocol_id).Row()
		if ($protocol["id"] == nil){
			warning "Protocol not found"
		}

		$new_num_str = "DL 01 AA 0000"
		$new_num = DBFind("registration_auto").Columns("id").Order("id desc").One("id")
		if ($new_num != nil){
			var new_num_int int
            new_num_int = Int($new_num)
            
            if ((new_num_int >= 0) && (new_num_int < 10)) {
                $new_num_str = "DL 01 AA 000" + string($new_num)
            }
            if ((new_num_int >= 10) && (new_num_int < 100)) {
                $new_num_str = "DL 01 AA 00" + string($new_num)
            }
            if ((new_num_int >= 100) && (new_num_int < 1000)) {
                $new_num_str = "DL 01 AA 0" + string($new_num)
            }
            if ((new_num_int >= 1000) && (new_num_int < 10000)) {
                $new_num_str = "DL 01 AA " + string($new_num)
            }
        }
	}

    action {
        $auto_info = string($protocol["auto_manufacturer"]) + " " + string($protocol["auto_model"])

        DBInsert("registration_auto", "auto_id,engine_number,chassis_number,auto_info,member_id,member_info,member_photo,timestamp registration_date,delete,registration_number,protocol_id",
            Int($protocol["auto_id"]), string($protocol["engine_number"]), string($protocol["chassis_number"]), $auto_info,
            Int($protocol["member_id"]), string($protocol["member_name"]), string($protocol["member_photo"]), $block_time, 0, $new_num_str, string($protocol["id"]))

        DBUpdate("vde_registration_protocols", $protocol_id, "status,reviewer_id,timestamp review_date", 1, $key_id, $time)
    }
}