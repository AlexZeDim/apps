DBFind(applications).Columns("id").Where("name='Rope accounting' AND deleted=0").Vars(application)
SetTitle($rope_depths$)
DBFind(rope_depths).Where("deleted=0 and (status_final=0 or status_started=0)").Count(count)
DBFind(rope_drillings,drillings).Columns("id,filial").Where("deleted=0").Count(d_count).Custom(_name){#filial#}
DBFind(rope_coils,coils).Columns("id,certificate").Where("deleted=0").Count(c_count).Custom(_name){#certificate#}
Include(rope_common)

SetVar(page_name,rope_depths)
If(#page#>0){
    SetVar(prev_page,Calculate(#page#-1)
}.Else{
    SetVar(page,0).(prev_page,0)
}
SetVar(per_page,25).(off,Calculate(#page#*#per_page#)).(last_page,Calculate(#count#/#per_page#)).(next_page,#last_page#)
If(#count#>Calculate(#off#+#per_page#)){
    SetVar(next_page,Calculate(#page#+1)
}

Div(content-wrapper){
    If(And(#r1#>0,#r2#>0,#r3#>0)){
        Div(text-right){
            DBFind(buffer_data,data).Where("key='rope_import' and member_id=#key_id#").Vars(buf)
            If(And(#buf_id#>0,#count#>0)){
                Button(Body: "Сверить данные", Class: btn btn-default, Page: rope_works).CompositeContract(Name:RopeDepthsUpdateWrapper, Data: #buf_value#)
            }
        }
        If(And(#count#>0,Or(#c_count#>0,#d_count#>1))){
            Form(form-group mt){
                Div(row){
                    Div(col-sm-5){
                        Label(For: DrillingId){$rope_select_drilling$}
                        Select(Name: DrillingId, Source: drillings, NameColumn: _name, ValueColumn: id, Value: #DrillingId#)
                    }
                    Div(col-sm-7){
                        Label(For: CoilId){$rope_select_coil$}
                        Div(input-group){
                            Select(Name: CoilId, Source: coils, NameColumn: _name, ValueColumn: id, Value: #CoilId#)
                            Div(input-group-btn){
                                Button(Body: Span(Class:fa fa-search), Class: btn btn-default, Page: #page_name#, PageParams: "CoilId=Val(CoilId),DrillingId=Val(DrillingId)")
                                If(Or(GetVar(DrillingId),GetVar(CoilId))){
                                    Button(Body: Span(Class: fa fa-remove), Class: btn btn-default, Page: #page_name#)
                                }
                            }
                        }

                    }
                }
            }.Style(max-width:600px;)
        }
        If(#count#>0){
            Div(button-group){
                If(#page#>0){
                    Button(Body:"1", Class:btn btn-default, Page:#page_name#, PageParams: "page=0,CoilId=#CoilId#,DrillingId=#DrillingId#")
                }.Else{
                    Button(Body:"1", Class:btn btn-default disabled)
                }
                If(#page#>1){
                    Button(Body:Calculate(#prev_page#+1), Class:btn btn-default, Page:#page_name#, PageParams: "page=#prev_page#,CoilId=#CoilId#,DrillingId=#DrillingId#")
                }
                If(And(#page#>0,#page#<#last_page#)){
                    Button(Body:Calculate(#page#+1), Class:btn btn-default disabled)
                }
                If(#next_page#<#last_page#){
                    Button(Body:Calculate(#next_page#+1), Class:btn btn-default, Page:#page_name#, PageParams: "page=#next_page#,CoilId=#CoilId#,DrillingId=#DrillingId#")
                }
                If(#page#<#last_page#){
                    Button(Body:Calculate(#last_page#+1), Class:btn btn-default, Page:#page_name#, PageParams: "page=#last_page#,CoilId=#CoilId#,DrillingId=#DrillingId#")
                }.ElseIf(#last_page#>0){
                    Button(Body:Calculate(#last_page#+1), Class:btn btn-default disabled)
                }
            }
            Form(panel panel-primary){
                Div(panel-body){
                    Div(row){
                        Div(col-md-12){
                            Div(table-responsive){

                                DBFind(rope_depths, src_depths).Custom(_started){
                                    If(#status_started#==0){
                                        If(And(#manufacturer_started#==#producer_started#,#producer_started#==#servicer_started#)){
                                            ArrayToSource(src_started#id#, [#manufacturer_started#])
                                        }.Else{
                                            ArrayToSource(src_started#id#, [#manufacturer_started#,#producer_started#,#servicer_started#])
                                        }
                                        Select(Name: StartedValues, Source: src_started#id#,NameColumn: value, ValueColumn: value)
                                        Input(Name: StartedIds, Type:hidden, Value: #id#)
                                    }.Else{
                                        Div(text-success){LangRes(rope_data_confirmed)}
                                        #depth_started#
                                        Input(Name: StartedValues, Type:hidden, Value: 0)
                                        Input(Name: StartedIds, Type:hidden, Value: 0)
                                    }
                                }.Custom(_final){
                                    If(#status_final#==0){
                                        If(And(#manufacturer_started#==#producer_started#,#producer_started#==#servicer_started#)){
                                            ArrayToSource(src_started#id#, [#manufacturer_started#])
                                        }.Else{
                                            ArrayToSource(src_final#id#, [#manufacturer_final#,#producer_final#,#servicer_final#])
                                        }
                                        Select(Name: FinalValues, Source: src_final#id#,NameColumn: value, ValueColumn: value)
                                        Input(Name: FinalIds, Type:hidden, Value: #id#)
                                    }.Else{
                                        Div(text-success){LangRes(rope_data_confirmed)}
                                        #depth_final#
                                        Input(Name: FinalValues, Type:hidden, Value: 0)
                                        Input(Name: FinalIds, Type:hidden, Value: 0)
                                    }
                                }.Where("deleted=0 and (status_final=0 or status_started=0)").Order("id").Offset(#off#)
                                Table(src_depths,"id,$rope_drilling_id$=drilling_id,$rope_coil_id$=coil_id,$rope_operation$=operation,$rope_depth_started$=_started,$rope_depth_final$=_final")
                            }
                        }
                    }
                }
                Div(panel-footer text-right){
                    Button(Class: btn btn-primary, Body: $rope_send$, Page: rope_depths, Contract: RopeDepthsUpdate, Params: "Id=#id#,Value=#servicer_final#,Type=final")
                }
            }
        }.ElseIf(And(#count#>0,#import_count#<2)){
            Div(){
                $rope_hint1$
            }
            Div(){
                $rope_hint3$: #missed_r1# #missed_r2# #missed_r3#
            }
        }.Else{
            Div(row){
                Div(text-center h3){
                    LangRes(rope_all_depths_ok)
                }
            }
        }
    }.Else{
        Include(rope_params_helper)
    }
}.Style(
    th,td {text-align:center;}
    .radio {display:inline-block;margin-right:10px;}
)