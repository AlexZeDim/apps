contract land_registry_CheckDate {
    data {
        now_time_d int
        now_time_m int
        now_time_y int
    }

    conditions {

        var v_now_time_d string
        var v_now_time_m_minus string
        var v_now_time_m_real string
        var v_now_time_y string

        if ($now_time_d < 10){
            v_now_time_d = "0" + Str($now_time_d)
        } else {
            v_now_time_d = Str($now_time_d)
        }

        if ($now_time_m < 10){
            v_now_time_m_minus = "0" + Str($now_time_m - 1)
            v_now_time_m_real = "0" + Str($now_time_m)
        } else {
            v_now_time_m_minus = Str($now_time_m-1)
            v_now_time_m_real =  Str($now_time_m)
        }

        v_now_time_y = Str($now_time_y)


        $now_time_minus = Sprintf("%v-%v-%v", v_now_time_y, v_now_time_m_minus, v_now_time_d)
        $now_time_real = Sprintf("%v-%v-%v", v_now_time_y, v_now_time_m_real, v_now_time_d)

        //warning  $now_time_minus
    }

    action {

        //обнуляем request_status у всех записей
        $i = 0
        $ret_land = DBFind("land_registry").Where("id > 0").Order("id")

        while ($i < Len($ret_land)) {
            var vals_land map
            vals_land = $ret_land[$i]

            var land_id int
            land_id = Int(vals_land["id"])

            DBUpdate("land_registry", land_id, "request_status", 0)

            $i = $i + 1
        }

        // аренда кончилась - залог возвращен
        $i = 0
        $ret_land = DBFind("land_registry").Where("isleasing > $", 0).Order("id")

        while ($i < Len($ret_land)) {
            var vals_land map
            vals_land = $ret_land[$i]

            var land_id int
            land_id = Int(vals_land["id"])

            $leasing_map = DBFind("land_registry_leasing").Where("date_finish <= $ and land_id=$ and status > 0", $now_time_real, land_id).Row()
            if $leasing_map {

                $sender_map = DBFind("accounts").Where("onhold=$ and member_id=$", 0, Str(vals_land["owner_id"])).Row()
                $recipient_map = DBFind("accounts").Where("onhold=$ and member_id=$", 0, Str($leasing_map["member_id"])).Row()
                $sender_amount = DBFind("accounts").Where("id=$", Int($sender_map["id"])).One("amount")

                if (  Money($sender_amount) >= Money(Int(vals_land["leasing_price"]))  ){
                    Tokens_Transfer("sender_id,recipient_id,amount", Int($sender_map["id"]), Int($recipient_map["id"]), Money(Int(vals_land["leasing_price"])))

                    DBInsert("land_registry_history", "sender,recipient,amount,comment,date_create", 
                        Int(vals_land["owner_id"]), Int($leasing_map["member_id"]), Int(vals_land["leasing_price"]), "leasing_return_deposit", Str($now_time_real) + (" 00:00"))
                }

                // статус - аренда кончилась - залог возвращен
                // статус земли - свободна для аренды
                DBUpdate("land_registry", land_id, "isleasing,request_status", 0, 1)

                //статус договора - расторгнут
                DBUpdate("land_registry_leasing", Int($leasing_map["id"]), "status", -1)
            }

            $i = $i + 1
        }


        // списание аренданой платы за месяц для уже работающих договоров
        $i = 0
        $ret_land = DBFind("land_registry").Where("isleasing > $", 0).Order("id")

        while ($i < Len($ret_land)) {
            var vals_land map
            vals_land = $ret_land[$i]

            var land_id int
            land_id = Int(vals_land["id"])

            $leasing_map = DBFind("land_registry_leasing").Where("date_payment <= $ and land_id=$ and status > 0", $now_time_minus, land_id).Row()
            if $leasing_map {

                $sender_map = DBFind("accounts").Where("onhold=$ and member_id=$", 0, Str($leasing_map["member_id"])).Row()
                $recipient_map = DBFind("accounts").Where("onhold=$ and member_id=$", 0, Str(vals_land["owner_id"])).Row()
                $sender_amount = DBFind("accounts").Where("id=$", Int($sender_map["id"])).One("amount")

                if (  Money($sender_amount) >= Money(Int(vals_land["leasing_price"]))  ){
                    Tokens_Transfer("sender_id,recipient_id,amount", Int($sender_map["id"]), Int($recipient_map["id"]), Money(Int(vals_land["leasing_price"])))

                    DBInsert("land_registry_history", "sender,recipient,amount,comment,date_create", 
                        Int($leasing_map["member_id"]), Int(vals_land["owner_id"]), Int(vals_land["leasing_price"]), "leasing_payment", Str($now_time_real) + (" 00:00"))

                    // статус - списана аренданая плата за месяц
                    DBUpdate("land_registry", land_id, "request_status", 2)

                    // записываем новую дату последнего платежа  
                    DBUpdate("land_registry_leasing", Int($leasing_map["id"]), "date_payment", $now_time_real)
                } else {

                    // статус - не хватило баланса, договор расторгнут
                    // статус земли - свободна для аренды
                    DBUpdate("land_registry", land_id, "isleasing,request_status", Int($leasing_map["id"]), 3)

                    //статус договора - расторгнут
                    DBUpdate("land_registry_leasing", Int($leasing_map["id"]), "status", -1)
                }

            }

            $i = $i + 1
        }



        // первое списание арендной платы и старт договора
        $i = 0
        $ret_land = DBFind("land_registry").Where("isleasing = $", 0).Order("id")

        while ($i < Len($ret_land)) {
            var vals_land map
            vals_land = $ret_land[$i]

            var land_id int
            land_id = Int(vals_land["id"])

            $leasing_map = DBFind("land_registry_leasing").Where("date_start <= $ and land_id=$ and status > 0", $now_time_real, land_id).Row()
            if $leasing_map {

                $sender_map = DBFind("accounts").Where("onhold=$ and member_id=$", 0, Str($leasing_map["member_id"])).Row()
                $recipient_map = DBFind("accounts").Where("onhold=$ and member_id=$", 0, Str(vals_land["owner_id"])).Row()
                $sender_amount = DBFind("accounts").Where("id=$", Int($sender_map["id"])).One("amount")

                if (  Money($sender_amount) >= Money(Int(vals_land["leasing_price"]))  ){
                    Tokens_Transfer("sender_id,recipient_id,amount", Int($sender_map["id"]), Int($recipient_map["id"]), Money(Int(vals_land["leasing_price"])))

                    DBInsert("land_registry_history", "sender,recipient,amount,comment,date_create", 
                        Int($leasing_map["member_id"]), Int(vals_land["owner_id"]), Int(vals_land["leasing_price"]), "leasing_payment", Str($now_time_real) + (" 00:00"))

                    // статус - списана аренданая плата за месяц
                    // статус земли - в аренде 
                    DBUpdate("land_registry", land_id, "request_status,isleasing", 2, Int($leasing_map["id"]))

                    // записываем новую дату последнего платежа
                    DBUpdate("land_registry_leasing", Int($leasing_map["id"]), "date_payment", $now_time_real)
                } else {

                    // статус - не хватило баланса, договор расторгнут
                    // статус земли - свободна для аренды
                    DBUpdate("land_registry", land_id, "isleasing,request_status", 0, 3)

                    //статус договора - расторгнут
                    DBUpdate("land_registry_leasing", Int($leasing_map["id"]), "status", -1)
                }

            }

            $i = $i + 1
        }
    }
}